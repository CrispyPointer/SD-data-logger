ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.__NVIC_SystemReset,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	__NVIC_SystemReset:
  26              	.LFB119:
  27              		.file 1 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.1.0
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     13. March 2019
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /*
   8:Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm4.h ****  *
  10:Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm4.h ****  *
  12:Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm4.h ****  *
  16:Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm4.h ****  *
  18:Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm4.h ****  */
  24:Drivers/CMSIS/Include/core_cm4.h **** 
  25:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:Drivers/CMSIS/Include/core_cm4.h **** 
  31:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 2


  32:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm4.h **** 
  36:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:Drivers/CMSIS/Include/core_cm4.h **** 
  40:Drivers/CMSIS/Include/core_cm4.h **** /**
  41:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm4.h **** 
  47:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm4.h ****  */
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm4.h **** /**
  59:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:Drivers/CMSIS/Include/core_cm4.h ****  */
  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm4.h **** 
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm4.h **** */
  76:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm4.h **** 
  88:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 3


  89:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_FP
  90:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm4.h ****   #else
  97:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm4.h **** 
 100:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm4.h **** 
 112:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm4.h **** 
 124:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 4


 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:Drivers/CMSIS/Include/core_cm4.h **** 
 162:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm4.h **** 
 164:Drivers/CMSIS/Include/core_cm4.h **** 
 165:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm4.h **** }
 167:Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:Drivers/CMSIS/Include/core_cm4.h **** 
 169:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm4.h **** 
 171:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm4.h **** 
 173:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm4.h **** 
 176:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:Drivers/CMSIS/Include/core_cm4.h **** 
 180:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm4.h **** 
 197:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm4.h **** 
 202:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 5


 203:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** #endif
 207:Drivers/CMSIS/Include/core_cm4.h **** 
 208:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:Drivers/CMSIS/Include/core_cm4.h **** /**
 210:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:Drivers/CMSIS/Include/core_cm4.h **** 
 212:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:Drivers/CMSIS/Include/core_cm4.h **** */
 216:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 217:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:Drivers/CMSIS/Include/core_cm4.h **** #else
 219:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:Drivers/CMSIS/Include/core_cm4.h **** #endif
 221:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:Drivers/CMSIS/Include/core_cm4.h **** 
 224:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 225:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:Drivers/CMSIS/Include/core_cm4.h **** 
 231:Drivers/CMSIS/Include/core_cm4.h **** 
 232:Drivers/CMSIS/Include/core_cm4.h **** 
 233:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 234:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 235:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 236:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 237:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 238:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 239:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 240:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 241:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 242:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 243:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 244:Drivers/CMSIS/Include/core_cm4.h **** /**
 245:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:Drivers/CMSIS/Include/core_cm4.h **** */
 248:Drivers/CMSIS/Include/core_cm4.h **** 
 249:Drivers/CMSIS/Include/core_cm4.h **** /**
 250:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 253:Drivers/CMSIS/Include/core_cm4.h ****   @{
 254:Drivers/CMSIS/Include/core_cm4.h ****  */
 255:Drivers/CMSIS/Include/core_cm4.h **** 
 256:Drivers/CMSIS/Include/core_cm4.h **** /**
 257:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:Drivers/CMSIS/Include/core_cm4.h ****  */
 259:Drivers/CMSIS/Include/core_cm4.h **** typedef union
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 6


 260:Drivers/CMSIS/Include/core_cm4.h **** {
 261:Drivers/CMSIS/Include/core_cm4.h ****   struct
 262:Drivers/CMSIS/Include/core_cm4.h ****   {
 263:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 274:Drivers/CMSIS/Include/core_cm4.h **** 
 275:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 276:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:Drivers/CMSIS/Include/core_cm4.h **** 
 279:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:Drivers/CMSIS/Include/core_cm4.h **** 
 282:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:Drivers/CMSIS/Include/core_cm4.h **** 
 285:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:Drivers/CMSIS/Include/core_cm4.h **** 
 288:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:Drivers/CMSIS/Include/core_cm4.h **** 
 291:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:Drivers/CMSIS/Include/core_cm4.h **** 
 294:Drivers/CMSIS/Include/core_cm4.h **** 
 295:Drivers/CMSIS/Include/core_cm4.h **** /**
 296:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:Drivers/CMSIS/Include/core_cm4.h ****  */
 298:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 299:Drivers/CMSIS/Include/core_cm4.h **** {
 300:Drivers/CMSIS/Include/core_cm4.h ****   struct
 301:Drivers/CMSIS/Include/core_cm4.h ****   {
 302:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 307:Drivers/CMSIS/Include/core_cm4.h **** 
 308:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 309:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:Drivers/CMSIS/Include/core_cm4.h **** 
 312:Drivers/CMSIS/Include/core_cm4.h **** 
 313:Drivers/CMSIS/Include/core_cm4.h **** /**
 314:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:Drivers/CMSIS/Include/core_cm4.h ****  */
 316:Drivers/CMSIS/Include/core_cm4.h **** typedef union
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 7


 317:Drivers/CMSIS/Include/core_cm4.h **** {
 318:Drivers/CMSIS/Include/core_cm4.h ****   struct
 319:Drivers/CMSIS/Include/core_cm4.h ****   {
 320:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 335:Drivers/CMSIS/Include/core_cm4.h **** 
 336:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 337:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:Drivers/CMSIS/Include/core_cm4.h **** 
 340:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:Drivers/CMSIS/Include/core_cm4.h **** 
 343:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:Drivers/CMSIS/Include/core_cm4.h **** 
 346:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:Drivers/CMSIS/Include/core_cm4.h **** 
 349:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:Drivers/CMSIS/Include/core_cm4.h **** 
 352:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:Drivers/CMSIS/Include/core_cm4.h **** 
 355:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:Drivers/CMSIS/Include/core_cm4.h **** 
 358:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm4.h **** 
 361:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm4.h **** 
 364:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm4.h **** 
 367:Drivers/CMSIS/Include/core_cm4.h **** 
 368:Drivers/CMSIS/Include/core_cm4.h **** /**
 369:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:Drivers/CMSIS/Include/core_cm4.h ****  */
 371:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 372:Drivers/CMSIS/Include/core_cm4.h **** {
 373:Drivers/CMSIS/Include/core_cm4.h ****   struct
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 8


 374:Drivers/CMSIS/Include/core_cm4.h ****   {
 375:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 382:Drivers/CMSIS/Include/core_cm4.h **** 
 383:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 384:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:Drivers/CMSIS/Include/core_cm4.h **** 
 387:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:Drivers/CMSIS/Include/core_cm4.h **** 
 390:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:Drivers/CMSIS/Include/core_cm4.h **** 
 393:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:Drivers/CMSIS/Include/core_cm4.h **** 
 395:Drivers/CMSIS/Include/core_cm4.h **** 
 396:Drivers/CMSIS/Include/core_cm4.h **** /**
 397:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:Drivers/CMSIS/Include/core_cm4.h ****   @{
 401:Drivers/CMSIS/Include/core_cm4.h ****  */
 402:Drivers/CMSIS/Include/core_cm4.h **** 
 403:Drivers/CMSIS/Include/core_cm4.h **** /**
 404:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:Drivers/CMSIS/Include/core_cm4.h ****  */
 406:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 407:Drivers/CMSIS/Include/core_cm4.h **** {
 408:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 412:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 422:Drivers/CMSIS/Include/core_cm4.h **** 
 423:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:Drivers/CMSIS/Include/core_cm4.h **** 
 427:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:Drivers/CMSIS/Include/core_cm4.h **** 
 429:Drivers/CMSIS/Include/core_cm4.h **** 
 430:Drivers/CMSIS/Include/core_cm4.h **** /**
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 9


 431:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:Drivers/CMSIS/Include/core_cm4.h ****   @{
 435:Drivers/CMSIS/Include/core_cm4.h ****  */
 436:Drivers/CMSIS/Include/core_cm4.h **** 
 437:Drivers/CMSIS/Include/core_cm4.h **** /**
 438:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:Drivers/CMSIS/Include/core_cm4.h ****  */
 440:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 441:Drivers/CMSIS/Include/core_cm4.h **** {
 442:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 464:Drivers/CMSIS/Include/core_cm4.h **** 
 465:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:Drivers/CMSIS/Include/core_cm4.h **** 
 469:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:Drivers/CMSIS/Include/core_cm4.h **** 
 472:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:Drivers/CMSIS/Include/core_cm4.h **** 
 475:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:Drivers/CMSIS/Include/core_cm4.h **** 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:Drivers/CMSIS/Include/core_cm4.h **** 
 481:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** 
 485:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 10


 488:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:Drivers/CMSIS/Include/core_cm4.h **** 
 491:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm4.h **** 
 494:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm4.h **** 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm4.h **** 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:Drivers/CMSIS/Include/core_cm4.h **** 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:Drivers/CMSIS/Include/core_cm4.h **** 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:Drivers/CMSIS/Include/core_cm4.h **** 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm4.h **** 
 512:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** 
 516:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** 
 520:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm4.h **** 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm4.h **** 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm4.h **** 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm4.h **** 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm4.h **** 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm4.h **** 
 538:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 539:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** 
 542:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 11


 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm4.h **** 
 548:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm4.h **** 
 552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm4.h **** 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm4.h **** 
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm4.h **** 
 561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm4.h **** 
 564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm4.h **** 
 567:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** 
 571:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm4.h **** 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm4.h **** 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm4.h **** 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm4.h **** 
 583:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm4.h **** 
 586:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm4.h **** 
 589:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm4.h **** 
 592:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm4.h **** 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm4.h **** 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm4.h **** 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 12


 602:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm4.h **** 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm4.h **** 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm4.h **** 
 610:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm4.h **** 
 614:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm4.h **** 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm4.h **** 
 620:Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** 
 624:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm4.h **** 
 627:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm4.h **** 
 630:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm4.h **** 
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm4.h **** 
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm4.h **** 
 639:Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:Drivers/CMSIS/Include/core_cm4.h **** 
 643:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:Drivers/CMSIS/Include/core_cm4.h **** 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:Drivers/CMSIS/Include/core_cm4.h **** 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:Drivers/CMSIS/Include/core_cm4.h **** 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:Drivers/CMSIS/Include/core_cm4.h **** 
 655:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:Drivers/CMSIS/Include/core_cm4.h **** 
 658:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 13


 659:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:Drivers/CMSIS/Include/core_cm4.h **** 
 661:Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** 
 665:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:Drivers/CMSIS/Include/core_cm4.h **** 
 668:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:Drivers/CMSIS/Include/core_cm4.h **** 
 671:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:Drivers/CMSIS/Include/core_cm4.h **** 
 674:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:Drivers/CMSIS/Include/core_cm4.h **** 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:Drivers/CMSIS/Include/core_cm4.h **** 
 680:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** 
 684:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:Drivers/CMSIS/Include/core_cm4.h **** 
 687:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:Drivers/CMSIS/Include/core_cm4.h **** 
 690:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:Drivers/CMSIS/Include/core_cm4.h **** 
 694:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:Drivers/CMSIS/Include/core_cm4.h **** 
 697:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:Drivers/CMSIS/Include/core_cm4.h **** 
 700:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:Drivers/CMSIS/Include/core_cm4.h **** 
 703:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:Drivers/CMSIS/Include/core_cm4.h **** 
 706:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:Drivers/CMSIS/Include/core_cm4.h **** 
 708:Drivers/CMSIS/Include/core_cm4.h **** 
 709:Drivers/CMSIS/Include/core_cm4.h **** /**
 710:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:Drivers/CMSIS/Include/core_cm4.h ****   @{
 714:Drivers/CMSIS/Include/core_cm4.h ****  */
 715:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 14


 716:Drivers/CMSIS/Include/core_cm4.h **** /**
 717:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:Drivers/CMSIS/Include/core_cm4.h ****  */
 719:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 720:Drivers/CMSIS/Include/core_cm4.h **** {
 721:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 725:Drivers/CMSIS/Include/core_cm4.h **** 
 726:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:Drivers/CMSIS/Include/core_cm4.h **** 
 730:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:Drivers/CMSIS/Include/core_cm4.h **** 
 734:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:Drivers/CMSIS/Include/core_cm4.h **** 
 737:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:Drivers/CMSIS/Include/core_cm4.h **** 
 740:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:Drivers/CMSIS/Include/core_cm4.h **** 
 743:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:Drivers/CMSIS/Include/core_cm4.h **** 
 746:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:Drivers/CMSIS/Include/core_cm4.h **** 
 748:Drivers/CMSIS/Include/core_cm4.h **** 
 749:Drivers/CMSIS/Include/core_cm4.h **** /**
 750:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:Drivers/CMSIS/Include/core_cm4.h ****   @{
 754:Drivers/CMSIS/Include/core_cm4.h ****  */
 755:Drivers/CMSIS/Include/core_cm4.h **** 
 756:Drivers/CMSIS/Include/core_cm4.h **** /**
 757:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:Drivers/CMSIS/Include/core_cm4.h ****  */
 759:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 760:Drivers/CMSIS/Include/core_cm4.h **** {
 761:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 766:Drivers/CMSIS/Include/core_cm4.h **** 
 767:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:Drivers/CMSIS/Include/core_cm4.h **** 
 771:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 15


 773:Drivers/CMSIS/Include/core_cm4.h **** 
 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:Drivers/CMSIS/Include/core_cm4.h **** 
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:Drivers/CMSIS/Include/core_cm4.h **** 
 780:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:Drivers/CMSIS/Include/core_cm4.h **** 
 784:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:Drivers/CMSIS/Include/core_cm4.h **** 
 788:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:Drivers/CMSIS/Include/core_cm4.h **** 
 792:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:Drivers/CMSIS/Include/core_cm4.h **** 
 795:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:Drivers/CMSIS/Include/core_cm4.h **** 
 798:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:Drivers/CMSIS/Include/core_cm4.h **** 
 800:Drivers/CMSIS/Include/core_cm4.h **** 
 801:Drivers/CMSIS/Include/core_cm4.h **** /**
 802:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:Drivers/CMSIS/Include/core_cm4.h ****   @{
 806:Drivers/CMSIS/Include/core_cm4.h ****  */
 807:Drivers/CMSIS/Include/core_cm4.h **** 
 808:Drivers/CMSIS/Include/core_cm4.h **** /**
 809:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:Drivers/CMSIS/Include/core_cm4.h ****  */
 811:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 812:Drivers/CMSIS/Include/core_cm4.h **** {
 813:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 814:Drivers/CMSIS/Include/core_cm4.h ****   {
 815:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 826:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 827:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 16


 830:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 843:Drivers/CMSIS/Include/core_cm4.h **** 
 844:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:Drivers/CMSIS/Include/core_cm4.h **** 
 848:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** 
 852:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:Drivers/CMSIS/Include/core_cm4.h **** 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:Drivers/CMSIS/Include/core_cm4.h **** 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:Drivers/CMSIS/Include/core_cm4.h **** 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:Drivers/CMSIS/Include/core_cm4.h **** 
 864:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:Drivers/CMSIS/Include/core_cm4.h **** 
 867:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:Drivers/CMSIS/Include/core_cm4.h **** 
 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:Drivers/CMSIS/Include/core_cm4.h **** 
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:Drivers/CMSIS/Include/core_cm4.h **** 
 876:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** 
 880:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:Drivers/CMSIS/Include/core_cm4.h **** 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:Drivers/CMSIS/Include/core_cm4.h **** 
 886:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 17


 887:Drivers/CMSIS/Include/core_cm4.h **** 
 888:Drivers/CMSIS/Include/core_cm4.h **** 
 889:Drivers/CMSIS/Include/core_cm4.h **** /**
 890:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:Drivers/CMSIS/Include/core_cm4.h ****   @{
 894:Drivers/CMSIS/Include/core_cm4.h ****  */
 895:Drivers/CMSIS/Include/core_cm4.h **** 
 896:Drivers/CMSIS/Include/core_cm4.h **** /**
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:Drivers/CMSIS/Include/core_cm4.h ****  */
 899:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 900:Drivers/CMSIS/Include/core_cm4.h **** {
 901:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 925:Drivers/CMSIS/Include/core_cm4.h **** 
 926:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 927:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm4.h **** 
 930:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:Drivers/CMSIS/Include/core_cm4.h **** 
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:Drivers/CMSIS/Include/core_cm4.h **** 
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:Drivers/CMSIS/Include/core_cm4.h **** 
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:Drivers/CMSIS/Include/core_cm4.h **** 
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 18


 944:Drivers/CMSIS/Include/core_cm4.h **** 
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:Drivers/CMSIS/Include/core_cm4.h **** 
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:Drivers/CMSIS/Include/core_cm4.h **** 
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:Drivers/CMSIS/Include/core_cm4.h **** 
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:Drivers/CMSIS/Include/core_cm4.h **** 
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:Drivers/CMSIS/Include/core_cm4.h **** 
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:Drivers/CMSIS/Include/core_cm4.h **** 
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:Drivers/CMSIS/Include/core_cm4.h **** 
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:Drivers/CMSIS/Include/core_cm4.h **** 
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:Drivers/CMSIS/Include/core_cm4.h **** 
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:Drivers/CMSIS/Include/core_cm4.h **** 
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:Drivers/CMSIS/Include/core_cm4.h **** 
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:Drivers/CMSIS/Include/core_cm4.h **** 
 981:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:Drivers/CMSIS/Include/core_cm4.h **** 
 985:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:Drivers/CMSIS/Include/core_cm4.h **** 
 989:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:Drivers/CMSIS/Include/core_cm4.h **** 
 993:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:Drivers/CMSIS/Include/core_cm4.h **** 
 997:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 19


1001:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:Drivers/CMSIS/Include/core_cm4.h **** 
1005:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:Drivers/CMSIS/Include/core_cm4.h **** 
1009:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:Drivers/CMSIS/Include/core_cm4.h **** 
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:Drivers/CMSIS/Include/core_cm4.h **** 
1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:Drivers/CMSIS/Include/core_cm4.h **** 
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:Drivers/CMSIS/Include/core_cm4.h **** 
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:Drivers/CMSIS/Include/core_cm4.h **** 
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:Drivers/CMSIS/Include/core_cm4.h **** 
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:Drivers/CMSIS/Include/core_cm4.h **** 
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:Drivers/CMSIS/Include/core_cm4.h **** 
1033:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** 
1036:Drivers/CMSIS/Include/core_cm4.h **** /**
1037:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:Drivers/CMSIS/Include/core_cm4.h ****   @{
1041:Drivers/CMSIS/Include/core_cm4.h ****  */
1042:Drivers/CMSIS/Include/core_cm4.h **** 
1043:Drivers/CMSIS/Include/core_cm4.h **** /**
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:Drivers/CMSIS/Include/core_cm4.h ****  */
1046:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1047:Drivers/CMSIS/Include/core_cm4.h **** {
1048:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 20


1058:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1073:Drivers/CMSIS/Include/core_cm4.h **** 
1074:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:Drivers/CMSIS/Include/core_cm4.h **** 
1078:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:Drivers/CMSIS/Include/core_cm4.h **** 
1082:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:Drivers/CMSIS/Include/core_cm4.h **** 
1086:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:Drivers/CMSIS/Include/core_cm4.h **** 
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:Drivers/CMSIS/Include/core_cm4.h **** 
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:Drivers/CMSIS/Include/core_cm4.h **** 
1095:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:Drivers/CMSIS/Include/core_cm4.h **** 
1099:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:Drivers/CMSIS/Include/core_cm4.h **** 
1102:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:Drivers/CMSIS/Include/core_cm4.h **** 
1106:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:Drivers/CMSIS/Include/core_cm4.h **** 
1110:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:Drivers/CMSIS/Include/core_cm4.h **** 
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 21


1115:Drivers/CMSIS/Include/core_cm4.h **** 
1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:Drivers/CMSIS/Include/core_cm4.h **** 
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:Drivers/CMSIS/Include/core_cm4.h **** 
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:Drivers/CMSIS/Include/core_cm4.h **** 
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:Drivers/CMSIS/Include/core_cm4.h **** 
1128:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:Drivers/CMSIS/Include/core_cm4.h **** 
1132:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:Drivers/CMSIS/Include/core_cm4.h **** 
1135:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:Drivers/CMSIS/Include/core_cm4.h **** 
1139:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:Drivers/CMSIS/Include/core_cm4.h **** 
1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:Drivers/CMSIS/Include/core_cm4.h **** 
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:Drivers/CMSIS/Include/core_cm4.h **** 
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:Drivers/CMSIS/Include/core_cm4.h **** 
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:Drivers/CMSIS/Include/core_cm4.h **** 
1154:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:Drivers/CMSIS/Include/core_cm4.h **** 
1157:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:Drivers/CMSIS/Include/core_cm4.h **** 
1161:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:Drivers/CMSIS/Include/core_cm4.h **** 
1164:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:Drivers/CMSIS/Include/core_cm4.h **** 
1168:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1169:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 22


1172:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:Drivers/CMSIS/Include/core_cm4.h **** 
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:Drivers/CMSIS/Include/core_cm4.h **** 
1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:Drivers/CMSIS/Include/core_cm4.h **** 
1181:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:Drivers/CMSIS/Include/core_cm4.h **** 
1184:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:Drivers/CMSIS/Include/core_cm4.h **** 
1187:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:Drivers/CMSIS/Include/core_cm4.h **** 
1191:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:Drivers/CMSIS/Include/core_cm4.h **** 
1194:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:Drivers/CMSIS/Include/core_cm4.h **** 
1196:Drivers/CMSIS/Include/core_cm4.h **** 
1197:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:Drivers/CMSIS/Include/core_cm4.h **** /**
1199:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1200:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:Drivers/CMSIS/Include/core_cm4.h ****   @{
1203:Drivers/CMSIS/Include/core_cm4.h ****  */
1204:Drivers/CMSIS/Include/core_cm4.h **** 
1205:Drivers/CMSIS/Include/core_cm4.h **** /**
1206:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:Drivers/CMSIS/Include/core_cm4.h ****  */
1208:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1209:Drivers/CMSIS/Include/core_cm4.h **** {
1210:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1222:Drivers/CMSIS/Include/core_cm4.h **** 
1223:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:Drivers/CMSIS/Include/core_cm4.h **** 
1225:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1226:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 23


1229:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:Drivers/CMSIS/Include/core_cm4.h **** 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:Drivers/CMSIS/Include/core_cm4.h **** 
1235:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1236:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm4.h **** 
1239:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:Drivers/CMSIS/Include/core_cm4.h **** 
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:Drivers/CMSIS/Include/core_cm4.h **** 
1245:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1246:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:Drivers/CMSIS/Include/core_cm4.h **** 
1249:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:Drivers/CMSIS/Include/core_cm4.h **** 
1253:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:Drivers/CMSIS/Include/core_cm4.h **** 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:Drivers/CMSIS/Include/core_cm4.h **** 
1259:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** 
1263:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:Drivers/CMSIS/Include/core_cm4.h **** 
1266:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:Drivers/CMSIS/Include/core_cm4.h **** 
1269:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:Drivers/CMSIS/Include/core_cm4.h **** 
1272:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:Drivers/CMSIS/Include/core_cm4.h **** 
1275:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:Drivers/CMSIS/Include/core_cm4.h **** 
1278:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:Drivers/CMSIS/Include/core_cm4.h **** 
1281:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:Drivers/CMSIS/Include/core_cm4.h **** 
1284:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 24


1286:Drivers/CMSIS/Include/core_cm4.h **** 
1287:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:Drivers/CMSIS/Include/core_cm4.h **** 
1290:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:Drivers/CMSIS/Include/core_cm4.h **** 
1293:Drivers/CMSIS/Include/core_cm4.h **** 
1294:Drivers/CMSIS/Include/core_cm4.h **** /**
1295:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1296:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:Drivers/CMSIS/Include/core_cm4.h ****   @{
1299:Drivers/CMSIS/Include/core_cm4.h ****  */
1300:Drivers/CMSIS/Include/core_cm4.h **** 
1301:Drivers/CMSIS/Include/core_cm4.h **** /**
1302:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:Drivers/CMSIS/Include/core_cm4.h ****  */
1304:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1305:Drivers/CMSIS/Include/core_cm4.h **** {
1306:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1307:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1314:Drivers/CMSIS/Include/core_cm4.h **** 
1315:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:Drivers/CMSIS/Include/core_cm4.h **** 
1319:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:Drivers/CMSIS/Include/core_cm4.h **** 
1322:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:Drivers/CMSIS/Include/core_cm4.h **** 
1325:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:Drivers/CMSIS/Include/core_cm4.h **** 
1328:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:Drivers/CMSIS/Include/core_cm4.h **** 
1331:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:Drivers/CMSIS/Include/core_cm4.h **** 
1334:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:Drivers/CMSIS/Include/core_cm4.h **** 
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:Drivers/CMSIS/Include/core_cm4.h **** 
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 25


1343:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:Drivers/CMSIS/Include/core_cm4.h **** 
1347:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:Drivers/CMSIS/Include/core_cm4.h **** 
1351:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:Drivers/CMSIS/Include/core_cm4.h **** 
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:Drivers/CMSIS/Include/core_cm4.h **** 
1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:Drivers/CMSIS/Include/core_cm4.h **** 
1360:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:Drivers/CMSIS/Include/core_cm4.h **** 
1364:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:Drivers/CMSIS/Include/core_cm4.h **** 
1367:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:Drivers/CMSIS/Include/core_cm4.h **** 
1370:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:Drivers/CMSIS/Include/core_cm4.h **** 
1373:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:Drivers/CMSIS/Include/core_cm4.h **** 
1376:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:Drivers/CMSIS/Include/core_cm4.h **** 
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:Drivers/CMSIS/Include/core_cm4.h **** 
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:Drivers/CMSIS/Include/core_cm4.h **** 
1385:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** 
1389:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:Drivers/CMSIS/Include/core_cm4.h **** 
1392:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:Drivers/CMSIS/Include/core_cm4.h **** 
1395:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:Drivers/CMSIS/Include/core_cm4.h **** 
1398:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 26


1400:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:Drivers/CMSIS/Include/core_cm4.h **** 
1405:Drivers/CMSIS/Include/core_cm4.h **** 
1406:Drivers/CMSIS/Include/core_cm4.h **** /**
1407:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1408:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:Drivers/CMSIS/Include/core_cm4.h ****   @{
1411:Drivers/CMSIS/Include/core_cm4.h ****  */
1412:Drivers/CMSIS/Include/core_cm4.h **** 
1413:Drivers/CMSIS/Include/core_cm4.h **** /**
1414:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:Drivers/CMSIS/Include/core_cm4.h ****  */
1416:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1417:Drivers/CMSIS/Include/core_cm4.h **** {
1418:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1423:Drivers/CMSIS/Include/core_cm4.h **** 
1424:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:Drivers/CMSIS/Include/core_cm4.h **** 
1428:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:Drivers/CMSIS/Include/core_cm4.h **** 
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:Drivers/CMSIS/Include/core_cm4.h **** 
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:Drivers/CMSIS/Include/core_cm4.h **** 
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:Drivers/CMSIS/Include/core_cm4.h **** 
1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:Drivers/CMSIS/Include/core_cm4.h **** 
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:Drivers/CMSIS/Include/core_cm4.h **** 
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:Drivers/CMSIS/Include/core_cm4.h **** 
1449:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:Drivers/CMSIS/Include/core_cm4.h **** 
1452:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:Drivers/CMSIS/Include/core_cm4.h **** 
1455:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 27


1457:Drivers/CMSIS/Include/core_cm4.h **** 
1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:Drivers/CMSIS/Include/core_cm4.h **** 
1461:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** 
1465:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:Drivers/CMSIS/Include/core_cm4.h **** 
1468:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:Drivers/CMSIS/Include/core_cm4.h **** 
1472:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:Drivers/CMSIS/Include/core_cm4.h **** 
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:Drivers/CMSIS/Include/core_cm4.h **** 
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:Drivers/CMSIS/Include/core_cm4.h **** 
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:Drivers/CMSIS/Include/core_cm4.h **** 
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:Drivers/CMSIS/Include/core_cm4.h **** 
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:Drivers/CMSIS/Include/core_cm4.h **** 
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:Drivers/CMSIS/Include/core_cm4.h **** 
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:Drivers/CMSIS/Include/core_cm4.h **** 
1496:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:Drivers/CMSIS/Include/core_cm4.h **** 
1499:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:Drivers/CMSIS/Include/core_cm4.h **** 
1502:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:Drivers/CMSIS/Include/core_cm4.h **** 
1505:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:Drivers/CMSIS/Include/core_cm4.h **** 
1508:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:Drivers/CMSIS/Include/core_cm4.h **** 
1510:Drivers/CMSIS/Include/core_cm4.h **** 
1511:Drivers/CMSIS/Include/core_cm4.h **** /**
1512:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1513:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 28


1514:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:Drivers/CMSIS/Include/core_cm4.h ****   @{
1516:Drivers/CMSIS/Include/core_cm4.h ****  */
1517:Drivers/CMSIS/Include/core_cm4.h **** 
1518:Drivers/CMSIS/Include/core_cm4.h **** /**
1519:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1523:Drivers/CMSIS/Include/core_cm4.h **** */
1524:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:Drivers/CMSIS/Include/core_cm4.h **** 
1526:Drivers/CMSIS/Include/core_cm4.h **** /**
1527:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1531:Drivers/CMSIS/Include/core_cm4.h **** */
1532:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:Drivers/CMSIS/Include/core_cm4.h **** 
1534:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:Drivers/CMSIS/Include/core_cm4.h **** 
1536:Drivers/CMSIS/Include/core_cm4.h **** 
1537:Drivers/CMSIS/Include/core_cm4.h **** /**
1538:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1539:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:Drivers/CMSIS/Include/core_cm4.h ****   @{
1542:Drivers/CMSIS/Include/core_cm4.h ****  */
1543:Drivers/CMSIS/Include/core_cm4.h **** 
1544:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1545:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:Drivers/CMSIS/Include/core_cm4.h **** 
1554:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:Drivers/CMSIS/Include/core_cm4.h **** 
1563:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:Drivers/CMSIS/Include/core_cm4.h **** #endif
1567:Drivers/CMSIS/Include/core_cm4.h **** 
1568:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 29


1571:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1572:Drivers/CMSIS/Include/core_cm4.h **** 
1573:Drivers/CMSIS/Include/core_cm4.h **** 
1574:Drivers/CMSIS/Include/core_cm4.h **** 
1575:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1576:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1577:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1578:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1579:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1580:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1581:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1582:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1583:Drivers/CMSIS/Include/core_cm4.h **** /**
1584:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:Drivers/CMSIS/Include/core_cm4.h **** */
1586:Drivers/CMSIS/Include/core_cm4.h **** 
1587:Drivers/CMSIS/Include/core_cm4.h **** 
1588:Drivers/CMSIS/Include/core_cm4.h **** 
1589:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:Drivers/CMSIS/Include/core_cm4.h **** /**
1591:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:Drivers/CMSIS/Include/core_cm4.h ****   @{
1595:Drivers/CMSIS/Include/core_cm4.h ****  */
1596:Drivers/CMSIS/Include/core_cm4.h **** 
1597:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1601:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:Drivers/CMSIS/Include/core_cm4.h **** #else
1603:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:Drivers/CMSIS/Include/core_cm4.h **** 
1617:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1621:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:Drivers/CMSIS/Include/core_cm4.h **** #else
1623:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:Drivers/CMSIS/Include/core_cm4.h **** 
1627:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 30


1628:Drivers/CMSIS/Include/core_cm4.h **** 
1629:Drivers/CMSIS/Include/core_cm4.h **** 
1630:Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:Drivers/CMSIS/Include/core_cm4.h **** 
1638:Drivers/CMSIS/Include/core_cm4.h **** 
1639:Drivers/CMSIS/Include/core_cm4.h **** /**
1640:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1641:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1644:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1645:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:Drivers/CMSIS/Include/core_cm4.h ****  */
1648:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:Drivers/CMSIS/Include/core_cm4.h **** {
1650:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1651:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:Drivers/CMSIS/Include/core_cm4.h **** 
1653:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:Drivers/CMSIS/Include/core_cm4.h **** }
1660:Drivers/CMSIS/Include/core_cm4.h **** 
1661:Drivers/CMSIS/Include/core_cm4.h **** 
1662:Drivers/CMSIS/Include/core_cm4.h **** /**
1663:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1664:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:Drivers/CMSIS/Include/core_cm4.h ****  */
1667:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1668:Drivers/CMSIS/Include/core_cm4.h **** {
1669:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1670:Drivers/CMSIS/Include/core_cm4.h **** }
1671:Drivers/CMSIS/Include/core_cm4.h **** 
1672:Drivers/CMSIS/Include/core_cm4.h **** 
1673:Drivers/CMSIS/Include/core_cm4.h **** /**
1674:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1675:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1678:Drivers/CMSIS/Include/core_cm4.h ****  */
1679:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:Drivers/CMSIS/Include/core_cm4.h **** {
1681:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1682:Drivers/CMSIS/Include/core_cm4.h ****   {
1683:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1684:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 31


1685:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1686:Drivers/CMSIS/Include/core_cm4.h ****   }
1687:Drivers/CMSIS/Include/core_cm4.h **** }
1688:Drivers/CMSIS/Include/core_cm4.h **** 
1689:Drivers/CMSIS/Include/core_cm4.h **** 
1690:Drivers/CMSIS/Include/core_cm4.h **** /**
1691:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1692:Drivers/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1693:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1694:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1695:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1696:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1697:Drivers/CMSIS/Include/core_cm4.h ****  */
1698:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1699:Drivers/CMSIS/Include/core_cm4.h **** {
1700:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1701:Drivers/CMSIS/Include/core_cm4.h ****   {
1702:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1703:Drivers/CMSIS/Include/core_cm4.h ****   }
1704:Drivers/CMSIS/Include/core_cm4.h ****   else
1705:Drivers/CMSIS/Include/core_cm4.h ****   {
1706:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1707:Drivers/CMSIS/Include/core_cm4.h ****   }
1708:Drivers/CMSIS/Include/core_cm4.h **** }
1709:Drivers/CMSIS/Include/core_cm4.h **** 
1710:Drivers/CMSIS/Include/core_cm4.h **** 
1711:Drivers/CMSIS/Include/core_cm4.h **** /**
1712:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1713:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1714:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1715:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1716:Drivers/CMSIS/Include/core_cm4.h ****  */
1717:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1718:Drivers/CMSIS/Include/core_cm4.h **** {
1719:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1720:Drivers/CMSIS/Include/core_cm4.h ****   {
1721:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1722:Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
1723:Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
1724:Drivers/CMSIS/Include/core_cm4.h ****   }
1725:Drivers/CMSIS/Include/core_cm4.h **** }
1726:Drivers/CMSIS/Include/core_cm4.h **** 
1727:Drivers/CMSIS/Include/core_cm4.h **** 
1728:Drivers/CMSIS/Include/core_cm4.h **** /**
1729:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1730:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1731:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1732:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1733:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1734:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1735:Drivers/CMSIS/Include/core_cm4.h ****  */
1736:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1737:Drivers/CMSIS/Include/core_cm4.h **** {
1738:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1739:Drivers/CMSIS/Include/core_cm4.h ****   {
1740:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1741:Drivers/CMSIS/Include/core_cm4.h ****   }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 32


1742:Drivers/CMSIS/Include/core_cm4.h ****   else
1743:Drivers/CMSIS/Include/core_cm4.h ****   {
1744:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1745:Drivers/CMSIS/Include/core_cm4.h ****   }
1746:Drivers/CMSIS/Include/core_cm4.h **** }
1747:Drivers/CMSIS/Include/core_cm4.h **** 
1748:Drivers/CMSIS/Include/core_cm4.h **** 
1749:Drivers/CMSIS/Include/core_cm4.h **** /**
1750:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1751:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1752:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1753:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1754:Drivers/CMSIS/Include/core_cm4.h ****  */
1755:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1756:Drivers/CMSIS/Include/core_cm4.h **** {
1757:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1758:Drivers/CMSIS/Include/core_cm4.h ****   {
1759:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1760:Drivers/CMSIS/Include/core_cm4.h ****   }
1761:Drivers/CMSIS/Include/core_cm4.h **** }
1762:Drivers/CMSIS/Include/core_cm4.h **** 
1763:Drivers/CMSIS/Include/core_cm4.h **** 
1764:Drivers/CMSIS/Include/core_cm4.h **** /**
1765:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1766:Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1767:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1768:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1769:Drivers/CMSIS/Include/core_cm4.h ****  */
1770:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1771:Drivers/CMSIS/Include/core_cm4.h **** {
1772:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1773:Drivers/CMSIS/Include/core_cm4.h ****   {
1774:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1775:Drivers/CMSIS/Include/core_cm4.h ****   }
1776:Drivers/CMSIS/Include/core_cm4.h **** }
1777:Drivers/CMSIS/Include/core_cm4.h **** 
1778:Drivers/CMSIS/Include/core_cm4.h **** 
1779:Drivers/CMSIS/Include/core_cm4.h **** /**
1780:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1781:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1782:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1783:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1784:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1785:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1786:Drivers/CMSIS/Include/core_cm4.h ****  */
1787:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1788:Drivers/CMSIS/Include/core_cm4.h **** {
1789:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1790:Drivers/CMSIS/Include/core_cm4.h ****   {
1791:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1792:Drivers/CMSIS/Include/core_cm4.h ****   }
1793:Drivers/CMSIS/Include/core_cm4.h ****   else
1794:Drivers/CMSIS/Include/core_cm4.h ****   {
1795:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1796:Drivers/CMSIS/Include/core_cm4.h ****   }
1797:Drivers/CMSIS/Include/core_cm4.h **** }
1798:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 33


1799:Drivers/CMSIS/Include/core_cm4.h **** 
1800:Drivers/CMSIS/Include/core_cm4.h **** /**
1801:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1802:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1803:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1804:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1805:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1806:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1807:Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1808:Drivers/CMSIS/Include/core_cm4.h ****  */
1809:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1810:Drivers/CMSIS/Include/core_cm4.h **** {
1811:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1812:Drivers/CMSIS/Include/core_cm4.h ****   {
1813:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1814:Drivers/CMSIS/Include/core_cm4.h ****   }
1815:Drivers/CMSIS/Include/core_cm4.h ****   else
1816:Drivers/CMSIS/Include/core_cm4.h ****   {
1817:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1818:Drivers/CMSIS/Include/core_cm4.h ****   }
1819:Drivers/CMSIS/Include/core_cm4.h **** }
1820:Drivers/CMSIS/Include/core_cm4.h **** 
1821:Drivers/CMSIS/Include/core_cm4.h **** 
1822:Drivers/CMSIS/Include/core_cm4.h **** /**
1823:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1824:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1825:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1826:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1827:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1828:Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1829:Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1830:Drivers/CMSIS/Include/core_cm4.h ****  */
1831:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1832:Drivers/CMSIS/Include/core_cm4.h **** {
1833:Drivers/CMSIS/Include/core_cm4.h **** 
1834:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1835:Drivers/CMSIS/Include/core_cm4.h ****   {
1836:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1837:Drivers/CMSIS/Include/core_cm4.h ****   }
1838:Drivers/CMSIS/Include/core_cm4.h ****   else
1839:Drivers/CMSIS/Include/core_cm4.h ****   {
1840:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1841:Drivers/CMSIS/Include/core_cm4.h ****   }
1842:Drivers/CMSIS/Include/core_cm4.h **** }
1843:Drivers/CMSIS/Include/core_cm4.h **** 
1844:Drivers/CMSIS/Include/core_cm4.h **** 
1845:Drivers/CMSIS/Include/core_cm4.h **** /**
1846:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1847:Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1848:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1849:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1850:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1851:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1852:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1853:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1854:Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1855:Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 34


1856:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1857:Drivers/CMSIS/Include/core_cm4.h **** {
1858:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1859:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1860:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1861:Drivers/CMSIS/Include/core_cm4.h **** 
1862:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1863:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1864:Drivers/CMSIS/Include/core_cm4.h **** 
1865:Drivers/CMSIS/Include/core_cm4.h ****   return (
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1867:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1868:Drivers/CMSIS/Include/core_cm4.h ****          );
1869:Drivers/CMSIS/Include/core_cm4.h **** }
1870:Drivers/CMSIS/Include/core_cm4.h **** 
1871:Drivers/CMSIS/Include/core_cm4.h **** 
1872:Drivers/CMSIS/Include/core_cm4.h **** /**
1873:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1874:Drivers/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1875:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1876:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1877:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1878:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1879:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1880:Drivers/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1881:Drivers/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1882:Drivers/CMSIS/Include/core_cm4.h ****  */
1883:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1884:Drivers/CMSIS/Include/core_cm4.h **** {
1885:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1886:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1887:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1888:Drivers/CMSIS/Include/core_cm4.h **** 
1889:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1890:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1891:Drivers/CMSIS/Include/core_cm4.h **** 
1892:Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1893:Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1894:Drivers/CMSIS/Include/core_cm4.h **** }
1895:Drivers/CMSIS/Include/core_cm4.h **** 
1896:Drivers/CMSIS/Include/core_cm4.h **** 
1897:Drivers/CMSIS/Include/core_cm4.h **** /**
1898:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1899:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1900:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1901:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1902:Drivers/CMSIS/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1903:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1904:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1905:Drivers/CMSIS/Include/core_cm4.h ****  */
1906:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1907:Drivers/CMSIS/Include/core_cm4.h **** {
1908:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1909:Drivers/CMSIS/Include/core_cm4.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
1910:Drivers/CMSIS/Include/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1911:Drivers/CMSIS/Include/core_cm4.h **** }
1912:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 35


1913:Drivers/CMSIS/Include/core_cm4.h **** 
1914:Drivers/CMSIS/Include/core_cm4.h **** /**
1915:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1916:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1917:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1918:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1919:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1920:Drivers/CMSIS/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1921:Drivers/CMSIS/Include/core_cm4.h ****  */
1922:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1923:Drivers/CMSIS/Include/core_cm4.h **** {
1924:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1925:Drivers/CMSIS/Include/core_cm4.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
1926:Drivers/CMSIS/Include/core_cm4.h **** }
1927:Drivers/CMSIS/Include/core_cm4.h **** 
1928:Drivers/CMSIS/Include/core_cm4.h **** 
1929:Drivers/CMSIS/Include/core_cm4.h **** /**
1930:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1931:Drivers/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1932:Drivers/CMSIS/Include/core_cm4.h ****  */
1933:Drivers/CMSIS/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1934:Drivers/CMSIS/Include/core_cm4.h **** {
  28              		.loc 1 1934 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1935:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
  34              		.loc 1 1935 3 view .LVU1
  35              	.LBB8:
  36              	.LBI8:
  37              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 36


  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 37


  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 38


 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 39


 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 40


 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 41


 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 42


 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 43


 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 44


 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 45


 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 46


 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 47


 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 48


 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 49


 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 50


 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 51


 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 52


 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
  38              		.loc 2 944 27 view .LVU2
  39              	.LBB9:
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  40              		.loc 2 946 3 view .LVU3
  41              		.syntax unified
  42              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  43 0000 BFF34F8F 		dsb 0xF
  44              	@ 0 "" 2
  45              		.thumb
  46              		.syntax unified
  47              	.LBE9:
  48              	.LBE8:
1936:Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1937:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
  49              		.loc 1 1937 3 view .LVU4
1938:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  50              		.loc 1 1938 32 is_stmt 0 view .LVU5
  51 0004 0549     		ldr	r1, .L3
  52 0006 CA68     		ldr	r2, [r1, #12]
  53              		.loc 1 1938 40 view .LVU6
  54 0008 02F4E062 		and	r2, r2, #1792
1937:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  55              		.loc 1 1937 17 view .LVU7
  56 000c 044B     		ldr	r3, .L3+4
  57 000e 1343     		orrs	r3, r3, r2
1937:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  58              		.loc 1 1937 15 view .LVU8
  59 0010 CB60     		str	r3, [r1, #12]
1939:Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1940:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
  60              		.loc 1 1940 3 is_stmt 1 view .LVU9
  61              	.LBB10:
  62              	.LBI10:
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  63              		.loc 2 944 27 view .LVU10
  64              	.LBB11:
  65              		.loc 2 946 3 view .LVU11
  66              		.syntax unified
  67              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  68 0012 BFF34F8F 		dsb 0xF
  69              	@ 0 "" 2
  70              		.thumb
  71              		.syntax unified
  72              	.L2:
  73              	.LBE11:
  74              	.LBE10:
1941:Drivers/CMSIS/Include/core_cm4.h **** 
1942:Drivers/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 53


  75              		.loc 1 1942 3 discriminator 1 view .LVU12
1943:Drivers/CMSIS/Include/core_cm4.h ****   {
1944:Drivers/CMSIS/Include/core_cm4.h ****     __NOP();
  76              		.loc 1 1944 5 discriminator 1 view .LVU13
  77              		.syntax unified
  78              	@ 1944 "Drivers/CMSIS/Include/core_cm4.h" 1
  79 0016 00BF     		nop
  80              	@ 0 "" 2
1942:Drivers/CMSIS/Include/core_cm4.h ****   {
  81              		.loc 1 1942 8 discriminator 1 view .LVU14
  82              		.thumb
  83              		.syntax unified
  84 0018 FDE7     		b	.L2
  85              	.L4:
  86 001a 00BF     		.align	2
  87              	.L3:
  88 001c 00ED00E0 		.word	-536810240
  89 0020 0400FA05 		.word	100270084
  90              		.cfi_endproc
  91              	.LFE119:
  93              		.section	.text.MX_GPIO_Init,"ax",%progbits
  94              		.align	1
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv4-sp-d16
 100              	MX_GPIO_Init:
 101              	.LFB153:
 102              		.file 3 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program for SODAQ LOGGER
   6:Core/Src/main.c ****   * @author         : Phuoc K. Ly
   7:Core/Src/main.c ****   * @version        : 0.1
   8:Core/Src/main.c ****   ******************************************************************************
   9:Core/Src/main.c ****   * @attention
  10:Core/Src/main.c ****   *
  11:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  12:Core/Src/main.c ****   * All rights reserved.
  13:Core/Src/main.c ****   *
  14:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  15:Core/Src/main.c ****   * in the root directory of this software component.
  16:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  17:Core/Src/main.c ****   *
  18:Core/Src/main.c ****   ******************************************************************************
  19:Core/Src/main.c ****   */
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /*  
  22:Core/Src/main.c ****     This program was developed by Phuoc K. Ly (SODAQ) for a low power logging device using the STM3
  23:Core/Src/main.c **** */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Header */
  26:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  27:Core/Src/main.c **** #include "main.h"
  28:Core/Src/main.c **** #include "fatfs.h"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 54


  29:Core/Src/main.c **** #include "usb_device.h"
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  33:Core/Src/main.c **** #include <stdio.h>
  34:Core/Src/main.c **** #include <string.h>
  35:Core/Src/main.c **** #include <stdarg.h> //for va_list var arg functions
  36:Core/Src/main.c **** #include "SPI_FRAM.h"
  37:Core/Src/main.c **** /* USER CODE END Includes */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** #define DEBUG 1 //Define debug mode
  43:Core/Src/main.c **** //#define RESET_FRAM 1
  44:Core/Src/main.c **** /*************************************************FRAM ADDRESS CONFIG******************************
  45:Core/Src/main.c **** //External FRAM locations for user settings
  46:Core/Src/main.c **** #define LOCATION_FILE_NUMBER_LSB 0x03       //16-bit value LSB for file location number
  47:Core/Src/main.c **** #define LOCATION_FILE_NUMBER_MSB 0x04       //16-bit value MSB for file location number
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** #define USB_DETECT 0x05                     //Detect if USB is plug in or not
  50:Core/Src/main.c **** #define LAST_SYNC_POSITION 0x06             //Position of the last character captured
  51:Core/Src/main.c **** #define BUFFER_STAT 0x07                    //0 if no message left in the buffer -- 1 if buffer is 
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** #define SYNC_BUFFER_MSB 0x08
  54:Core/Src/main.c **** #define SYNC_BUFFER_MSB2 0x09
  55:Core/Src/main.c **** #define SYNC_BUFFER_LSB 0x0A
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** #define USB_DETECT 0x0B                     //Detect USB Plug in
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** #define LOCATION_BUFFER_START 20            //Address of start position when buffering
  60:Core/Src/main.c **** #define LOCATION_BUFFER_END 0x3ff70         //Address of end position when buffering (260000)
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**************************************************************************************************
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** typedef enum{
  65:Core/Src/main.c ****   LOGGER_INIT,
  66:Core/Src/main.c ****   BUFFER_SYNC_,
  67:Core/Src/main.c ****   BUFFER_SYNC_DONE,
  68:Core/Src/main.c ****   BUFFER_OK,
  69:Core/Src/main.c ****   BUFFER_ON_HOLD,
  70:Core/Src/main.c ****   SD_DONE,
  71:Core/Src/main.c ****   USB_PLUGIN,
  72:Core/Src/main.c ****   USB_UNKNOWN,
  73:Core/Src/main.c **** }LOGGER_STAT;
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /* USER CODE END PTD */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  79:Core/Src/main.c **** /* USER CODE BEGIN PD */
  80:Core/Src/main.c **** /* USER CODE END PD */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  83:Core/Src/main.c **** /* USER CODE BEGIN PM */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c **** /* USER CODE END PM */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 55


  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  88:Core/Src/main.c **** CRC_HandleTypeDef hcrc;
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  91:Core/Src/main.c **** SPI_HandleTypeDef hspi2;
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** UART_HandleTypeDef huart2;
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** /* USER CODE BEGIN PV */
  96:Core/Src/main.c **** extern USBD_HandleTypeDef hUsbDeviceFS;   //USB handler 
  97:Core/Src/main.c **** UART_WakeUpTypeDef wakeup;        //Wake up handler
  98:Core/Src/main.c **** char Rx_data[4096];               // Creat UART buffer of 2 kbytes
  99:Core/Src/main.c **** char Rx_back_up[4096];            // Backup UART buffer when flusing data to SD NAND
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /*************************************************SYSTEM FLAGS*************************************
 102:Core/Src/main.c **** uint8_t USB_Flag = 0;             //USB Flag raise up when USB cable is connected
 103:Core/Src/main.c **** uint8_t RX_Flag = 0;              //RX_flag when interrupt
 104:Core/Src/main.c **** uint8_t RX_BACKUP_Flag = 0;       //Raise this flag mean data coming during SD write process
 105:Core/Src/main.c **** uint8_t SD_Flag = 0;              //Raise SD Flag when timeout & buffer is full
 106:Core/Src/main.c **** uint8_t RESET_FLAG = 1;           //If the device is reset - create new file in SD
 107:Core/Src/main.c **** uint8_t BUFFER_NEAR_FULL_ = 0;    //When buffer is almost full and device is still buffering -- tri
 108:Core/Src/main.c **** uint8_t BOARD_POWER_UP = 1;       //First time power up the board -- create a new log file
 109:Core/Src/main.c **** uint8_t SD_MOUNT_FAIL = 0;        //Number of mount fail -- 3 times then error-handler
 110:Core/Src/main.c **** /**************************************************************************************************
 111:Core/Src/main.c **** 
 112:Core/Src/main.c **** /*************************************************FRAM CONFIGURATION*******************************
 113:Core/Src/main.c **** uint32_t LOCATION_BUFFER_ITERATOR = LOCATION_BUFFER_START;        // Iterator to the current positi
 114:Core/Src/main.c **** static char newFileName[13];                                      // Create new file name based on 
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** /**************************************************************************************************
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** /*************************************************USER DEFINE**************************************
 119:Core/Src/main.c **** static const unsigned int BUFFER_MAX = 250000;                             //User define max buffer
 120:Core/Src/main.c **** static const uint32_t MAX_IDLE_TIME_MSEC = 1000;                        //User define timeout befor
 121:Core/Src/main.c **** /**************************************************************************************************
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** //Some variables for FatFs
 124:Core/Src/main.c **** FATFS FatFs; 	//Fatfs handle
 125:Core/Src/main.c **** FIL newFile, workingFile, fil; 		//File handle
 126:Core/Src/main.c **** FRESULT fres; //Result after operations
 127:Core/Src/main.c **** char FATPATH[4];
 128:Core/Src/main.c **** /* USER CODE END PV */
 129:Core/Src/main.c **** 
 130:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
 131:Core/Src/main.c **** void SystemClock_Config(void);
 132:Core/Src/main.c **** static void MX_GPIO_Init(void);
 133:Core/Src/main.c **** static void MX_SPI1_Init(void);
 134:Core/Src/main.c **** static void MX_SPI2_Init(void);
 135:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
 136:Core/Src/main.c **** static void MX_CRC_Init(void);
 137:Core/Src/main.c **** /* USER CODE BEGIN PFP */
 138:Core/Src/main.c **** static void turn_off_spi_SD(void);
 139:Core/Src/main.c **** static void turn_off_spi_FRAM(void);
 140:Core/Src/main.c **** 
 141:Core/Src/main.c **** void myprintf(const char *fmt, ...);
 142:Core/Src/main.c **** void appendDATA();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 56


 143:Core/Src/main.c **** void Stop_Mode_Entry(void);
 144:Core/Src/main.c **** void SD_error(void);
 145:Core/Src/main.c **** char* newLog(LOGGER_STAT stat);
 146:Core/Src/main.c **** uint8_t appendFile(char* fileName);
 147:Core/Src/main.c **** uint8_t buffer_sync(int* Buffer_Iterator, LOGGER_STAT stat);
 148:Core/Src/main.c **** uint8_t USB_init(LOGGER_STAT stat);
 149:Core/Src/main.c **** /* USER CODE END PFP */
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
 152:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 153:Core/Src/main.c **** /*Custom printf function using UART TX with interrupt*/
 154:Core/Src/main.c **** void myprintf(const char *fmt, ...){
 155:Core/Src/main.c ****   static char buffer[500];
 156:Core/Src/main.c ****   va_list args;
 157:Core/Src/main.c ****   va_start(args, fmt);
 158:Core/Src/main.c ****   vsnprintf(buffer, sizeof(buffer), fmt, args);
 159:Core/Src/main.c ****   va_end(args);
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   int len = strlen(buffer);
 162:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)buffer, len, -1);
 163:Core/Src/main.c **** }
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /*!
 166:Core/Src/main.c **** * @brief Check for USB cable appearance-- if yes then initialize USB peripheral
 167:Core/Src/main.c **** * @param stat
 168:Core/Src/main.c **** * @retval None
 169:Core/Src/main.c **** */
 170:Core/Src/main.c **** uint8_t USB_init(LOGGER_STAT stat){
 171:Core/Src/main.c ****   /*If Cable plugin  USB device is configured by computer host*/
 172:Core/Src/main.c ****   if(stat == USB_UNKNOWN){
 173:Core/Src/main.c ****     GPIO_InitTypeDef GPIO_InitStruct = {0};
 174:Core/Src/main.c ****     GPIO_InitStruct.Pin = Vbus_Sense_Pin| GPIO_PIN_11| GPIO_PIN_12;
 175:Core/Src/main.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 176:Core/Src/main.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 177:Core/Src/main.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 178:Core/Src/main.c ****   }
 179:Core/Src/main.c ****   else{
 180:Core/Src/main.c ****     /*Else turn off USB Peripheral & put the GPIOs to analog mode*/
 181:Core/Src/main.c ****     MX_USB_DEVICE_Init();
 182:Core/Src/main.c ****     USB_Flag = 1;
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c ****   return LOGGER_INIT;
 185:Core/Src/main.c **** }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** /*!
 188:Core/Src/main.c **** * @brief Turn off FRAM peripheral by enable sleep mode and put the GPIOs to analog state
 189:Core/Src/main.c **** * @param None
 190:Core/Src/main.c **** * @retval None
 191:Core/Src/main.c **** */
 192:Core/Src/main.c **** static void turn_off_spi_FRAM(){
 193:Core/Src/main.c ****   HAL_SPI_DeInit(&hspi1);
 194:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 195:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1| GPIO_PIN_6| GPIO_PIN_7| FRAM_CS_Pin| LED_Pin| FRAM_HOLD_Pin,
 196:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1| GPIO_PIN_6| GPIO_PIN_7| FRAM_CS_Pin| LED_Pin| FRAM_HOLD_Pin;
 197:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 198:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 199:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 57


 200:Core/Src/main.c **** }
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /*!
 203:Core/Src/main.c ****  *  @brief  Turn off SD NAND chip by disable 3V3 power supply and put the GPIOs to analog mode
 204:Core/Src/main.c ****  *  @param  None
 205:Core/Src/main.c ****  *  @retval None
 206:Core/Src/main.c ****  */
 207:Core/Src/main.c **** static void turn_off_spi_SD(){
 208:Core/Src/main.c ****   HAL_SPI_DeInit(&hspi2);
 209:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 210:Core/Src/main.c ****   /*Configure GPIO pin Output Level */ 
 211:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10| GPIO_PIN_14 |GPIO_PIN_15| SD_CS_Pin, RESET);
 212:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10| GPIO_PIN_14 |GPIO_PIN_15 |SD_CS_Pin;
 213:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 214:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 215:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 216:Core/Src/main.c ****   //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, RESET);
 217:Core/Src/main.c ****   //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_14, SET);
 218:Core/Src/main.c **** }
 219:Core/Src/main.c **** 
 220:Core/Src/main.c **** /*Receive data call back after idle time (1 frame reception) */
 221:Core/Src/main.c **** void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t size){
 222:Core/Src/main.c ****   if(!SD_Flag){
 223:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)Rx_data, sizeof(Rx_data));
 224:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 225:Core/Src/main.c ****     RX_Flag = 1;
 226:Core/Src/main.c ****   }
 227:Core/Src/main.c ****   else{
 228:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)Rx_data, sizeof(Rx_data));
 229:Core/Src/main.c ****     //strcat(Rx_back_up, Rx_data);
 230:Core/Src/main.c ****     strcat(Rx_back_up, Rx_data);
 231:Core/Src/main.c ****     memset(Rx_data,0,sizeof(Rx_data));  //This mean the SD is writing and we should store data else
 232:Core/Src/main.c ****     RX_Flag = 1;
 233:Core/Src/main.c ****     RX_BACKUP_Flag = 1;
 234:Core/Src/main.c ****   }
 235:Core/Src/main.c **** }
 236:Core/Src/main.c **** 
 237:Core/Src/main.c **** /*Enter stop mode 1 and set UART as wakeup source*/
 238:Core/Src/main.c **** void Stop_Mode_Entry(){
 239:Core/Src/main.c **** 
 240:Core/Src/main.c ****   /*Kindly turn off FRAM and other peripheral :) */
 241:Core/Src/main.c ****   turn_off_spi_FRAM();
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* Enable the USART2 Wake UP from STOP mode Interrupt */
 244:Core/Src/main.c ****   __HAL_UART_ENABLE_IT(&huart2, UART_IT_WUF);
 245:Core/Src/main.c **** 
 246:Core/Src/main.c ****   /* enable MCU wake-up by USART1 */
 247:Core/Src/main.c ****   HAL_UARTEx_EnableStopMode(&huart2);      
 248:Core/Src/main.c ****   // #ifdef DEBUG
 249:Core/Src/main.c ****   // myprintf("I go to sleep now!");
 250:Core/Src/main.c ****   // #endif
 251:Core/Src/main.c ****   
 252:Core/Src/main.c ****   /*Deinit peripherals*/
 253:Core/Src/main.c ****   HAL_DBGMCU_DisableDBGSleepMode( );
 254:Core/Src/main.c ****   HAL_DBGMCU_DisableDBGStopMode( );
 255:Core/Src/main.c ****   HAL_DBGMCU_DisableDBGStandbyMode( );
 256:Core/Src/main.c ****   HAL_SuspendTick();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 58


 257:Core/Src/main.c ****   /*Enter stop mode*/
 258:Core/Src/main.c ****   HAL_PWREx_EnterSTOP1Mode(PWR_STOPENTRY_WFI);
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****   /*Escape from stop mode*/
 261:Core/Src/main.c ****   SystemClock_Config();
 262:Core/Src/main.c ****   HAL_ResumeTick();
 263:Core/Src/main.c ****   //HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1| GPIO_PIN_6| GPIO_PIN_7| FRAM_CS_Pin| LED_Pin| FRAM_HOLD_Pin)
 264:Core/Src/main.c ****   MX_GPIO_Init();
 265:Core/Src/main.c ****   MX_SPI1_Init();
 266:Core/Src/main.c ****   //MX_FATFS_Init();
 267:Core/Src/main.c ****   turn_off_spi_SD();
 268:Core/Src/main.c ****   HAL_GPIO_WritePin(SD_EN_GPIO_Port, SD_EN_Pin, RESET);
 269:Core/Src/main.c ****   /* Wake up based on RXNE flag successful*/
 270:Core/Src/main.c ****   HAL_UARTEx_DisableStopMode(&huart2);
 271:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)Rx_data, sizeof(Rx_data));
 272:Core/Src/main.c **** }
 273:Core/Src/main.c **** 
 274:Core/Src/main.c **** /*Create new | Check for logging file*/
 275:Core/Src/main.c **** char* newLog(LOGGER_STAT stat){
 276:Core/Src/main.c ****   //HAL_UART_AbortReceive_IT(&huart2);  //Abort UART DATA for a quick instant
 277:Core/Src/main.c ****   uint8_t msb, lsb;
 278:Core/Src/main.c ****   unsigned int newFileNumber = 0;
 279:Core/Src/main.c ****   uint8_t attempt = 1;
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /*Init SD PHY layer*/
 282:Core/Src/main.c ****   HAL_GPIO_WritePin(SD_EN_GPIO_Port, SD_EN_Pin, SET);
 283:Core/Src/main.c ****   HAL_GPIO_DeInit(GPIOB, GPIO_PIN_10 | GPIO_PIN_14 | GPIO_PIN_15| SD_CS_Pin);
 284:Core/Src/main.c ****   MX_GPIO_Init();
 285:Core/Src/main.c ****   MX_SPI2_Init(); 
 286:Core/Src/main.c ****   MX_FATFS_Init();
 287:Core/Src/main.c ****   HAL_Delay(300);
 288:Core/Src/main.c **** 
 289:Core/Src/main.c ****   /*Init and Mount SD Card in FATFS*/
 290:Core/Src/main.c ****   #ifdef DEBUG
 291:Core/Src/main.c ****   myprintf("\r\n~ SD card initializing... ~\r\n\r\n");
 292:Core/Src/main.c ****   #endif
 293:Core/Src/main.c ****   //Open the file system -- incase fail to mount the first time, re-try 10 times before skipping th
 294:Core/Src/main.c ****   fres = f_mount(&FatFs, (const TCHAR *)FATPATH, 1); //1=mount now
 295:Core/Src/main.c ****   //FATFS_LinkDriver()
 296:Core/Src/main.c ****   while (fres != FR_OK) {
 297:Core/Src/main.c ****     if (attempt == 5){
 298:Core/Src/main.c ****       SD_MOUNT_FAIL++;
 299:Core/Src/main.c ****       if(SD_MOUNT_FAIL == 4) 
 300:Core/Src/main.c ****       SD_Flag = 0;
 301:Core/Src/main.c ****       Error_Handler();
 302:Core/Src/main.c ****       //return;
 303:Core/Src/main.c ****     }
 304:Core/Src/main.c ****     myprintf("f_mount error (%i)\r\n Will try again for 5 times in 0.5 seconds\n", fres);
 305:Core/Src/main.c ****     myprintf("Try %d times\n", attempt);
 306:Core/Src/main.c ****     attempt++;
 307:Core/Src/main.c ****     if (FATFS_UnLinkDriver(&USERPath)){
 308:Core/Src/main.c ****       myprintf("FATFS Unlinked fail!!");
 309:Core/Src/main.c ****       NVIC_SystemReset();
 310:Core/Src/main.c ****     }
 311:Core/Src/main.c ****     else myprintf("FATFS Unlink success\n");
 312:Core/Src/main.c ****     turn_off_spi_SD();
 313:Core/Src/main.c ****     HAL_GPIO_WritePin(SD_EN_GPIO_Port, SD_EN_Pin, RESET);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 59


 314:Core/Src/main.c ****     HAL_Delay(1000);
 315:Core/Src/main.c ****     
 316:Core/Src/main.c ****     /*Re-init SD*/
 317:Core/Src/main.c ****     HAL_GPIO_WritePin(SD_EN_GPIO_Port, SD_EN_Pin, SET);
 318:Core/Src/main.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_10 | GPIO_PIN_14 | GPIO_PIN_15| SD_CS_Pin);
 319:Core/Src/main.c ****     MX_GPIO_Init();
 320:Core/Src/main.c ****     MX_SPI2_Init();
 321:Core/Src/main.c ****     MX_FATFS_Init(); 
 322:Core/Src/main.c ****     HAL_Delay(100);
 323:Core/Src/main.c ****     myprintf("\r\n~ SD card re-initializing... ~\r\n\r\n");
 324:Core/Src/main.c ****     fres = f_mount(&FatFs, (const TCHAR *)FATPATH, 1); //1=mount now
 325:Core/Src/main.c ****   }
 326:Core/Src/main.c **** 
 327:Core/Src/main.c ****   #ifdef DEBUG
 328:Core/Src/main.c ****   myprintf("\r\n~ SD card mounted successfully ~\r\n\r\n");
 329:Core/Src/main.c ****   myprintf("\n***FRAM generate/indicate file location!!\n");
 330:Core/Src/main.c ****   #endif
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   //Combine two 8-bit FRAM spots into one 16-bit number
 333:Core/Src/main.c ****   lsb = FRAM_read8(LOCATION_FILE_NUMBER_LSB);
 334:Core/Src/main.c ****   msb = FRAM_read8(LOCATION_FILE_NUMBER_MSB);
 335:Core/Src/main.c ****   
 336:Core/Src/main.c ****   #ifdef DEBUG
 337:Core/Src/main.c ****   myprintf("Location lsb: %d\n", lsb);
 338:Core/Src/main.c ****   myprintf("Location msb: %d\n", msb);
 339:Core/Src/main.c ****   #endif
 340:Core/Src/main.c **** 
 341:Core/Src/main.c ****   //If both FRAM spots are 255 (0xFF), that means they are un-initialized (first time Logger has be
 342:Core/Src/main.c ****   newFileNumber = msb;
 343:Core/Src/main.c ****   newFileNumber = newFileNumber << 8;
 344:Core/Src/main.c ****   newFileNumber |= lsb;
 345:Core/Src/main.c ****   
 346:Core/Src/main.c ****   if(stat == BUFFER_SYNC_){
 347:Core/Src/main.c ****     newFileNumber -= 1;
 348:Core/Src/main.c ****     sprintf(newFileName, "LOG%05d.TXT", newFileNumber);
 349:Core/Src/main.c ****     return newFileName;
 350:Core/Src/main.c ****   }
 351:Core/Src/main.c ****   
 352:Core/Src/main.c ****   if(RESET_FLAG){
 353:Core/Src/main.c ****     //Let's init them both to 0
 354:Core/Src/main.c ****     if((lsb==0xff) && (msb == 0xff)){
 355:Core/Src/main.c ****       newFileNumber = 0;
 356:Core/Src/main.c ****       FRAM_writeEnable(true);
 357:Core/Src/main.c ****       FRAM_write8(LOCATION_FILE_NUMBER_LSB, 0x00);
 358:Core/Src/main.c ****       FRAM_write8(LOCATION_FILE_NUMBER_MSB, 0x00);
 359:Core/Src/main.c ****       FRAM_writeEnable(false);
 360:Core/Src/main.c ****       #ifdef DEBUG
 361:Core/Src/main.c ****       myprintf("Location lsb updated: %d\n", lsb);
 362:Core/Src/main.c ****       myprintf("Location msb updated: %d\n", msb);
 363:Core/Src/main.c ****       //HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, SET);
 364:Core/Src/main.c ****       #endif
 365:Core/Src/main.c ****     }
 366:Core/Src/main.c ****     //Let's quit if we reach 65534 files
 367:Core/Src/main.c ****     if(newFileNumber == 65534){
 368:Core/Src/main.c ****       return 0;
 369:Core/Src/main.c ****     }
 370:Core/Src/main.c ****     while(1){
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 60


 371:Core/Src/main.c ****       sprintf(newFileName, "LOG%05d.TXT", newFileNumber);
 372:Core/Src/main.c **** 
 373:Core/Src/main.c ****       //If we are able to create this file, then it didn't exist, we're good, break
 374:Core/Src/main.c ****       fres = f_open(&newFile, newFileName, FA_WRITE | FA_CREATE_NEW);
 375:Core/Src/main.c ****       if(fres == FR_OK){
 376:Core/Src/main.c ****         f_close(&newFile);
 377:Core/Src/main.c ****         break;
 378:Core/Src/main.c ****       }
 379:Core/Src/main.c ****       
 380:Core/Src/main.c ****       //If file exists, see if empty. If so, use it.
 381:Core/Src/main.c ****       if(fres == FR_EXIST){
 382:Core/Src/main.c ****         fres = f_open(&newFile, newFileName, FA_READ | FA_OPEN_EXISTING);
 383:Core/Src/main.c ****         if(f_size(&newFile) == 0){
 384:Core/Src/main.c ****           f_close(&newFile);  // Close this existing file we just opened.
 385:Core/Src/main.c ****           return newFileName; // Use existing empty file.
 386:Core/Src/main.c ****         }
 387:Core/Src/main.c ****         f_close(&newFile);
 388:Core/Src/main.c ****       }
 389:Core/Src/main.c ****       //try the next number
 390:Core/Src/main.c ****       newFileNumber++;
 391:Core/Src/main.c ****       if(newFileNumber > 65533) return 0;
 392:Core/Src/main.c ****     }
 393:Core/Src/main.c ****     if(BOARD_POWER_UP == 1){
 394:Core/Src/main.c ****       newFileNumber++; //Increment so the next power up uses the next file #
 395:Core/Src/main.c ****       BOARD_POWER_UP = 0;
 396:Core/Src/main.c ****     }
 397:Core/Src/main.c ****     lsb = (uint8_t)(newFileNumber & 0x00ff);
 398:Core/Src/main.c ****     msb = (uint8_t)((newFileNumber & 0xff00)>>8);
 399:Core/Src/main.c **** 
 400:Core/Src/main.c ****     FRAM_writeEnable(true);
 401:Core/Src/main.c ****     FRAM_write8(LOCATION_FILE_NUMBER_LSB, lsb); //LSB
 402:Core/Src/main.c **** 
 403:Core/Src/main.c ****     if(FRAM_read8(LOCATION_FILE_NUMBER_MSB) != msb)
 404:Core/Src/main.c ****     FRAM_write8(LOCATION_FILE_NUMBER_MSB, msb); //MSB
 405:Core/Src/main.c **** 
 406:Core/Src/main.c ****     FRAM_writeEnable(false);
 407:Core/Src/main.c ****     FRAM_sleepEnable(true);
 408:Core/Src/main.c **** 
 409:Core/Src/main.c ****     #ifdef DEBUG
 410:Core/Src/main.c ****       myprintf("Location lsb updated: %d\n", lsb);
 411:Core/Src/main.c ****       myprintf("Location msb updated: %d\n", msb);
 412:Core/Src/main.c ****       //HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, SET);
 413:Core/Src/main.c ****     #endif
 414:Core/Src/main.c ****     RESET_FLAG = 0;
 415:Core/Src/main.c ****   }
 416:Core/Src/main.c ****   return newFileName;
 417:Core/Src/main.c **** }
 418:Core/Src/main.c **** 
 419:Core/Src/main.c **** /*!
 420:Core/Src/main.c ****  *  @brief  Main function to receive UART data and buffer to FRAM
 421:Core/Src/main.c ****  *          After interval waiting time, data from buffer will be written to SD NAND and buffer is 
 422:Core/Src/main.c ****  *  @param  None
 423:Core/Src/main.c ****  *  @retval None
 424:Core/Src/main.c ****  */
 425:Core/Src/main.c **** void appendDATA(){
 426:Core/Src/main.c ****   //unsigned long currentTime = HAL_GetTick();
 427:Core/Src/main.c ****   FRAM_sleepEnable(false);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 61


 428:Core/Src/main.c ****   #ifdef DEBUG
 429:Core/Src/main.c ****     myprintf("<\n");
 430:Core/Src/main.c ****   #endif
 431:Core/Src/main.c ****   unsigned long lastSyncTime = HAL_GetTick(); //Keeps track of the last time the file was synced
 432:Core/Src/main.c ****   while(1){
 433:Core/Src/main.c ****     FRAM_sleepEnable(false); //make sure FRAM is woken up properly
 434:Core/Src/main.c **** 
 435:Core/Src/main.c ****     /*Buffering incoming data*/
 436:Core/Src/main.c ****     if(RX_Flag != 0){
 437:Core/Src/main.c ****       char readBuf[4096] = {'0'};
 438:Core/Src/main.c ****       strncpy((char*)readBuf, Rx_data, strlen(Rx_data));
 439:Core/Src/main.c ****       memset(Rx_data, 0, strlen(Rx_data));
 440:Core/Src/main.c ****       if(FRAM_write(&LOCATION_BUFFER_ITERATOR, readBuf) != FRAM_OK) Error_Handler();
 441:Core/Src/main.c ****       #ifdef DEBUG
 442:Core/Src/main.c ****         myprintf("Updated iterator: %d\n", LOCATION_BUFFER_ITERATOR);
 443:Core/Src/main.c ****         myprintf("Start synchronizing...\n");
 444:Core/Src/main.c ****       #endif   
 445:Core/Src/main.c ****       if(buffer_sync(&LOCATION_BUFFER_ITERATOR, BUFFER_SYNC_) == BUFFER_OK) myprintf("Success in sy
 446:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 447:Core/Src/main.c ****       RX_Flag = 0;                      //Reset RX_IT flag
 448:Core/Src/main.c ****       
 449:Core/Src/main.c ****       /*If buffer exceed max capacity -- write to SD*/
 450:Core/Src/main.c ****       if(LOCATION_BUFFER_ITERATOR >= LOCATION_BUFFER_START + BUFFER_MAX) SD_Flag = 1;
 451:Core/Src/main.c **** 
 452:Core/Src/main.c ****       lastSyncTime = HAL_GetTick();     //Reset interval time 
 453:Core/Src/main.c ****     }
 454:Core/Src/main.c **** 
 455:Core/Src/main.c ****     /*Update data from buffer_backup when SD was writing*/
 456:Core/Src/main.c ****     else if ((RX_Flag | RX_BACKUP_Flag) != 0){
 457:Core/Src/main.c ****       char readBuf[4096] = {'0'};
 458:Core/Src/main.c ****       strncpy((char*)readBuf, Rx_back_up, strlen(Rx_back_up));
 459:Core/Src/main.c ****       memset(Rx_back_up, 0, strlen(Rx_back_up));
 460:Core/Src/main.c ****       if(FRAM_write(&LOCATION_BUFFER_ITERATOR, readBuf) != FRAM_OK) Error_Handler();
 461:Core/Src/main.c ****       #ifdef DEBUG
 462:Core/Src/main.c ****         myprintf("Updated iterator from back up: %d\n", LOCATION_BUFFER_ITERATOR);
 463:Core/Src/main.c ****       #endif
 464:Core/Src/main.c ****       if(buffer_sync(&LOCATION_BUFFER_ITERATOR, BUFFER_SYNC_) == BUFFER_OK) myprintf("Success in sy
 465:Core/Src/main.c ****       RX_Flag = 0; 
 466:Core/Src/main.c ****       RX_BACKUP_Flag = 0;               //Reset RX_IT flag
 467:Core/Src/main.c ****       /*If buffer exceed max capacity -- write to SD*/
 468:Core/Src/main.c ****       if(LOCATION_BUFFER_ITERATOR >= LOCATION_BUFFER_START + BUFFER_MAX) SD_Flag = 1;
 469:Core/Src/main.c ****       lastSyncTime = HAL_GetTick();     //Reset interval time
 470:Core/Src/main.c ****     }
 471:Core/Src/main.c **** 
 472:Core/Src/main.c ****     /*Write data from buffer to SD after buffer is full*/
 473:Core/Src/main.c ****     else if (SD_Flag){
 474:Core/Src/main.c ****       appendFile(newLog(BUFFER_OK));
 475:Core/Src/main.c ****       SD_Flag = 0;
 476:Core/Src/main.c ****     }
 477:Core/Src/main.c **** 
 478:Core/Src/main.c ****     /*After [USER_DEFINE] seconds -> Go to sleep*/
 479:Core/Src/main.c ****     else if ((unsigned long)(HAL_GetTick()-lastSyncTime) > MAX_IDLE_TIME_MSEC){
 480:Core/Src/main.c ****       #ifdef DEBUG
 481:Core/Src/main.c ****         myprintf("******I am done waiting!!! Now I go sleep ******\n");
 482:Core/Src/main.c ****       #endif
 483:Core/Src/main.c ****       FRAM_sleepEnable(true);
 484:Core/Src/main.c ****       Stop_Mode_Entry();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 62


 485:Core/Src/main.c ****       lastSyncTime = HAL_GetTick();     //Reset interval time 
 486:Core/Src/main.c ****     }
 487:Core/Src/main.c ****   }
 488:Core/Src/main.c **** }
 489:Core/Src/main.c **** 
 490:Core/Src/main.c **** /*!
 491:Core/Src/main.c ****  *  @brief  Main function to receive UART data and buffer to FRAM
 492:Core/Src/main.c ****  *          After interval waiting time, data from buffer will be written to SD NAND and buffer is 
 493:Core/Src/main.c ****  *  @param  fileName
 494:Core/Src/main.c ****  *          Name of the file generated from the function newlog
 495:Core/Src/main.c ****  *  @retval None
 496:Core/Src/main.c ****  */
 497:Core/Src/main.c **** uint8_t appendFile(char* fileName){
 498:Core/Src/main.c ****   UINT bytesWrote = 0;
 499:Core/Src/main.c ****   UINT Total_Byte_Wrote = 0;
 500:Core/Src/main.c ****   const char writeBuf[2048];
 501:Core/Src/main.c ****   fres = f_open(&workingFile, fileName, FA_READ| FA_WRITE | FA_OPEN_APPEND);
 502:Core/Src/main.c ****   if(fres != FR_OK){
 503:Core/Src/main.c ****     #ifdef DEBUG
 504:Core/Src/main.c ****       myprintf("f_open error (%i)\r\n", fres);
 505:Core/Src/main.c ****     #endif
 506:Core/Src/main.c ****     Error_Handler();
 507:Core/Src/main.c ****   }
 508:Core/Src/main.c ****   if(f_size(&workingFile) == 0){
 509:Core/Src/main.c ****     f_rewind(&workingFile);
 510:Core/Src/main.c ****     f_sync(&workingFile);
 511:Core/Src/main.c ****   }
 512:Core/Src/main.c **** 
 513:Core/Src/main.c ****   FRAM_sleepEnable(false);
 514:Core/Src/main.c ****   uint32_t index = LOCATION_BUFFER_START;
 515:Core/Src/main.c ****   while(index < LOCATION_BUFFER_ITERATOR){
 516:Core/Src/main.c ****     //char data = FRAM_read8(index);
 517:Core/Src/main.c ****     strncpy((char*)writeBuf,FRAM_read(&index), sizeof(writeBuf));  //copy from buffer to SD (reset 
 518:Core/Src/main.c ****     #ifdef DEBUG
 519:Core/Src/main.c ****       //myprintf("Buffer data at address %d: %c\n",index, data);
 520:Core/Src/main.c ****       //char* test_Buf = FRAM_read(&index);
 521:Core/Src/main.c ****       //myprintf("Writebuf: %s\n", writeBuf);
 522:Core/Src/main.c ****       //myprintf("Updated read Index: %d\n", index);
 523:Core/Src/main.c ****     #endif
 524:Core/Src/main.c ****     fres = f_write(&workingFile, writeBuf, strlen(writeBuf), &bytesWrote);
 525:Core/Src/main.c ****     if(fres != FR_OK){
 526:Core/Src/main.c ****       myprintf("f_write error (%i)\r\n");
 527:Core/Src/main.c ****     }
 528:Core/Src/main.c ****     else Total_Byte_Wrote += bytesWrote;
 529:Core/Src/main.c ****   }
 530:Core/Src/main.c **** 
 531:Core/Src/main.c ****   #ifdef DEBUG 
 532:Core/Src/main.c ****   myprintf("Wrote total %i bytes to %s!\r\n", Total_Byte_Wrote, fileName);
 533:Core/Src/main.c ****   f_close(&workingFile);
 534:Core/Src/main.c ****   /*Now let's try to open file "test.txt"*/
 535:Core/Src/main.c ****   fres = f_open(&workingFile, fileName, FA_READ| FA_OPEN_EXISTING);
 536:Core/Src/main.c ****   if (fres != FR_OK) {
 537:Core/Src/main.c **** 	  myprintf("f_open error (%i)\r\n", fres);
 538:Core/Src/main.c **** 	  while(1);
 539:Core/Src/main.c ****   }
 540:Core/Src/main.c ****   myprintf("I was able to open %s !!\r\n", fileName);
 541:Core/Src/main.c ****   
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 63


 542:Core/Src/main.c ****   // while(1){
 543:Core/Src/main.c ****   //   rres = f_gets((TCHAR*)readBuf, sizeof(readBuf), &workingFile);
 544:Core/Src/main.c ****   //   if(rres == 0) {
 545:Core/Src/main.c **** 	//     myprintf("f_gets error (%i) | end of file\r\n", fres);
 546:Core/Src/main.c ****   //     break;
 547:Core/Src/main.c ****   //   }
 548:Core/Src/main.c ****   //   else myprintf("Read string from %s contents: %s\r\n",fileName, readBuf);
 549:Core/Src/main.c ****   // }
 550:Core/Src/main.c ****   // if(fres == FR_OK) {
 551:Core/Src/main.c ****   //   RX_Flag = 0;
 552:Core/Src/main.c ****   //   f_sync(&workingFile);
 553:Core/Src/main.c ****   // } 
 554:Core/Src/main.c ****   // else {
 555:Core/Src/main.c ****   //   f_sync(&workingFile);
 556:Core/Src/main.c ****   //   myprintf("Error (%i)\r\n");
 557:Core/Src/main.c ****   // }
 558:Core/Src/main.c ****   #endif
 559:Core/Src/main.c ****   f_sync(&workingFile);
 560:Core/Src/main.c ****   /*We're done with SD, let's un-mount the drive*/
 561:Core/Src/main.c ****   if (FATFS_UnLinkDriver(USERPath)){
 562:Core/Src/main.c ****     myprintf("FATFS Unlinked fail!!");
 563:Core/Src/main.c ****     Error_Handler();
 564:Core/Src/main.c ****   }
 565:Core/Src/main.c ****   else myprintf("FATFS Unlink success\n");
 566:Core/Src/main.c ****   f_mount(NULL, FATPATH, 0);
 567:Core/Src/main.c ****   /*We're also done with FRAM, let's reset the iterator*/
 568:Core/Src/main.c ****   LOCATION_BUFFER_ITERATOR = LOCATION_BUFFER_START;
 569:Core/Src/main.c ****   buffer_sync(LOCATION_BUFFER_ITERATOR, SD_DONE);
 570:Core/Src/main.c ****   /*Don't forget to turn off the power after using :) */
 571:Core/Src/main.c ****   turn_off_spi_SD();
 572:Core/Src/main.c ****   HAL_GPIO_WritePin(SD_EN_GPIO_Port, SD_EN_Pin, RESET);
 573:Core/Src/main.c ****   return 0;
 574:Core/Src/main.c **** }
 575:Core/Src/main.c **** 
 576:Core/Src/main.c **** /*Blink leds when SD mount error*/
 577:Core/Src/main.c **** void SD_error(){
 578:Core/Src/main.c ****   while(1){
 579:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 580:Core/Src/main.c ****     HAL_Delay(100);
 581:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 582:Core/Src/main.c ****     HAL_Delay(100);
 583:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 584:Core/Src/main.c ****     HAL_Delay(100);
 585:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 586:Core/Src/main.c ****     HAL_Delay(100);
 587:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 588:Core/Src/main.c ****     HAL_Delay(1000);
 589:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 590:Core/Src/main.c ****     HAL_Delay(1000);
 591:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 592:Core/Src/main.c ****     HAL_Delay(1000);
 593:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 594:Core/Src/main.c ****     HAL_Delay(1000);
 595:Core/Src/main.c ****   }
 596:Core/Src/main.c **** }
 597:Core/Src/main.c **** /* USER CODE END 0 */
 598:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 64


 599:Core/Src/main.c **** uint8_t buffer_sync(int* Buffer_Iterator, LOGGER_STAT stat){
 600:Core/Src/main.c ****   switch (stat)
 601:Core/Src/main.c ****   {
 602:Core/Src/main.c ****   case LOGGER_INIT:
 603:Core/Src/main.c ****     FRAM_sleepEnable(false);
 604:Core/Src/main.c ****     uint32_t _update_iterator = 0;
 605:Core/Src/main.c ****     uint8_t stat_check = FRAM_read8(BUFFER_STAT);
 606:Core/Src/main.c ****     if (stat_check == SD_DONE || stat_check == BUFFER_OK || stat_check == BUFFER_SYNC_DONE){
 607:Core/Src/main.c ****       #ifdef DEBUG
 608:Core/Src/main.c ****         myprintf("Done synchronizing.!!\n");
 609:Core/Src/main.c ****       #endif
 610:Core/Src/main.c ****       return BUFFER_OK;
 611:Core/Src/main.c ****     }
 612:Core/Src/main.c ****     else if (stat_check == BUFFER_SYNC_){
 613:Core/Src/main.c ****       _update_iterator = FRAM_read8(SYNC_BUFFER_MSB);
 614:Core/Src/main.c ****       _update_iterator = _update_iterator << 8;
 615:Core/Src/main.c ****       _update_iterator |= FRAM_read8(SYNC_BUFFER_MSB2);
 616:Core/Src/main.c ****       _update_iterator = _update_iterator << 8;
 617:Core/Src/main.c ****       _update_iterator |= FRAM_read8(SYNC_BUFFER_LSB);
 618:Core/Src/main.c **** 
 619:Core/Src/main.c ****       LOCATION_BUFFER_ITERATOR = _update_iterator;
 620:Core/Src/main.c ****       #ifdef DEBUG
 621:Core/Src/main.c ****         myprintf("\n\nLast logging period stops at %d\n", LOCATION_BUFFER_ITERATOR);
 622:Core/Src/main.c ****         myprintf("Buffer is reset!!... Now start synchronizing to SD\n\n");
 623:Core/Src/main.c ****       #endif
 624:Core/Src/main.c ****       appendFile(newLog(BUFFER_SYNC_));
 625:Core/Src/main.c ****       FRAM_writeEnable(true);
 626:Core/Src/main.c ****       FRAM_write8((uint8_t)BUFFER_STAT, BUFFER_SYNC_DONE);
 627:Core/Src/main.c ****       FRAM_writeEnable(false);
 628:Core/Src/main.c ****       return BUFFER_SYNC_DONE;
 629:Core/Src/main.c ****     }
 630:Core/Src/main.c ****   break;
 631:Core/Src/main.c **** 
 632:Core/Src/main.c ****   case BUFFER_SYNC_:
 633:Core/Src/main.c ****     /*Write current buffer location to FRAM (From uint32_t to 3 uin8_t(s) )*/
 634:Core/Src/main.c ****     FRAM_writeEnable(true);
 635:Core/Src/main.c ****     uint8_t _location = 0;  //Save current iterator location to buffer
 636:Core/Src/main.c ****     _location = (*Buffer_Iterator >> 16) & 0xff;
 637:Core/Src/main.c ****     FRAM_write8(SYNC_BUFFER_MSB, _location);
 638:Core/Src/main.c ****     _location = (*Buffer_Iterator >> 8) & 0xff;
 639:Core/Src/main.c ****     FRAM_write8(SYNC_BUFFER_MSB2, _location);
 640:Core/Src/main.c ****     _location = *Buffer_Iterator & 0xff;
 641:Core/Src/main.c ****     FRAM_write8(SYNC_BUFFER_LSB, _location);
 642:Core/Src/main.c **** 
 643:Core/Src/main.c ****     /*Update logger Status*/
 644:Core/Src/main.c ****     FRAM_write8((uint8_t)BUFFER_STAT, (uint8_t)BUFFER_SYNC_);
 645:Core/Src/main.c ****     FRAM_writeEnable(false);
 646:Core/Src/main.c ****     break;
 647:Core/Src/main.c **** 
 648:Core/Src/main.c ****   case SD_DONE:
 649:Core/Src/main.c ****     FRAM_writeEnable(true);
 650:Core/Src/main.c ****     FRAM_write8((uint8_t)BUFFER_STAT, SD_DONE);
 651:Core/Src/main.c ****     FRAM_writeEnable(true);
 652:Core/Src/main.c ****     return BUFFER_OK;
 653:Core/Src/main.c ****   break;
 654:Core/Src/main.c ****   default:
 655:Core/Src/main.c ****     break;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 65


 656:Core/Src/main.c ****   }
 657:Core/Src/main.c ****   return BUFFER_OK;
 658:Core/Src/main.c **** }
 659:Core/Src/main.c **** 
 660:Core/Src/main.c **** /**
 661:Core/Src/main.c ****   * @brief  The application entry point.
 662:Core/Src/main.c ****   * @retval int
 663:Core/Src/main.c ****   */
 664:Core/Src/main.c **** int main(void)
 665:Core/Src/main.c **** {
 666:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 667:Core/Src/main.c **** 
 668:Core/Src/main.c ****   /* USER CODE END 1 */
 669:Core/Src/main.c **** 
 670:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 671:Core/Src/main.c **** 
 672:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 673:Core/Src/main.c ****   HAL_Init();
 674:Core/Src/main.c **** 
 675:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 676:Core/Src/main.c **** 
 677:Core/Src/main.c ****   /* USER CODE END Init */
 678:Core/Src/main.c **** 
 679:Core/Src/main.c ****   /* Configure the system clock */
 680:Core/Src/main.c ****   SystemClock_Config();
 681:Core/Src/main.c **** 
 682:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 683:Core/Src/main.c **** 
 684:Core/Src/main.c ****   /* USER CODE END SysInit */
 685:Core/Src/main.c **** 
 686:Core/Src/main.c ****   /* Initialize all configured peripherals */
 687:Core/Src/main.c ****   MX_GPIO_Init();
 688:Core/Src/main.c ****   MX_SPI1_Init();
 689:Core/Src/main.c ****   MX_SPI2_Init();
 690:Core/Src/main.c ****   MX_USART2_UART_Init();
 691:Core/Src/main.c ****   MX_FATFS_Init();
 692:Core/Src/main.c ****   //MX_USB_DEVICE_Init();
 693:Core/Src/main.c ****   MX_CRC_Init();
 694:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 695:Core/Src/main.c ****   //USB_init(); //Check for USB cable connection
 696:Core/Src/main.c ****   //HAL_Delay(2000);
 697:Core/Src/main.c ****   if(!FRAM_begin(3)){
 698:Core/Src/main.c ****     myprintf("SPI FRAM begin error.. check your connection !!\n");
 699:Core/Src/main.c ****     while(1);
 700:Core/Src/main.c ****   }
 701:Core/Src/main.c ****   else myprintf("Logger begin!!\n");
 702:Core/Src/main.c ****   //uint8_t Logger_init_stat = FRAM_read8(BUFFER_STAT);
 703:Core/Src/main.c ****   #ifdef DEBUG
 704:Core/Src/main.c ****     uint8_t manufID;
 705:Core/Src/main.c ****     uint16_t prodID;
 706:Core/Src/main.c ****     FRAM_getID(&manufID, &prodID);  //Check FRAM parameter
 707:Core/Src/main.c ****     myprintf("Manufacture ID: 0x%X\n", manufID);
 708:Core/Src/main.c ****     myprintf("product ID: 0x%X\n", prodID);
 709:Core/Src/main.c ****     myprintf("Current iterator: %d\n", LOCATION_BUFFER_ITERATOR);
 710:Core/Src/main.c ****   #endif
 711:Core/Src/main.c ****   #ifdef RESET_FRAM
 712:Core/Src/main.c ****     FRAM_writeEnable(true);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 66


 713:Core/Src/main.c ****     FRAM_write8((uint8_t)BUFFER_STAT, BUFFER_OK);
 714:Core/Src/main.c ****     FRAM_write8(LOCATION_FILE_NUMBER_LSB, 0);
 715:Core/Src/main.c ****     FRAM_write8(LOCATION_FILE_NUMBER_MSB, 0);
 716:Core/Src/main.c ****     FRAM_writeEnable(false);
 717:Core/Src/main.c ****     SD_error();
 718:Core/Src/main.c ****   #endif
 719:Core/Src/main.c ****   if(buffer_sync(NULL, LOGGER_INIT) == BUFFER_SYNC_DONE){
 720:Core/Src/main.c ****     #ifdef DEBUG
 721:Core/Src/main.c ****     myprintf("Done synchronizing from last logging time...reset now!!\n");
 722:Core/Src/main.c ****     #endif
 723:Core/Src/main.c ****     NVIC_SystemReset();
 724:Core/Src/main.c ****   }  
 725:Core/Src/main.c **** 
 726:Core/Src/main.c ****   if(HAL_GPIO_ReadPin(Vbus_Sense_GPIO_Port, Vbus_Sense_Pin)){
 727:Core/Src/main.c ****     HAL_Delay(500);
 728:Core/Src/main.c ****     USB_init(USB_PLUGIN);  
 729:Core/Src/main.c ****   }
 730:Core/Src/main.c ****   else USB_init(USB_UNKNOWN);
 731:Core/Src/main.c **** 
 732:Core/Src/main.c ****   
 733:Core/Src/main.c ****   // if(USB_init(USB_UNKNOWN) == USB_PLUGIN);
 734:Core/Src/main.c ****   // else USB_init(USB_UNKNOWN);
 735:Core/Src/main.c ****   
 736:Core/Src/main.c ****   if(USB_Flag == 0){
 737:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)Rx_data, sizeof(Rx_data));
 738:Core/Src/main.c ****     /*Initialize FRAM buffer with address value 3*/
 739:Core/Src/main.c ****     /*turn off SD NAND to save power*/
 740:Core/Src/main.c ****     turn_off_spi_SD();                
 741:Core/Src/main.c ****     HAL_GPIO_WritePin(SD_EN_GPIO_Port, SD_EN_Pin, RESET);
 742:Core/Src/main.c ****   }
 743:Core/Src/main.c ****   #pragma region test SD
 744:Core/Src/main.c ****   // myprintf("\r\n~ SD card demo by kiwih ~\r\n\r\n");
 745:Core/Src/main.c ****   // HAL_Delay(1000);
 746:Core/Src/main.c ****   // //Open the file system
 747:Core/Src/main.c ****   // fres = f_mount(&FatFs, "", 1); //1=mount now
 748:Core/Src/main.c ****   // if (fres != FR_OK) {
 749:Core/Src/main.c **** 	// myprintf("f_mount error (%i)\r\n", fres);
 750:Core/Src/main.c **** 	// Error_Handler();
 751:Core/Src/main.c ****   // }
 752:Core/Src/main.c **** 
 753:Core/Src/main.c ****   // //Let's get some statistics from the SD card
 754:Core/Src/main.c ****   // DWORD free_clusters, free_sectors, total_sectors;
 755:Core/Src/main.c ****   // FATFS* getFreeFs;
 756:Core/Src/main.c ****   // fres = f_getfree("", &free_clusters, &getFreeFs);
 757:Core/Src/main.c ****   // if (fres != FR_OK) {
 758:Core/Src/main.c **** 	// myprintf("f_getfree error (%i)\r\n", fres);
 759:Core/Src/main.c **** 	// while(1);
 760:Core/Src/main.c ****   // }
 761:Core/Src/main.c ****   // //Formula comes from ChaN's documentation
 762:Core/Src/main.c ****   // total_sectors = (getFreeFs->n_fatent - 2) * getFreeFs->csize;
 763:Core/Src/main.c ****   // free_sectors = free_clusters * getFreeFs->csize;
 764:Core/Src/main.c ****   // myprintf("SD card stats:\r\n%10lu KiB total drive space.\r\n%10lu KiB available.\r\n", total_s
 765:Core/Src/main.c ****   // while (fres != FR_OK) {
 766:Core/Src/main.c **** 	//   myprintf("f_mount error (%i)\r\n", fres);
 767:Core/Src/main.c ****   //   fres = f_mount(&FatFs, "", 1); //1=mount now
 768:Core/Src/main.c ****   //   HAL_Delay(1000);
 769:Core/Src/main.c **** 	// Error_Handler();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 67


 770:Core/Src/main.c ****   // }
 771:Core/Src/main.c ****   #pragma endregion
 772:Core/Src/main.c ****   /* USER CODE END 2 */
 773:Core/Src/main.c **** 
 774:Core/Src/main.c ****   /* Infinite loop */
 775:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 776:Core/Src/main.c ****   while (1)
 777:Core/Src/main.c ****   {
 778:Core/Src/main.c ****     if(USB_Flag == 0){
 779:Core/Src/main.c ****       appendDATA();
 780:Core/Src/main.c ****     }
 781:Core/Src/main.c ****     /* USER CODE END WHILE */
 782:Core/Src/main.c **** 
 783:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 784:Core/Src/main.c ****   }
 785:Core/Src/main.c ****   /* USER CODE END 3 */
 786:Core/Src/main.c **** }
 787:Core/Src/main.c **** 
 788:Core/Src/main.c **** /**
 789:Core/Src/main.c ****   * @brief System Clock Configuration
 790:Core/Src/main.c ****   * @retval None
 791:Core/Src/main.c ****   */
 792:Core/Src/main.c **** void SystemClock_Config(void)
 793:Core/Src/main.c **** {
 794:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 795:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 796:Core/Src/main.c **** 
 797:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 798:Core/Src/main.c ****   */
 799:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 800:Core/Src/main.c ****   {
 801:Core/Src/main.c ****     Error_Handler();
 802:Core/Src/main.c ****   }
 803:Core/Src/main.c **** 
 804:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 805:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 806:Core/Src/main.c ****   */
 807:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_MSI;
 808:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 809:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 810:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 811:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 812:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_11;
 813:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 814:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 815:Core/Src/main.c ****   {
 816:Core/Src/main.c ****     Error_Handler();
 817:Core/Src/main.c ****   }
 818:Core/Src/main.c **** 
 819:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 820:Core/Src/main.c ****   */
 821:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 822:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 823:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 824:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 825:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 826:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 68


 827:Core/Src/main.c **** 
 828:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 829:Core/Src/main.c ****   {
 830:Core/Src/main.c ****     Error_Handler();
 831:Core/Src/main.c ****   }
 832:Core/Src/main.c **** }
 833:Core/Src/main.c **** 
 834:Core/Src/main.c **** /**
 835:Core/Src/main.c ****   * @brief CRC Initialization Function
 836:Core/Src/main.c ****   * @param None
 837:Core/Src/main.c ****   * @retval None
 838:Core/Src/main.c ****   */
 839:Core/Src/main.c **** static void MX_CRC_Init(void)
 840:Core/Src/main.c **** {
 841:Core/Src/main.c **** 
 842:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 0 */
 843:Core/Src/main.c **** 
 844:Core/Src/main.c ****   /* USER CODE END CRC_Init 0 */
 845:Core/Src/main.c **** 
 846:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 1 */
 847:Core/Src/main.c **** 
 848:Core/Src/main.c ****   /* USER CODE END CRC_Init 1 */
 849:Core/Src/main.c ****   hcrc.Instance = CRC;
 850:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 851:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 852:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 853:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 854:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 855:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 856:Core/Src/main.c ****   {
 857:Core/Src/main.c ****     Error_Handler();
 858:Core/Src/main.c ****   }
 859:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 2 */
 860:Core/Src/main.c **** 
 861:Core/Src/main.c ****   /* USER CODE END CRC_Init 2 */
 862:Core/Src/main.c **** 
 863:Core/Src/main.c **** }
 864:Core/Src/main.c **** 
 865:Core/Src/main.c **** /**
 866:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 867:Core/Src/main.c ****   * @param None
 868:Core/Src/main.c ****   * @retval None
 869:Core/Src/main.c ****   */
 870:Core/Src/main.c **** static void MX_SPI1_Init(void)
 871:Core/Src/main.c **** {
 872:Core/Src/main.c **** 
 873:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 874:Core/Src/main.c **** 
 875:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 876:Core/Src/main.c **** 
 877:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 878:Core/Src/main.c **** 
 879:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 880:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 881:Core/Src/main.c ****   hspi1.Instance = SPI1;
 882:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 883:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 69


 884:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 885:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 886:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 887:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 888:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 889:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 890:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 891:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 892:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 893:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 894:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 895:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 896:Core/Src/main.c ****   {
 897:Core/Src/main.c ****     Error_Handler();
 898:Core/Src/main.c ****   }
 899:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 900:Core/Src/main.c **** 
 901:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 902:Core/Src/main.c **** 
 903:Core/Src/main.c **** }
 904:Core/Src/main.c **** 
 905:Core/Src/main.c **** /**
 906:Core/Src/main.c ****   * @brief SPI2 Initialization Function
 907:Core/Src/main.c ****   * @param None
 908:Core/Src/main.c ****   * @retval None
 909:Core/Src/main.c ****   */
 910:Core/Src/main.c **** static void MX_SPI2_Init(void)
 911:Core/Src/main.c **** {
 912:Core/Src/main.c **** 
 913:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 0 */
 914:Core/Src/main.c **** 
 915:Core/Src/main.c ****   /* USER CODE END SPI2_Init 0 */
 916:Core/Src/main.c **** 
 917:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 1 */
 918:Core/Src/main.c **** 
 919:Core/Src/main.c ****   /* USER CODE END SPI2_Init 1 */
 920:Core/Src/main.c ****   /* SPI2 parameter configuration*/
 921:Core/Src/main.c ****   hspi2.Instance = SPI2;
 922:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 923:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 924:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 925:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 926:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 927:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 928:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 929:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 930:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 931:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 932:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 933:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 934:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 935:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 936:Core/Src/main.c ****   {
 937:Core/Src/main.c ****     Error_Handler();
 938:Core/Src/main.c ****   }
 939:Core/Src/main.c ****   /* USER CODE BEGIN SPI2_Init 2 */
 940:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 70


 941:Core/Src/main.c ****   /* USER CODE END SPI2_Init 2 */
 942:Core/Src/main.c **** 
 943:Core/Src/main.c **** }
 944:Core/Src/main.c **** 
 945:Core/Src/main.c **** /**
 946:Core/Src/main.c ****   * @brief USART2 Initialization Function
 947:Core/Src/main.c ****   * @param None
 948:Core/Src/main.c ****   * @retval None
 949:Core/Src/main.c ****   */
 950:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 951:Core/Src/main.c **** {
 952:Core/Src/main.c **** 
 953:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 954:Core/Src/main.c **** 
 955:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 956:Core/Src/main.c **** 
 957:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 958:Core/Src/main.c **** 
 959:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 960:Core/Src/main.c ****   huart2.Instance = USART2;
 961:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 962:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 963:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 964:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 965:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 966:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 967:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 968:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 969:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 970:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 971:Core/Src/main.c ****   {
 972:Core/Src/main.c ****     Error_Handler();
 973:Core/Src/main.c ****   }
 974:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 975:Core/Src/main.c **** 
 976:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 977:Core/Src/main.c **** 
 978:Core/Src/main.c **** }
 979:Core/Src/main.c **** 
 980:Core/Src/main.c **** /**
 981:Core/Src/main.c ****   * @brief GPIO Initialization Function
 982:Core/Src/main.c ****   * @param None
 983:Core/Src/main.c ****   * @retval None
 984:Core/Src/main.c ****   */
 985:Core/Src/main.c **** static void MX_GPIO_Init(void)
 986:Core/Src/main.c **** {
 103              		.loc 3 986 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 32
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 108              	.LCFI0:
 109              		.cfi_def_cfa_offset 20
 110              		.cfi_offset 4, -20
 111              		.cfi_offset 5, -16
 112              		.cfi_offset 6, -12
 113              		.cfi_offset 7, -8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 71


 114              		.cfi_offset 14, -4
 115 0002 89B0     		sub	sp, sp, #36
 116              	.LCFI1:
 117              		.cfi_def_cfa_offset 56
 987:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 118              		.loc 3 987 3 view .LVU16
 119              		.loc 3 987 20 is_stmt 0 view .LVU17
 120 0004 0024     		movs	r4, #0
 121 0006 0394     		str	r4, [sp, #12]
 122 0008 0494     		str	r4, [sp, #16]
 123 000a 0594     		str	r4, [sp, #20]
 124 000c 0694     		str	r4, [sp, #24]
 125 000e 0794     		str	r4, [sp, #28]
 988:Core/Src/main.c **** 
 989:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 990:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 126              		.loc 3 990 3 is_stmt 1 view .LVU18
 127              	.LBB12:
 128              		.loc 3 990 3 view .LVU19
 129              		.loc 3 990 3 view .LVU20
 130 0010 2A4B     		ldr	r3, .L7
 131 0012 DA6C     		ldr	r2, [r3, #76]
 132 0014 42F00102 		orr	r2, r2, #1
 133 0018 DA64     		str	r2, [r3, #76]
 134              		.loc 3 990 3 view .LVU21
 135 001a DA6C     		ldr	r2, [r3, #76]
 136 001c 02F00102 		and	r2, r2, #1
 137 0020 0192     		str	r2, [sp, #4]
 138              		.loc 3 990 3 view .LVU22
 139 0022 019A     		ldr	r2, [sp, #4]
 140              	.LBE12:
 141              		.loc 3 990 3 view .LVU23
 991:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 142              		.loc 3 991 3 view .LVU24
 143              	.LBB13:
 144              		.loc 3 991 3 view .LVU25
 145              		.loc 3 991 3 view .LVU26
 146 0024 DA6C     		ldr	r2, [r3, #76]
 147 0026 42F00202 		orr	r2, r2, #2
 148 002a DA64     		str	r2, [r3, #76]
 149              		.loc 3 991 3 view .LVU27
 150 002c DB6C     		ldr	r3, [r3, #76]
 151 002e 03F00203 		and	r3, r3, #2
 152 0032 0293     		str	r3, [sp, #8]
 153              		.loc 3 991 3 view .LVU28
 154 0034 029B     		ldr	r3, [sp, #8]
 155              	.LBE13:
 156              		.loc 3 991 3 view .LVU29
 992:Core/Src/main.c **** 
 993:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 994:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, FRAM_HOLD_Pin|FRAM_CS_Pin|SD_EN_Pin, GPIO_PIN_SET);
 157              		.loc 3 994 3 view .LVU30
 158 0036 0122     		movs	r2, #1
 159 0038 4FF49871 		mov	r1, #304
 160 003c 4FF09040 		mov	r0, #1207959552
 161 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 162              	.LVL0:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 72


 995:Core/Src/main.c **** 
 996:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 997:Core/Src/main.c ****   HAL_GPIO_WritePin(SD_CS_GPIO_Port, SD_CS_Pin, GPIO_PIN_SET);
 163              		.loc 3 997 3 view .LVU31
 164 0044 1E4E     		ldr	r6, .L7+4
 165 0046 0122     		movs	r2, #1
 166 0048 4FF40051 		mov	r1, #8192
 167 004c 3046     		mov	r0, r6
 168 004e FFF7FEFF 		bl	HAL_GPIO_WritePin
 169              	.LVL1:
 998:Core/Src/main.c **** 
 999:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
1000:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 170              		.loc 3 1000 3 view .LVU32
 171 0052 2246     		mov	r2, r4
 172 0054 4FF40041 		mov	r1, #32768
 173 0058 4FF09040 		mov	r0, #1207959552
 174 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 175              	.LVL2:
1001:Core/Src/main.c **** 
1002:Core/Src/main.c ****   /*Configure GPIO pins : FRAM_HOLD_Pin SD_EN_Pin LED_Pin */
1003:Core/Src/main.c ****   GPIO_InitStruct.Pin = FRAM_HOLD_Pin|SD_EN_Pin|LED_Pin;
 176              		.loc 3 1003 3 view .LVU33
 177              		.loc 3 1003 23 is_stmt 0 view .LVU34
 178 0060 48F21013 		movw	r3, #33040
 179 0064 0393     		str	r3, [sp, #12]
1004:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 180              		.loc 3 1004 3 is_stmt 1 view .LVU35
 181              		.loc 3 1004 24 is_stmt 0 view .LVU36
 182 0066 0125     		movs	r5, #1
 183 0068 0495     		str	r5, [sp, #16]
1005:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 184              		.loc 3 1005 3 is_stmt 1 view .LVU37
 185              		.loc 3 1005 24 is_stmt 0 view .LVU38
 186 006a 0594     		str	r4, [sp, #20]
1006:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 187              		.loc 3 1006 3 is_stmt 1 view .LVU39
 188              		.loc 3 1006 25 is_stmt 0 view .LVU40
 189 006c 0694     		str	r4, [sp, #24]
1007:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 190              		.loc 3 1007 3 is_stmt 1 view .LVU41
 191 006e 03A9     		add	r1, sp, #12
 192 0070 4FF09040 		mov	r0, #1207959552
 193 0074 FFF7FEFF 		bl	HAL_GPIO_Init
 194              	.LVL3:
1008:Core/Src/main.c **** 
1009:Core/Src/main.c ****   /*Configure GPIO pin : FRAM_CS_Pin */
1010:Core/Src/main.c ****   GPIO_InitStruct.Pin = FRAM_CS_Pin;
 195              		.loc 3 1010 3 view .LVU42
 196              		.loc 3 1010 23 is_stmt 0 view .LVU43
 197 0078 2023     		movs	r3, #32
 198 007a 0393     		str	r3, [sp, #12]
1011:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 199              		.loc 3 1011 3 is_stmt 1 view .LVU44
 200              		.loc 3 1011 24 is_stmt 0 view .LVU45
 201 007c 0495     		str	r5, [sp, #16]
1012:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 73


 202              		.loc 3 1012 3 is_stmt 1 view .LVU46
 203              		.loc 3 1012 24 is_stmt 0 view .LVU47
 204 007e 0594     		str	r4, [sp, #20]
1013:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 205              		.loc 3 1013 3 is_stmt 1 view .LVU48
 206              		.loc 3 1013 25 is_stmt 0 view .LVU49
 207 0080 0227     		movs	r7, #2
 208 0082 0697     		str	r7, [sp, #24]
1014:Core/Src/main.c ****   HAL_GPIO_Init(FRAM_CS_GPIO_Port, &GPIO_InitStruct);
 209              		.loc 3 1014 3 is_stmt 1 view .LVU50
 210 0084 03A9     		add	r1, sp, #12
 211 0086 4FF09040 		mov	r0, #1207959552
 212 008a FFF7FEFF 		bl	HAL_GPIO_Init
 213              	.LVL4:
1015:Core/Src/main.c **** 
1016:Core/Src/main.c ****   /*Configure GPIO pin : SD_CS_Pin */
1017:Core/Src/main.c ****   GPIO_InitStruct.Pin = SD_CS_Pin;
 214              		.loc 3 1017 3 view .LVU51
 215              		.loc 3 1017 23 is_stmt 0 view .LVU52
 216 008e 4FF40053 		mov	r3, #8192
 217 0092 0393     		str	r3, [sp, #12]
1018:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 218              		.loc 3 1018 3 is_stmt 1 view .LVU53
 219              		.loc 3 1018 24 is_stmt 0 view .LVU54
 220 0094 0495     		str	r5, [sp, #16]
1019:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 221              		.loc 3 1019 3 is_stmt 1 view .LVU55
 222              		.loc 3 1019 24 is_stmt 0 view .LVU56
 223 0096 0594     		str	r4, [sp, #20]
1020:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 224              		.loc 3 1020 3 is_stmt 1 view .LVU57
 225              		.loc 3 1020 25 is_stmt 0 view .LVU58
 226 0098 0697     		str	r7, [sp, #24]
1021:Core/Src/main.c ****   HAL_GPIO_Init(SD_CS_GPIO_Port, &GPIO_InitStruct);
 227              		.loc 3 1021 3 is_stmt 1 view .LVU59
 228 009a 03A9     		add	r1, sp, #12
 229 009c 3046     		mov	r0, r6
 230 009e FFF7FEFF 		bl	HAL_GPIO_Init
 231              	.LVL5:
1022:Core/Src/main.c **** 
1023:Core/Src/main.c ****   /*Configure GPIO pin : Vbus_Sense_Pin */
1024:Core/Src/main.c ****   GPIO_InitStruct.Pin = Vbus_Sense_Pin;
 232              		.loc 3 1024 3 view .LVU60
 233              		.loc 3 1024 23 is_stmt 0 view .LVU61
 234 00a2 4FF40073 		mov	r3, #512
 235 00a6 0393     		str	r3, [sp, #12]
1025:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 236              		.loc 3 1025 3 is_stmt 1 view .LVU62
 237              		.loc 3 1025 24 is_stmt 0 view .LVU63
 238 00a8 0494     		str	r4, [sp, #16]
1026:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 239              		.loc 3 1026 3 is_stmt 1 view .LVU64
 240              		.loc 3 1026 24 is_stmt 0 view .LVU65
 241 00aa 0594     		str	r4, [sp, #20]
1027:Core/Src/main.c ****   HAL_GPIO_Init(Vbus_Sense_GPIO_Port, &GPIO_InitStruct);
 242              		.loc 3 1027 3 is_stmt 1 view .LVU66
 243 00ac 03A9     		add	r1, sp, #12
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 74


 244 00ae 4FF09040 		mov	r0, #1207959552
 245 00b2 FFF7FEFF 		bl	HAL_GPIO_Init
 246              	.LVL6:
1028:Core/Src/main.c **** 
1029:Core/Src/main.c **** }
 247              		.loc 3 1029 1 is_stmt 0 view .LVU67
 248 00b6 09B0     		add	sp, sp, #36
 249              	.LCFI2:
 250              		.cfi_def_cfa_offset 20
 251              		@ sp needed
 252 00b8 F0BD     		pop	{r4, r5, r6, r7, pc}
 253              	.L8:
 254 00ba 00BF     		.align	2
 255              	.L7:
 256 00bc 00100240 		.word	1073876992
 257 00c0 00040048 		.word	1207960576
 258              		.cfi_endproc
 259              	.LFE153:
 261              		.section	.text.turn_off_spi_FRAM,"ax",%progbits
 262              		.align	1
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu fpv4-sp-d16
 268              	turn_off_spi_FRAM:
 269              	.LFB138:
 192:Core/Src/main.c ****   HAL_SPI_DeInit(&hspi1);
 270              		.loc 3 192 32 is_stmt 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 24
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274 0000 10B5     		push	{r4, lr}
 275              	.LCFI3:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 4, -8
 278              		.cfi_offset 14, -4
 279 0002 86B0     		sub	sp, sp, #24
 280              	.LCFI4:
 281              		.cfi_def_cfa_offset 32
 193:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 282              		.loc 3 193 3 view .LVU69
 283 0004 0E48     		ldr	r0, .L11
 284 0006 FFF7FEFF 		bl	HAL_SPI_DeInit
 285              	.LVL7:
 194:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1| GPIO_PIN_6| GPIO_PIN_7| FRAM_CS_Pin| LED_Pin| FRAM_HOLD_Pin,
 286              		.loc 3 194 3 view .LVU70
 194:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1| GPIO_PIN_6| GPIO_PIN_7| FRAM_CS_Pin| LED_Pin| FRAM_HOLD_Pin,
 287              		.loc 3 194 20 is_stmt 0 view .LVU71
 288 000a 0024     		movs	r4, #0
 289 000c 0194     		str	r4, [sp, #4]
 290 000e 0294     		str	r4, [sp, #8]
 291 0010 0394     		str	r4, [sp, #12]
 292 0012 0494     		str	r4, [sp, #16]
 293 0014 0594     		str	r4, [sp, #20]
 195:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_1| GPIO_PIN_6| GPIO_PIN_7| FRAM_CS_Pin| LED_Pin| FRAM_HOLD_Pin;
 294              		.loc 3 195 3 is_stmt 1 view .LVU72
 295 0016 2246     		mov	r2, r4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 75


 296 0018 48F2F201 		movw	r1, #33010
 297 001c 4FF09040 		mov	r0, #1207959552
 298 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 299              	.LVL8:
 196:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 300              		.loc 3 196 3 view .LVU73
 196:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 301              		.loc 3 196 23 is_stmt 0 view .LVU74
 302 0024 48F2F203 		movw	r3, #33010
 303 0028 0193     		str	r3, [sp, #4]
 197:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 304              		.loc 3 197 3 is_stmt 1 view .LVU75
 197:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 305              		.loc 3 197 24 is_stmt 0 view .LVU76
 306 002a 0323     		movs	r3, #3
 307 002c 0293     		str	r3, [sp, #8]
 198:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 308              		.loc 3 198 3 is_stmt 1 view .LVU77
 198:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 309              		.loc 3 198 24 is_stmt 0 view .LVU78
 310 002e 0394     		str	r4, [sp, #12]
 199:Core/Src/main.c **** }
 311              		.loc 3 199 3 is_stmt 1 view .LVU79
 312 0030 01A9     		add	r1, sp, #4
 313 0032 4FF09040 		mov	r0, #1207959552
 314 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 315              	.LVL9:
 200:Core/Src/main.c **** 
 316              		.loc 3 200 1 is_stmt 0 view .LVU80
 317 003a 06B0     		add	sp, sp, #24
 318              	.LCFI5:
 319              		.cfi_def_cfa_offset 8
 320              		@ sp needed
 321 003c 10BD     		pop	{r4, pc}
 322              	.L12:
 323 003e 00BF     		.align	2
 324              	.L11:
 325 0040 00000000 		.word	hspi1
 326              		.cfi_endproc
 327              	.LFE138:
 329              		.section	.text.turn_off_spi_SD,"ax",%progbits
 330              		.align	1
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 334              		.fpu fpv4-sp-d16
 336              	turn_off_spi_SD:
 337              	.LFB139:
 207:Core/Src/main.c ****   HAL_SPI_DeInit(&hspi2);
 338              		.loc 3 207 30 is_stmt 1 view -0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 24
 341              		@ frame_needed = 0, uses_anonymous_args = 0
 342 0000 30B5     		push	{r4, r5, lr}
 343              	.LCFI6:
 344              		.cfi_def_cfa_offset 12
 345              		.cfi_offset 4, -12
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 76


 346              		.cfi_offset 5, -8
 347              		.cfi_offset 14, -4
 348 0002 87B0     		sub	sp, sp, #28
 349              	.LCFI7:
 350              		.cfi_def_cfa_offset 40
 208:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 351              		.loc 3 208 3 view .LVU82
 352 0004 0D48     		ldr	r0, .L15
 353 0006 FFF7FEFF 		bl	HAL_SPI_DeInit
 354              	.LVL10:
 209:Core/Src/main.c ****   /*Configure GPIO pin Output Level */ 
 355              		.loc 3 209 3 view .LVU83
 209:Core/Src/main.c ****   /*Configure GPIO pin Output Level */ 
 356              		.loc 3 209 20 is_stmt 0 view .LVU84
 357 000a 0024     		movs	r4, #0
 358 000c 0194     		str	r4, [sp, #4]
 359 000e 0294     		str	r4, [sp, #8]
 360 0010 0394     		str	r4, [sp, #12]
 361 0012 0494     		str	r4, [sp, #16]
 362 0014 0594     		str	r4, [sp, #20]
 211:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_10| GPIO_PIN_14 |GPIO_PIN_15 |SD_CS_Pin;
 363              		.loc 3 211 3 is_stmt 1 view .LVU85
 364 0016 0A4D     		ldr	r5, .L15+4
 365 0018 2246     		mov	r2, r4
 366 001a 4FF46441 		mov	r1, #58368
 367 001e 2846     		mov	r0, r5
 368 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 369              	.LVL11:
 212:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 370              		.loc 3 212 3 view .LVU86
 212:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 371              		.loc 3 212 23 is_stmt 0 view .LVU87
 372 0024 4FF46443 		mov	r3, #58368
 373 0028 0193     		str	r3, [sp, #4]
 213:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 374              		.loc 3 213 3 is_stmt 1 view .LVU88
 213:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 375              		.loc 3 213 24 is_stmt 0 view .LVU89
 376 002a 0323     		movs	r3, #3
 377 002c 0293     		str	r3, [sp, #8]
 214:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 378              		.loc 3 214 3 is_stmt 1 view .LVU90
 214:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 379              		.loc 3 214 24 is_stmt 0 view .LVU91
 380 002e 0394     		str	r4, [sp, #12]
 215:Core/Src/main.c ****   //HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, RESET);
 381              		.loc 3 215 3 is_stmt 1 view .LVU92
 382 0030 01A9     		add	r1, sp, #4
 383 0032 2846     		mov	r0, r5
 384 0034 FFF7FEFF 		bl	HAL_GPIO_Init
 385              	.LVL12:
 218:Core/Src/main.c **** 
 386              		.loc 3 218 1 is_stmt 0 view .LVU93
 387 0038 07B0     		add	sp, sp, #28
 388              	.LCFI8:
 389              		.cfi_def_cfa_offset 12
 390              		@ sp needed
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 77


 391 003a 30BD     		pop	{r4, r5, pc}
 392              	.L16:
 393              		.align	2
 394              	.L15:
 395 003c 00000000 		.word	hspi2
 396 0040 00040048 		.word	1207960576
 397              		.cfi_endproc
 398              	.LFE139:
 400              		.section	.text.myprintf,"ax",%progbits
 401              		.align	1
 402              		.global	myprintf
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
 406              		.fpu fpv4-sp-d16
 408              	myprintf:
 409              	.LVL13:
 410              	.LFB136:
 154:Core/Src/main.c ****   static char buffer[500];
 411              		.loc 3 154 36 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 4, pretend = 16, frame = 8
 414              		@ frame_needed = 0, uses_anonymous_args = 1
 154:Core/Src/main.c ****   static char buffer[500];
 415              		.loc 3 154 36 is_stmt 0 view .LVU95
 416 0000 0FB4     		push	{r0, r1, r2, r3}
 417              	.LCFI9:
 418              		.cfi_def_cfa_offset 16
 419              		.cfi_offset 0, -16
 420              		.cfi_offset 1, -12
 421              		.cfi_offset 2, -8
 422              		.cfi_offset 3, -4
 423 0002 10B5     		push	{r4, lr}
 424              	.LCFI10:
 425              		.cfi_def_cfa_offset 24
 426              		.cfi_offset 4, -24
 427              		.cfi_offset 14, -20
 428 0004 82B0     		sub	sp, sp, #8
 429              	.LCFI11:
 430              		.cfi_def_cfa_offset 32
 431 0006 04AB     		add	r3, sp, #16
 432 0008 53F8042B 		ldr	r2, [r3], #4
 155:Core/Src/main.c ****   va_list args;
 433              		.loc 3 155 3 is_stmt 1 view .LVU96
 156:Core/Src/main.c ****   va_start(args, fmt);
 434              		.loc 3 156 3 view .LVU97
 157:Core/Src/main.c ****   vsnprintf(buffer, sizeof(buffer), fmt, args);
 435              		.loc 3 157 3 view .LVU98
 436 000c 0193     		str	r3, [sp, #4]
 158:Core/Src/main.c ****   va_end(args);
 437              		.loc 3 158 3 view .LVU99
 438 000e 0A4C     		ldr	r4, .L19
 439 0010 4FF4FA71 		mov	r1, #500
 440 0014 2046     		mov	r0, r4
 441 0016 FFF7FEFF 		bl	vsnprintf
 442              	.LVL14:
 159:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 78


 443              		.loc 3 159 3 view .LVU100
 161:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)buffer, len, -1);
 444              		.loc 3 161 3 view .LVU101
 161:Core/Src/main.c ****   HAL_UART_Transmit(&huart2, (uint8_t*)buffer, len, -1);
 445              		.loc 3 161 13 is_stmt 0 view .LVU102
 446 001a 2046     		mov	r0, r4
 447 001c FFF7FEFF 		bl	strlen
 448              	.LVL15:
 162:Core/Src/main.c **** }
 449              		.loc 3 162 3 is_stmt 1 view .LVU103
 450 0020 4FF0FF33 		mov	r3, #-1
 451 0024 82B2     		uxth	r2, r0
 452 0026 2146     		mov	r1, r4
 453 0028 0448     		ldr	r0, .L19+4
 454              	.LVL16:
 162:Core/Src/main.c **** }
 455              		.loc 3 162 3 is_stmt 0 view .LVU104
 456 002a FFF7FEFF 		bl	HAL_UART_Transmit
 457              	.LVL17:
 163:Core/Src/main.c **** 
 458              		.loc 3 163 1 view .LVU105
 459 002e 02B0     		add	sp, sp, #8
 460              	.LCFI12:
 461              		.cfi_def_cfa_offset 24
 462              		@ sp needed
 463 0030 BDE81040 		pop	{r4, lr}
 464              	.LCFI13:
 465              		.cfi_restore 14
 466              		.cfi_restore 4
 467              		.cfi_def_cfa_offset 16
 468 0034 04B0     		add	sp, sp, #16
 469              	.LCFI14:
 470              		.cfi_restore 3
 471              		.cfi_restore 2
 472              		.cfi_restore 1
 473              		.cfi_restore 0
 474              		.cfi_def_cfa_offset 0
 475 0036 7047     		bx	lr
 476              	.L20:
 477              		.align	2
 478              	.L19:
 479 0038 00000000 		.word	.LANCHOR0
 480 003c 00000000 		.word	huart2
 481              		.cfi_endproc
 482              	.LFE136:
 484              		.section	.text.USB_init,"ax",%progbits
 485              		.align	1
 486              		.global	USB_init
 487              		.syntax unified
 488              		.thumb
 489              		.thumb_func
 490              		.fpu fpv4-sp-d16
 492              	USB_init:
 493              	.LVL18:
 494              	.LFB137:
 170:Core/Src/main.c ****   /*If Cable plugin  USB device is configured by computer host*/
 495              		.loc 3 170 35 is_stmt 1 view -0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 79


 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 24
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 170:Core/Src/main.c ****   /*If Cable plugin  USB device is configured by computer host*/
 499              		.loc 3 170 35 is_stmt 0 view .LVU107
 500 0000 00B5     		push	{lr}
 501              	.LCFI15:
 502              		.cfi_def_cfa_offset 4
 503              		.cfi_offset 14, -4
 504 0002 87B0     		sub	sp, sp, #28
 505              	.LCFI16:
 506              		.cfi_def_cfa_offset 32
 172:Core/Src/main.c ****     GPIO_InitTypeDef GPIO_InitStruct = {0};
 507              		.loc 3 172 3 is_stmt 1 view .LVU108
 172:Core/Src/main.c ****     GPIO_InitTypeDef GPIO_InitStruct = {0};
 508              		.loc 3 172 5 is_stmt 0 view .LVU109
 509 0004 0728     		cmp	r0, #7
 510 0006 08D0     		beq	.L25
 181:Core/Src/main.c ****     USB_Flag = 1;
 511              		.loc 3 181 5 is_stmt 1 view .LVU110
 512 0008 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 513              	.LVL19:
 182:Core/Src/main.c ****   }
 514              		.loc 3 182 5 view .LVU111
 182:Core/Src/main.c ****   }
 515              		.loc 3 182 14 is_stmt 0 view .LVU112
 516 000c 0A4B     		ldr	r3, .L26
 517 000e 0122     		movs	r2, #1
 518 0010 1A70     		strb	r2, [r3]
 519              	.L23:
 184:Core/Src/main.c **** }
 520              		.loc 3 184 3 is_stmt 1 view .LVU113
 185:Core/Src/main.c **** 
 521              		.loc 3 185 1 is_stmt 0 view .LVU114
 522 0012 0020     		movs	r0, #0
 523 0014 07B0     		add	sp, sp, #28
 524              	.LCFI17:
 525              		.cfi_remember_state
 526              		.cfi_def_cfa_offset 4
 527              		@ sp needed
 528 0016 5DF804FB 		ldr	pc, [sp], #4
 529              	.LVL20:
 530              	.L25:
 531              	.LCFI18:
 532              		.cfi_restore_state
 533              	.LBB14:
 173:Core/Src/main.c ****     GPIO_InitStruct.Pin = Vbus_Sense_Pin| GPIO_PIN_11| GPIO_PIN_12;
 534              		.loc 3 173 5 is_stmt 1 view .LVU115
 173:Core/Src/main.c ****     GPIO_InitStruct.Pin = Vbus_Sense_Pin| GPIO_PIN_11| GPIO_PIN_12;
 535              		.loc 3 173 22 is_stmt 0 view .LVU116
 536 001a 0023     		movs	r3, #0
 537 001c 0493     		str	r3, [sp, #16]
 538 001e 0593     		str	r3, [sp, #20]
 174:Core/Src/main.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 539              		.loc 3 174 5 is_stmt 1 view .LVU117
 174:Core/Src/main.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 540              		.loc 3 174 25 is_stmt 0 view .LVU118
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 80


 541 0020 4FF4D052 		mov	r2, #6656
 542 0024 0192     		str	r2, [sp, #4]
 175:Core/Src/main.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 543              		.loc 3 175 5 is_stmt 1 view .LVU119
 175:Core/Src/main.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 544              		.loc 3 175 26 is_stmt 0 view .LVU120
 545 0026 0322     		movs	r2, #3
 546 0028 0292     		str	r2, [sp, #8]
 176:Core/Src/main.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 547              		.loc 3 176 5 is_stmt 1 view .LVU121
 176:Core/Src/main.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 548              		.loc 3 176 26 is_stmt 0 view .LVU122
 549 002a 0393     		str	r3, [sp, #12]
 177:Core/Src/main.c ****   }
 550              		.loc 3 177 5 is_stmt 1 view .LVU123
 551 002c 01A9     		add	r1, sp, #4
 552 002e 4FF09040 		mov	r0, #1207959552
 553              	.LVL21:
 177:Core/Src/main.c ****   }
 554              		.loc 3 177 5 is_stmt 0 view .LVU124
 555 0032 FFF7FEFF 		bl	HAL_GPIO_Init
 556              	.LVL22:
 557              	.LBE14:
 558 0036 ECE7     		b	.L23
 559              	.L27:
 560              		.align	2
 561              	.L26:
 562 0038 00000000 		.word	.LANCHOR1
 563              		.cfi_endproc
 564              	.LFE137:
 566              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 567              		.align	1
 568              		.global	HAL_UARTEx_RxEventCallback
 569              		.syntax unified
 570              		.thumb
 571              		.thumb_func
 572              		.fpu fpv4-sp-d16
 574              	HAL_UARTEx_RxEventCallback:
 575              	.LVL23:
 576              	.LFB140:
 221:Core/Src/main.c ****   if(!SD_Flag){
 577              		.loc 3 221 74 is_stmt 1 view -0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 221:Core/Src/main.c ****   if(!SD_Flag){
 581              		.loc 3 221 74 is_stmt 0 view .LVU126
 582 0000 10B5     		push	{r4, lr}
 583              	.LCFI19:
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 4, -8
 586              		.cfi_offset 14, -4
 222:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)Rx_data, sizeof(Rx_data));
 587              		.loc 3 222 3 is_stmt 1 view .LVU127
 222:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)Rx_data, sizeof(Rx_data));
 588              		.loc 3 222 6 is_stmt 0 view .LVU128
 589 0002 154B     		ldr	r3, .L32
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 81


 590 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 222:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)Rx_data, sizeof(Rx_data));
 591              		.loc 3 222 5 view .LVU129
 592 0006 83B9     		cbnz	r3, .L29
 223:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 593              		.loc 3 223 5 is_stmt 1 view .LVU130
 594 0008 4FF48052 		mov	r2, #4096
 595 000c 1349     		ldr	r1, .L32+4
 596              	.LVL24:
 223:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 597              		.loc 3 223 5 is_stmt 0 view .LVU131
 598 000e 1448     		ldr	r0, .L32+8
 599              	.LVL25:
 223:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 600              		.loc 3 223 5 view .LVU132
 601 0010 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 602              	.LVL26:
 224:Core/Src/main.c ****     RX_Flag = 1;
 603              		.loc 3 224 5 is_stmt 1 view .LVU133
 604 0014 0122     		movs	r2, #1
 605 0016 4FF40041 		mov	r1, #32768
 606 001a 4FF09040 		mov	r0, #1207959552
 607 001e FFF7FEFF 		bl	HAL_GPIO_WritePin
 608              	.LVL27:
 225:Core/Src/main.c ****   }
 609              		.loc 3 225 5 view .LVU134
 225:Core/Src/main.c ****   }
 610              		.loc 3 225 13 is_stmt 0 view .LVU135
 611 0022 104B     		ldr	r3, .L32+12
 612 0024 0122     		movs	r2, #1
 613 0026 1A70     		strb	r2, [r3]
 614              	.L28:
 235:Core/Src/main.c **** 
 615              		.loc 3 235 1 view .LVU136
 616 0028 10BD     		pop	{r4, pc}
 617              	.LVL28:
 618              	.L29:
 228:Core/Src/main.c ****     //strcat(Rx_back_up, Rx_data);
 619              		.loc 3 228 5 is_stmt 1 view .LVU137
 620 002a 0C4C     		ldr	r4, .L32+4
 621 002c 4FF48052 		mov	r2, #4096
 622 0030 2146     		mov	r1, r4
 623              	.LVL29:
 228:Core/Src/main.c ****     //strcat(Rx_back_up, Rx_data);
 624              		.loc 3 228 5 is_stmt 0 view .LVU138
 625 0032 0B48     		ldr	r0, .L32+8
 626              	.LVL30:
 228:Core/Src/main.c ****     //strcat(Rx_back_up, Rx_data);
 627              		.loc 3 228 5 view .LVU139
 628 0034 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 629              	.LVL31:
 230:Core/Src/main.c ****     memset(Rx_data,0,sizeof(Rx_data));  //This mean the SD is writing and we should store data else
 630              		.loc 3 230 5 is_stmt 1 view .LVU140
 631 0038 2146     		mov	r1, r4
 632 003a 0B48     		ldr	r0, .L32+16
 633 003c FFF7FEFF 		bl	strcat
 634              	.LVL32:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 82


 231:Core/Src/main.c ****     RX_Flag = 1;
 635              		.loc 3 231 5 view .LVU141
 636 0040 4FF48052 		mov	r2, #4096
 637 0044 0021     		movs	r1, #0
 638 0046 2046     		mov	r0, r4
 639 0048 FFF7FEFF 		bl	memset
 640              	.LVL33:
 232:Core/Src/main.c ****     RX_BACKUP_Flag = 1;
 641              		.loc 3 232 5 view .LVU142
 232:Core/Src/main.c ****     RX_BACKUP_Flag = 1;
 642              		.loc 3 232 13 is_stmt 0 view .LVU143
 643 004c 0123     		movs	r3, #1
 644 004e 054A     		ldr	r2, .L32+12
 645 0050 1370     		strb	r3, [r2]
 233:Core/Src/main.c ****   }
 646              		.loc 3 233 5 is_stmt 1 view .LVU144
 233:Core/Src/main.c ****   }
 647              		.loc 3 233 20 is_stmt 0 view .LVU145
 648 0052 064A     		ldr	r2, .L32+20
 649 0054 1370     		strb	r3, [r2]
 235:Core/Src/main.c **** 
 650              		.loc 3 235 1 view .LVU146
 651 0056 E7E7     		b	.L28
 652              	.L33:
 653              		.align	2
 654              	.L32:
 655 0058 00000000 		.word	.LANCHOR2
 656 005c 00000000 		.word	Rx_data
 657 0060 00000000 		.word	huart2
 658 0064 00000000 		.word	.LANCHOR3
 659 0068 00000000 		.word	Rx_back_up
 660 006c 00000000 		.word	.LANCHOR4
 661              		.cfi_endproc
 662              	.LFE140:
 664              		.section	.text.SD_error,"ax",%progbits
 665              		.align	1
 666              		.global	SD_error
 667              		.syntax unified
 668              		.thumb
 669              		.thumb_func
 670              		.fpu fpv4-sp-d16
 672              	SD_error:
 673              	.LFB145:
 577:Core/Src/main.c ****   while(1){
 674              		.loc 3 577 16 is_stmt 1 view -0
 675              		.cfi_startproc
 676              		@ Volatile: function does not return.
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 0, uses_anonymous_args = 0
 679 0000 08B5     		push	{r3, lr}
 680              	.LCFI20:
 681              		.cfi_def_cfa_offset 8
 682              		.cfi_offset 3, -8
 683              		.cfi_offset 14, -4
 684              	.L35:
 578:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 685              		.loc 3 578 3 discriminator 1 view .LVU148
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 83


 579:Core/Src/main.c ****     HAL_Delay(100);
 686              		.loc 3 579 5 discriminator 1 view .LVU149
 687 0002 0122     		movs	r2, #1
 688 0004 4FF40041 		mov	r1, #32768
 689 0008 4FF09040 		mov	r0, #1207959552
 690 000c FFF7FEFF 		bl	HAL_GPIO_WritePin
 691              	.LVL34:
 580:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 692              		.loc 3 580 5 discriminator 1 view .LVU150
 693 0010 6420     		movs	r0, #100
 694 0012 FFF7FEFF 		bl	HAL_Delay
 695              	.LVL35:
 581:Core/Src/main.c ****     HAL_Delay(100);
 696              		.loc 3 581 5 discriminator 1 view .LVU151
 697 0016 0022     		movs	r2, #0
 698 0018 4FF40041 		mov	r1, #32768
 699 001c 4FF09040 		mov	r0, #1207959552
 700 0020 FFF7FEFF 		bl	HAL_GPIO_WritePin
 701              	.LVL36:
 582:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 702              		.loc 3 582 5 discriminator 1 view .LVU152
 703 0024 6420     		movs	r0, #100
 704 0026 FFF7FEFF 		bl	HAL_Delay
 705              	.LVL37:
 583:Core/Src/main.c ****     HAL_Delay(100);
 706              		.loc 3 583 5 discriminator 1 view .LVU153
 707 002a 0122     		movs	r2, #1
 708 002c 4FF40041 		mov	r1, #32768
 709 0030 4FF09040 		mov	r0, #1207959552
 710 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
 711              	.LVL38:
 584:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 712              		.loc 3 584 5 discriminator 1 view .LVU154
 713 0038 6420     		movs	r0, #100
 714 003a FFF7FEFF 		bl	HAL_Delay
 715              	.LVL39:
 585:Core/Src/main.c ****     HAL_Delay(100);
 716              		.loc 3 585 5 discriminator 1 view .LVU155
 717 003e 0022     		movs	r2, #0
 718 0040 4FF40041 		mov	r1, #32768
 719 0044 4FF09040 		mov	r0, #1207959552
 720 0048 FFF7FEFF 		bl	HAL_GPIO_WritePin
 721              	.LVL40:
 586:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 722              		.loc 3 586 5 discriminator 1 view .LVU156
 723 004c 6420     		movs	r0, #100
 724 004e FFF7FEFF 		bl	HAL_Delay
 725              	.LVL41:
 587:Core/Src/main.c ****     HAL_Delay(1000);
 726              		.loc 3 587 5 discriminator 1 view .LVU157
 727 0052 0122     		movs	r2, #1
 728 0054 4FF40041 		mov	r1, #32768
 729 0058 4FF09040 		mov	r0, #1207959552
 730 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 731              	.LVL42:
 588:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 732              		.loc 3 588 5 discriminator 1 view .LVU158
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 84


 733 0060 4FF47A70 		mov	r0, #1000
 734 0064 FFF7FEFF 		bl	HAL_Delay
 735              	.LVL43:
 589:Core/Src/main.c ****     HAL_Delay(1000);
 736              		.loc 3 589 5 discriminator 1 view .LVU159
 737 0068 0022     		movs	r2, #0
 738 006a 4FF40041 		mov	r1, #32768
 739 006e 4FF09040 		mov	r0, #1207959552
 740 0072 FFF7FEFF 		bl	HAL_GPIO_WritePin
 741              	.LVL44:
 590:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 742              		.loc 3 590 5 discriminator 1 view .LVU160
 743 0076 4FF47A70 		mov	r0, #1000
 744 007a FFF7FEFF 		bl	HAL_Delay
 745              	.LVL45:
 591:Core/Src/main.c ****     HAL_Delay(1000);
 746              		.loc 3 591 5 discriminator 1 view .LVU161
 747 007e 0122     		movs	r2, #1
 748 0080 4FF40041 		mov	r1, #32768
 749 0084 4FF09040 		mov	r0, #1207959552
 750 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 751              	.LVL46:
 592:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 752              		.loc 3 592 5 discriminator 1 view .LVU162
 753 008c 4FF47A70 		mov	r0, #1000
 754 0090 FFF7FEFF 		bl	HAL_Delay
 755              	.LVL47:
 593:Core/Src/main.c ****     HAL_Delay(1000);
 756              		.loc 3 593 5 discriminator 1 view .LVU163
 757 0094 0022     		movs	r2, #0
 758 0096 4FF40041 		mov	r1, #32768
 759 009a 4FF09040 		mov	r0, #1207959552
 760 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 761              	.LVL48:
 594:Core/Src/main.c ****   }
 762              		.loc 3 594 5 discriminator 1 view .LVU164
 763 00a2 4FF47A70 		mov	r0, #1000
 764 00a6 FFF7FEFF 		bl	HAL_Delay
 765              	.LVL49:
 578:Core/Src/main.c ****     HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, SET);
 766              		.loc 3 578 8 discriminator 1 view .LVU165
 767 00aa AAE7     		b	.L35
 768              		.cfi_endproc
 769              	.LFE145:
 771              		.section	.text.Error_Handler,"ax",%progbits
 772              		.align	1
 773              		.global	Error_Handler
 774              		.syntax unified
 775              		.thumb
 776              		.thumb_func
 777              		.fpu fpv4-sp-d16
 779              	Error_Handler:
 780              	.LFB154:
1030:Core/Src/main.c **** 
1031:Core/Src/main.c **** /* USER CODE BEGIN 4 */
1032:Core/Src/main.c **** 
1033:Core/Src/main.c **** /* USER CODE END 4 */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 85


1034:Core/Src/main.c **** 
1035:Core/Src/main.c **** /**
1036:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
1037:Core/Src/main.c ****   * @retval None
1038:Core/Src/main.c ****   */
1039:Core/Src/main.c **** void Error_Handler(void)
1040:Core/Src/main.c **** {
 781              		.loc 3 1040 1 view -0
 782              		.cfi_startproc
 783              		@ Volatile: function does not return.
 784              		@ args = 0, pretend = 0, frame = 0
 785              		@ frame_needed = 0, uses_anonymous_args = 0
 786              		@ link register save eliminated.
1041:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
1042:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
1043:Core/Src/main.c ****   __disable_irq();
 787              		.loc 3 1043 3 view .LVU167
 788              	.LBB15:
 789              	.LBI15:
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 790              		.loc 2 207 27 view .LVU168
 791              	.LBB16:
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 792              		.loc 2 209 3 view .LVU169
 793              		.syntax unified
 794              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 795 0000 72B6     		cpsid i
 796              	@ 0 "" 2
 797              		.thumb
 798              		.syntax unified
 799              	.L38:
 800              	.LBE16:
 801              	.LBE15:
1044:Core/Src/main.c ****   while (1)
 802              		.loc 3 1044 3 discriminator 1 view .LVU170
1045:Core/Src/main.c ****   {
1046:Core/Src/main.c ****   }
 803              		.loc 3 1046 3 discriminator 1 view .LVU171
1044:Core/Src/main.c ****   while (1)
 804              		.loc 3 1044 9 discriminator 1 view .LVU172
 805 0002 FEE7     		b	.L38
 806              		.cfi_endproc
 807              	.LFE154:
 809              		.section	.text.MX_SPI1_Init,"ax",%progbits
 810              		.align	1
 811              		.syntax unified
 812              		.thumb
 813              		.thumb_func
 814              		.fpu fpv4-sp-d16
 816              	MX_SPI1_Init:
 817              	.LFB150:
 871:Core/Src/main.c **** 
 818              		.loc 3 871 1 view -0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 86


 823              	.LCFI21:
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 3, -8
 826              		.cfi_offset 14, -4
 881:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 827              		.loc 3 881 3 view .LVU174
 881:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 828              		.loc 3 881 18 is_stmt 0 view .LVU175
 829 0002 1048     		ldr	r0, .L43
 830 0004 104B     		ldr	r3, .L43+4
 831 0006 0360     		str	r3, [r0]
 882:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 832              		.loc 3 882 3 is_stmt 1 view .LVU176
 882:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 833              		.loc 3 882 19 is_stmt 0 view .LVU177
 834 0008 4FF48273 		mov	r3, #260
 835 000c 4360     		str	r3, [r0, #4]
 883:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 836              		.loc 3 883 3 is_stmt 1 view .LVU178
 883:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 837              		.loc 3 883 24 is_stmt 0 view .LVU179
 838 000e 0023     		movs	r3, #0
 839 0010 8360     		str	r3, [r0, #8]
 884:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 840              		.loc 3 884 3 is_stmt 1 view .LVU180
 884:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 841              		.loc 3 884 23 is_stmt 0 view .LVU181
 842 0012 4FF4E062 		mov	r2, #1792
 843 0016 C260     		str	r2, [r0, #12]
 885:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 844              		.loc 3 885 3 is_stmt 1 view .LVU182
 885:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 845              		.loc 3 885 26 is_stmt 0 view .LVU183
 846 0018 0361     		str	r3, [r0, #16]
 886:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 847              		.loc 3 886 3 is_stmt 1 view .LVU184
 886:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 848              		.loc 3 886 23 is_stmt 0 view .LVU185
 849 001a 4361     		str	r3, [r0, #20]
 887:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 850              		.loc 3 887 3 is_stmt 1 view .LVU186
 887:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 851              		.loc 3 887 18 is_stmt 0 view .LVU187
 852 001c 4FF40072 		mov	r2, #512
 853 0020 8261     		str	r2, [r0, #24]
 888:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 854              		.loc 3 888 3 is_stmt 1 view .LVU188
 888:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 855              		.loc 3 888 32 is_stmt 0 view .LVU189
 856 0022 1022     		movs	r2, #16
 857 0024 C261     		str	r2, [r0, #28]
 889:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 858              		.loc 3 889 3 is_stmt 1 view .LVU190
 889:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 859              		.loc 3 889 23 is_stmt 0 view .LVU191
 860 0026 0362     		str	r3, [r0, #32]
 890:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 87


 861              		.loc 3 890 3 is_stmt 1 view .LVU192
 890:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 862              		.loc 3 890 21 is_stmt 0 view .LVU193
 863 0028 4362     		str	r3, [r0, #36]
 891:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 864              		.loc 3 891 3 is_stmt 1 view .LVU194
 891:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 865              		.loc 3 891 29 is_stmt 0 view .LVU195
 866 002a 8362     		str	r3, [r0, #40]
 892:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 867              		.loc 3 892 3 is_stmt 1 view .LVU196
 892:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 868              		.loc 3 892 28 is_stmt 0 view .LVU197
 869 002c 0722     		movs	r2, #7
 870 002e C262     		str	r2, [r0, #44]
 893:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 871              		.loc 3 893 3 is_stmt 1 view .LVU198
 893:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 872              		.loc 3 893 24 is_stmt 0 view .LVU199
 873 0030 0363     		str	r3, [r0, #48]
 894:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 874              		.loc 3 894 3 is_stmt 1 view .LVU200
 894:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 875              		.loc 3 894 23 is_stmt 0 view .LVU201
 876 0032 0823     		movs	r3, #8
 877 0034 4363     		str	r3, [r0, #52]
 895:Core/Src/main.c ****   {
 878              		.loc 3 895 3 is_stmt 1 view .LVU202
 895:Core/Src/main.c ****   {
 879              		.loc 3 895 7 is_stmt 0 view .LVU203
 880 0036 FFF7FEFF 		bl	HAL_SPI_Init
 881              	.LVL50:
 895:Core/Src/main.c ****   {
 882              		.loc 3 895 6 view .LVU204
 883 003a 00B9     		cbnz	r0, .L42
 903:Core/Src/main.c **** 
 884              		.loc 3 903 1 view .LVU205
 885 003c 08BD     		pop	{r3, pc}
 886              	.L42:
 897:Core/Src/main.c ****   }
 887              		.loc 3 897 5 is_stmt 1 view .LVU206
 888 003e FFF7FEFF 		bl	Error_Handler
 889              	.LVL51:
 890              	.L44:
 891 0042 00BF     		.align	2
 892              	.L43:
 893 0044 00000000 		.word	hspi1
 894 0048 00300140 		.word	1073819648
 895              		.cfi_endproc
 896              	.LFE150:
 898              		.section	.text.MX_SPI2_Init,"ax",%progbits
 899              		.align	1
 900              		.syntax unified
 901              		.thumb
 902              		.thumb_func
 903              		.fpu fpv4-sp-d16
 905              	MX_SPI2_Init:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 88


 906              	.LFB151:
 911:Core/Src/main.c **** 
 907              		.loc 3 911 1 view -0
 908              		.cfi_startproc
 909              		@ args = 0, pretend = 0, frame = 0
 910              		@ frame_needed = 0, uses_anonymous_args = 0
 911 0000 08B5     		push	{r3, lr}
 912              	.LCFI22:
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 3, -8
 915              		.cfi_offset 14, -4
 921:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 916              		.loc 3 921 3 view .LVU208
 921:Core/Src/main.c ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 917              		.loc 3 921 18 is_stmt 0 view .LVU209
 918 0002 0F48     		ldr	r0, .L49
 919 0004 0F4B     		ldr	r3, .L49+4
 920 0006 0360     		str	r3, [r0]
 922:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 921              		.loc 3 922 3 is_stmt 1 view .LVU210
 922:Core/Src/main.c ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 922              		.loc 3 922 19 is_stmt 0 view .LVU211
 923 0008 4FF48273 		mov	r3, #260
 924 000c 4360     		str	r3, [r0, #4]
 923:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 925              		.loc 3 923 3 is_stmt 1 view .LVU212
 923:Core/Src/main.c ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 926              		.loc 3 923 24 is_stmt 0 view .LVU213
 927 000e 0023     		movs	r3, #0
 928 0010 8360     		str	r3, [r0, #8]
 924:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 929              		.loc 3 924 3 is_stmt 1 view .LVU214
 924:Core/Src/main.c ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 930              		.loc 3 924 23 is_stmt 0 view .LVU215
 931 0012 4FF4E062 		mov	r2, #1792
 932 0016 C260     		str	r2, [r0, #12]
 925:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 933              		.loc 3 925 3 is_stmt 1 view .LVU216
 925:Core/Src/main.c ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 934              		.loc 3 925 26 is_stmt 0 view .LVU217
 935 0018 0361     		str	r3, [r0, #16]
 926:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 936              		.loc 3 926 3 is_stmt 1 view .LVU218
 926:Core/Src/main.c ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 937              		.loc 3 926 23 is_stmt 0 view .LVU219
 938 001a 4361     		str	r3, [r0, #20]
 927:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 939              		.loc 3 927 3 is_stmt 1 view .LVU220
 927:Core/Src/main.c ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 940              		.loc 3 927 18 is_stmt 0 view .LVU221
 941 001c 4FF40072 		mov	r2, #512
 942 0020 8261     		str	r2, [r0, #24]
 928:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 943              		.loc 3 928 3 is_stmt 1 view .LVU222
 928:Core/Src/main.c ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 944              		.loc 3 928 32 is_stmt 0 view .LVU223
 945 0022 1022     		movs	r2, #16
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 89


 946 0024 C261     		str	r2, [r0, #28]
 929:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 947              		.loc 3 929 3 is_stmt 1 view .LVU224
 929:Core/Src/main.c ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 948              		.loc 3 929 23 is_stmt 0 view .LVU225
 949 0026 0362     		str	r3, [r0, #32]
 930:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 950              		.loc 3 930 3 is_stmt 1 view .LVU226
 930:Core/Src/main.c ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 951              		.loc 3 930 21 is_stmt 0 view .LVU227
 952 0028 4362     		str	r3, [r0, #36]
 931:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 953              		.loc 3 931 3 is_stmt 1 view .LVU228
 931:Core/Src/main.c ****   hspi2.Init.CRCPolynomial = 7;
 954              		.loc 3 931 29 is_stmt 0 view .LVU229
 955 002a 8362     		str	r3, [r0, #40]
 932:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 956              		.loc 3 932 3 is_stmt 1 view .LVU230
 932:Core/Src/main.c ****   hspi2.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 957              		.loc 3 932 28 is_stmt 0 view .LVU231
 958 002c 0722     		movs	r2, #7
 959 002e C262     		str	r2, [r0, #44]
 933:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 960              		.loc 3 933 3 is_stmt 1 view .LVU232
 933:Core/Src/main.c ****   hspi2.Init.NSSPMode = SPI_NSS_PULSE_DISABLE;
 961              		.loc 3 933 24 is_stmt 0 view .LVU233
 962 0030 0363     		str	r3, [r0, #48]
 934:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 963              		.loc 3 934 3 is_stmt 1 view .LVU234
 934:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 964              		.loc 3 934 23 is_stmt 0 view .LVU235
 965 0032 4363     		str	r3, [r0, #52]
 935:Core/Src/main.c ****   {
 966              		.loc 3 935 3 is_stmt 1 view .LVU236
 935:Core/Src/main.c ****   {
 967              		.loc 3 935 7 is_stmt 0 view .LVU237
 968 0034 FFF7FEFF 		bl	HAL_SPI_Init
 969              	.LVL52:
 935:Core/Src/main.c ****   {
 970              		.loc 3 935 6 view .LVU238
 971 0038 00B9     		cbnz	r0, .L48
 943:Core/Src/main.c **** 
 972              		.loc 3 943 1 view .LVU239
 973 003a 08BD     		pop	{r3, pc}
 974              	.L48:
 937:Core/Src/main.c ****   }
 975              		.loc 3 937 5 is_stmt 1 view .LVU240
 976 003c FFF7FEFF 		bl	Error_Handler
 977              	.LVL53:
 978              	.L50:
 979              		.align	2
 980              	.L49:
 981 0040 00000000 		.word	hspi2
 982 0044 00380040 		.word	1073756160
 983              		.cfi_endproc
 984              	.LFE151:
 986              		.section	.rodata.newLog.str1.4,"aMS",%progbits,1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 90


 987              		.align	2
 988              	.LC0:
 989 0000 0D0A7E20 		.ascii	"\015\012~ SD card initializing... ~\015\012\015\012"
 989      53442063 
 989      61726420 
 989      696E6974 
 989      69616C69 
 990 0021 00       		.ascii	"\000"
 991 0022 0000     		.align	2
 992              	.LC1:
 993 0024 665F6D6F 		.ascii	"f_mount error (%i)\015\012 Will try again for 5 tim"
 993      756E7420 
 993      6572726F 
 993      72202825 
 993      69290D0A 
 994 0051 65732069 		.ascii	"es in 0.5 seconds\012\000"
 994      6E20302E 
 994      35207365 
 994      636F6E64 
 994      730A00
 995              		.align	2
 996              	.LC2:
 997 0064 54727920 		.ascii	"Try %d times\012\000"
 997      25642074 
 997      696D6573 
 997      0A00
 998 0072 0000     		.align	2
 999              	.LC3:
 1000 0074 46415446 		.ascii	"FATFS Unlinked fail!!\000"
 1000      5320556E 
 1000      6C696E6B 
 1000      65642066 
 1000      61696C21 
 1001 008a 0000     		.align	2
 1002              	.LC4:
 1003 008c 46415446 		.ascii	"FATFS Unlink success\012\000"
 1003      5320556E 
 1003      6C696E6B 
 1003      20737563 
 1003      63657373 
 1004 00a2 0000     		.align	2
 1005              	.LC5:
 1006 00a4 0D0A7E20 		.ascii	"\015\012~ SD card re-initializing... ~\015\012\015\012"
 1006      53442063 
 1006      61726420 
 1006      72652D69 
 1006      6E697469 
 1007 00c8 00       		.ascii	"\000"
 1008 00c9 000000   		.align	2
 1009              	.LC6:
 1010 00cc 0D0A7E20 		.ascii	"\015\012~ SD card mounted successfully ~\015\012\015"
 1010      53442063 
 1010      61726420 
 1010      6D6F756E 
 1010      74656420 
 1011 00f1 0A00     		.ascii	"\012\000"
 1012 00f3 00       		.align	2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 91


 1013              	.LC7:
 1014 00f4 0A2A2A2A 		.ascii	"\012***FRAM generate/indicate file location!!\012\000"
 1014      4652414D 
 1014      2067656E 
 1014      65726174 
 1014      652F696E 
 1015              		.align	2
 1016              	.LC8:
 1017 0120 4C6F6361 		.ascii	"Location lsb: %d\012\000"
 1017      74696F6E 
 1017      206C7362 
 1017      3A202564 
 1017      0A00
 1018 0132 0000     		.align	2
 1019              	.LC9:
 1020 0134 4C6F6361 		.ascii	"Location msb: %d\012\000"
 1020      74696F6E 
 1020      206D7362 
 1020      3A202564 
 1020      0A00
 1021 0146 0000     		.align	2
 1022              	.LC10:
 1023 0148 4C4F4725 		.ascii	"LOG%05d.TXT\000"
 1023      3035642E 
 1023      54585400 
 1024              		.align	2
 1025              	.LC11:
 1026 0154 4C6F6361 		.ascii	"Location lsb updated: %d\012\000"
 1026      74696F6E 
 1026      206C7362 
 1026      20757064 
 1026      61746564 
 1027 016e 0000     		.align	2
 1028              	.LC12:
 1029 0170 4C6F6361 		.ascii	"Location msb updated: %d\012\000"
 1029      74696F6E 
 1029      206D7362 
 1029      20757064 
 1029      61746564 
 1030              		.section	.text.newLog,"ax",%progbits
 1031              		.align	1
 1032              		.global	newLog
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
 1036              		.fpu fpv4-sp-d16
 1038              	newLog:
 1039              	.LVL54:
 1040              	.LFB142:
 275:Core/Src/main.c ****   //HAL_UART_AbortReceive_IT(&huart2);  //Abort UART DATA for a quick instant
 1041              		.loc 3 275 31 view -0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 275:Core/Src/main.c ****   //HAL_UART_AbortReceive_IT(&huart2);  //Abort UART DATA for a quick instant
 1045              		.loc 3 275 31 is_stmt 0 view .LVU242
 1046 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 92


 1047              	.LCFI23:
 1048              		.cfi_def_cfa_offset 24
 1049              		.cfi_offset 3, -24
 1050              		.cfi_offset 4, -20
 1051              		.cfi_offset 5, -16
 1052              		.cfi_offset 6, -12
 1053              		.cfi_offset 7, -8
 1054              		.cfi_offset 14, -4
 1055 0002 0546     		mov	r5, r0
 277:Core/Src/main.c ****   unsigned int newFileNumber = 0;
 1056              		.loc 3 277 3 is_stmt 1 view .LVU243
 278:Core/Src/main.c ****   uint8_t attempt = 1;
 1057              		.loc 3 278 3 view .LVU244
 1058              	.LVL55:
 279:Core/Src/main.c **** 
 1059              		.loc 3 279 3 view .LVU245
 282:Core/Src/main.c ****   HAL_GPIO_DeInit(GPIOB, GPIO_PIN_10 | GPIO_PIN_14 | GPIO_PIN_15| SD_CS_Pin);
 1060              		.loc 3 282 3 view .LVU246
 1061 0004 0122     		movs	r2, #1
 1062 0006 4FF48071 		mov	r1, #256
 1063 000a 4FF09040 		mov	r0, #1207959552
 1064              	.LVL56:
 282:Core/Src/main.c ****   HAL_GPIO_DeInit(GPIOB, GPIO_PIN_10 | GPIO_PIN_14 | GPIO_PIN_15| SD_CS_Pin);
 1065              		.loc 3 282 3 is_stmt 0 view .LVU247
 1066 000e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1067              	.LVL57:
 283:Core/Src/main.c ****   MX_GPIO_Init();
 1068              		.loc 3 283 3 is_stmt 1 view .LVU248
 1069 0012 4FF46441 		mov	r1, #58368
 1070 0016 8C48     		ldr	r0, .L83
 1071 0018 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1072              	.LVL58:
 284:Core/Src/main.c ****   MX_SPI2_Init(); 
 1073              		.loc 3 284 3 view .LVU249
 1074 001c FFF7FEFF 		bl	MX_GPIO_Init
 1075              	.LVL59:
 285:Core/Src/main.c ****   MX_FATFS_Init();
 1076              		.loc 3 285 3 view .LVU250
 1077 0020 FFF7FEFF 		bl	MX_SPI2_Init
 1078              	.LVL60:
 286:Core/Src/main.c ****   HAL_Delay(300);
 1079              		.loc 3 286 3 view .LVU251
 1080 0024 FFF7FEFF 		bl	MX_FATFS_Init
 1081              	.LVL61:
 287:Core/Src/main.c **** 
 1082              		.loc 3 287 3 view .LVU252
 1083 0028 4FF49670 		mov	r0, #300
 1084 002c FFF7FEFF 		bl	HAL_Delay
 1085              	.LVL62:
 291:Core/Src/main.c ****   #endif
 1086              		.loc 3 291 3 view .LVU253
 1087 0030 8648     		ldr	r0, .L83+4
 1088 0032 FFF7FEFF 		bl	myprintf
 1089              	.LVL63:
 294:Core/Src/main.c ****   //FATFS_LinkDriver()
 1090              		.loc 3 294 3 view .LVU254
 294:Core/Src/main.c ****   //FATFS_LinkDriver()
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 93


 1091              		.loc 3 294 10 is_stmt 0 view .LVU255
 1092 0036 0122     		movs	r2, #1
 1093 0038 8549     		ldr	r1, .L83+8
 1094 003a 8648     		ldr	r0, .L83+12
 1095 003c FFF7FEFF 		bl	f_mount
 1096              	.LVL64:
 294:Core/Src/main.c ****   //FATFS_LinkDriver()
 1097              		.loc 3 294 8 view .LVU256
 1098 0040 854B     		ldr	r3, .L83+16
 1099 0042 1870     		strb	r0, [r3]
 296:Core/Src/main.c ****     if (attempt == 5){
 1100              		.loc 3 296 3 is_stmt 1 view .LVU257
 279:Core/Src/main.c **** 
 1101              		.loc 3 279 11 is_stmt 0 view .LVU258
 1102 0044 0124     		movs	r4, #1
 1103              	.LVL65:
 1104              	.L52:
 296:Core/Src/main.c ****     if (attempt == 5){
 1105              		.loc 3 296 9 is_stmt 1 view .LVU259
 296:Core/Src/main.c ****     if (attempt == 5){
 1106              		.loc 3 296 15 is_stmt 0 view .LVU260
 1107 0046 844B     		ldr	r3, .L83+16
 1108 0048 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 296:Core/Src/main.c ****     if (attempt == 5){
 1109              		.loc 3 296 9 view .LVU261
 1110 004a 0029     		cmp	r1, #0
 1111 004c 51D0     		beq	.L72
 297:Core/Src/main.c ****       SD_MOUNT_FAIL++;
 1112              		.loc 3 297 5 is_stmt 1 view .LVU262
 297:Core/Src/main.c ****       SD_MOUNT_FAIL++;
 1113              		.loc 3 297 8 is_stmt 0 view .LVU263
 1114 004e 052C     		cmp	r4, #5
 1115 0050 3DD0     		beq	.L73
 304:Core/Src/main.c ****     myprintf("Try %d times\n", attempt);
 1116              		.loc 3 304 5 is_stmt 1 view .LVU264
 1117 0052 8248     		ldr	r0, .L83+20
 1118 0054 FFF7FEFF 		bl	myprintf
 1119              	.LVL66:
 305:Core/Src/main.c ****     attempt++;
 1120              		.loc 3 305 5 view .LVU265
 1121 0058 2146     		mov	r1, r4
 1122 005a 8148     		ldr	r0, .L83+24
 1123 005c FFF7FEFF 		bl	myprintf
 1124              	.LVL67:
 306:Core/Src/main.c ****     if (FATFS_UnLinkDriver(&USERPath)){
 1125              		.loc 3 306 5 view .LVU266
 306:Core/Src/main.c ****     if (FATFS_UnLinkDriver(&USERPath)){
 1126              		.loc 3 306 12 is_stmt 0 view .LVU267
 1127 0060 0134     		adds	r4, r4, #1
 1128              	.LVL68:
 306:Core/Src/main.c ****     if (FATFS_UnLinkDriver(&USERPath)){
 1129              		.loc 3 306 12 view .LVU268
 1130 0062 E4B2     		uxtb	r4, r4
 1131              	.LVL69:
 307:Core/Src/main.c ****       myprintf("FATFS Unlinked fail!!");
 1132              		.loc 3 307 5 is_stmt 1 view .LVU269
 307:Core/Src/main.c ****       myprintf("FATFS Unlinked fail!!");
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 94


 1133              		.loc 3 307 9 is_stmt 0 view .LVU270
 1134 0064 7F48     		ldr	r0, .L83+28
 1135 0066 FFF7FEFF 		bl	FATFS_UnLinkDriver
 1136              	.LVL70:
 307:Core/Src/main.c ****       myprintf("FATFS Unlinked fail!!");
 1137              		.loc 3 307 8 view .LVU271
 1138 006a 0028     		cmp	r0, #0
 1139 006c 3CD1     		bne	.L74
 311:Core/Src/main.c ****     turn_off_spi_SD();
 1140              		.loc 3 311 10 is_stmt 1 view .LVU272
 1141 006e 7E48     		ldr	r0, .L83+32
 1142 0070 FFF7FEFF 		bl	myprintf
 1143              	.LVL71:
 312:Core/Src/main.c ****     HAL_GPIO_WritePin(SD_EN_GPIO_Port, SD_EN_Pin, RESET);
 1144              		.loc 3 312 5 view .LVU273
 1145 0074 FFF7FEFF 		bl	turn_off_spi_SD
 1146              	.LVL72:
 313:Core/Src/main.c ****     HAL_Delay(1000);
 1147              		.loc 3 313 5 view .LVU274
 1148 0078 0022     		movs	r2, #0
 1149 007a 4FF48071 		mov	r1, #256
 1150 007e 4FF09040 		mov	r0, #1207959552
 1151 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1152              	.LVL73:
 314:Core/Src/main.c ****     
 1153              		.loc 3 314 5 view .LVU275
 1154 0086 4FF47A70 		mov	r0, #1000
 1155 008a FFF7FEFF 		bl	HAL_Delay
 1156              	.LVL74:
 317:Core/Src/main.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_10 | GPIO_PIN_14 | GPIO_PIN_15| SD_CS_Pin);
 1157              		.loc 3 317 5 view .LVU276
 1158 008e 0122     		movs	r2, #1
 1159 0090 4FF48071 		mov	r1, #256
 1160 0094 4FF09040 		mov	r0, #1207959552
 1161 0098 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1162              	.LVL75:
 318:Core/Src/main.c ****     MX_GPIO_Init();
 1163              		.loc 3 318 5 view .LVU277
 1164 009c 4FF46441 		mov	r1, #58368
 1165 00a0 6948     		ldr	r0, .L83
 1166 00a2 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1167              	.LVL76:
 319:Core/Src/main.c ****     MX_SPI2_Init();
 1168              		.loc 3 319 5 view .LVU278
 1169 00a6 FFF7FEFF 		bl	MX_GPIO_Init
 1170              	.LVL77:
 320:Core/Src/main.c ****     MX_FATFS_Init(); 
 1171              		.loc 3 320 5 view .LVU279
 1172 00aa FFF7FEFF 		bl	MX_SPI2_Init
 1173              	.LVL78:
 321:Core/Src/main.c ****     HAL_Delay(100);
 1174              		.loc 3 321 5 view .LVU280
 1175 00ae FFF7FEFF 		bl	MX_FATFS_Init
 1176              	.LVL79:
 322:Core/Src/main.c ****     myprintf("\r\n~ SD card re-initializing... ~\r\n\r\n");
 1177              		.loc 3 322 5 view .LVU281
 1178 00b2 6420     		movs	r0, #100
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 95


 1179 00b4 FFF7FEFF 		bl	HAL_Delay
 1180              	.LVL80:
 323:Core/Src/main.c ****     fres = f_mount(&FatFs, (const TCHAR *)FATPATH, 1); //1=mount now
 1181              		.loc 3 323 5 view .LVU282
 1182 00b8 6C48     		ldr	r0, .L83+36
 1183 00ba FFF7FEFF 		bl	myprintf
 1184              	.LVL81:
 324:Core/Src/main.c ****   }
 1185              		.loc 3 324 5 view .LVU283
 324:Core/Src/main.c ****   }
 1186              		.loc 3 324 12 is_stmt 0 view .LVU284
 1187 00be 0122     		movs	r2, #1
 1188 00c0 6349     		ldr	r1, .L83+8
 1189 00c2 6448     		ldr	r0, .L83+12
 1190 00c4 FFF7FEFF 		bl	f_mount
 1191              	.LVL82:
 324:Core/Src/main.c ****   }
 1192              		.loc 3 324 10 view .LVU285
 1193 00c8 634B     		ldr	r3, .L83+16
 1194 00ca 1870     		strb	r0, [r3]
 1195 00cc BBE7     		b	.L52
 1196              	.L73:
 298:Core/Src/main.c ****       if(SD_MOUNT_FAIL == 4) 
 1197              		.loc 3 298 7 is_stmt 1 view .LVU286
 298:Core/Src/main.c ****       if(SD_MOUNT_FAIL == 4) 
 1198              		.loc 3 298 20 is_stmt 0 view .LVU287
 1199 00ce 684A     		ldr	r2, .L83+40
 1200 00d0 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1201 00d2 0133     		adds	r3, r3, #1
 1202 00d4 DBB2     		uxtb	r3, r3
 1203 00d6 1370     		strb	r3, [r2]
 299:Core/Src/main.c ****       SD_Flag = 0;
 1204              		.loc 3 299 7 is_stmt 1 view .LVU288
 299:Core/Src/main.c ****       SD_Flag = 0;
 1205              		.loc 3 299 9 is_stmt 0 view .LVU289
 1206 00d8 042B     		cmp	r3, #4
 1207 00da 01D0     		beq	.L75
 1208              	.L54:
 301:Core/Src/main.c ****       //return;
 1209              		.loc 3 301 7 is_stmt 1 view .LVU290
 1210 00dc FFF7FEFF 		bl	Error_Handler
 1211              	.LVL83:
 1212              	.L75:
 300:Core/Src/main.c ****       Error_Handler();
 1213              		.loc 3 300 7 view .LVU291
 300:Core/Src/main.c ****       Error_Handler();
 1214              		.loc 3 300 15 is_stmt 0 view .LVU292
 1215 00e0 644B     		ldr	r3, .L83+44
 1216 00e2 0022     		movs	r2, #0
 1217 00e4 1A70     		strb	r2, [r3]
 1218 00e6 F9E7     		b	.L54
 1219              	.L74:
 308:Core/Src/main.c ****       NVIC_SystemReset();
 1220              		.loc 3 308 7 is_stmt 1 view .LVU293
 1221 00e8 6348     		ldr	r0, .L83+48
 1222 00ea FFF7FEFF 		bl	myprintf
 1223              	.LVL84:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 96


 309:Core/Src/main.c ****     }
 1224              		.loc 3 309 7 view .LVU294
 1225 00ee FFF7FEFF 		bl	__NVIC_SystemReset
 1226              	.LVL85:
 1227              	.L72:
 328:Core/Src/main.c ****   myprintf("\n***FRAM generate/indicate file location!!\n");
 1228              		.loc 3 328 3 view .LVU295
 1229 00f2 6248     		ldr	r0, .L83+52
 1230 00f4 FFF7FEFF 		bl	myprintf
 1231              	.LVL86:
 329:Core/Src/main.c ****   #endif
 1232              		.loc 3 329 3 view .LVU296
 1233 00f8 6148     		ldr	r0, .L83+56
 1234 00fa FFF7FEFF 		bl	myprintf
 1235              	.LVL87:
 333:Core/Src/main.c ****   msb = FRAM_read8(LOCATION_FILE_NUMBER_MSB);
 1236              		.loc 3 333 3 view .LVU297
 333:Core/Src/main.c ****   msb = FRAM_read8(LOCATION_FILE_NUMBER_MSB);
 1237              		.loc 3 333 9 is_stmt 0 view .LVU298
 1238 00fe 0320     		movs	r0, #3
 1239 0100 FFF7FEFF 		bl	FRAM_read8
 1240              	.LVL88:
 1241 0104 0646     		mov	r6, r0
 1242              	.LVL89:
 334:Core/Src/main.c ****   
 1243              		.loc 3 334 3 is_stmt 1 view .LVU299
 334:Core/Src/main.c ****   
 1244              		.loc 3 334 9 is_stmt 0 view .LVU300
 1245 0106 0420     		movs	r0, #4
 1246 0108 FFF7FEFF 		bl	FRAM_read8
 1247              	.LVL90:
 1248 010c 0746     		mov	r7, r0
 1249              	.LVL91:
 337:Core/Src/main.c ****   myprintf("Location msb: %d\n", msb);
 1250              		.loc 3 337 3 is_stmt 1 view .LVU301
 1251 010e 3146     		mov	r1, r6
 1252 0110 5C48     		ldr	r0, .L83+60
 1253 0112 FFF7FEFF 		bl	myprintf
 1254              	.LVL92:
 338:Core/Src/main.c ****   #endif
 1255              		.loc 3 338 3 view .LVU302
 1256 0116 3946     		mov	r1, r7
 1257 0118 5B48     		ldr	r0, .L83+64
 1258 011a FFF7FEFF 		bl	myprintf
 1259              	.LVL93:
 342:Core/Src/main.c ****   newFileNumber = newFileNumber << 8;
 1260              		.loc 3 342 3 view .LVU303
 343:Core/Src/main.c ****   newFileNumber |= lsb;
 1261              		.loc 3 343 3 view .LVU304
 344:Core/Src/main.c ****   
 1262              		.loc 3 344 3 view .LVU305
 344:Core/Src/main.c ****   
 1263              		.loc 3 344 17 is_stmt 0 view .LVU306
 1264 011e 46EA0724 		orr	r4, r6, r7, lsl #8
 1265              	.LVL94:
 346:Core/Src/main.c ****     newFileNumber -= 1;
 1266              		.loc 3 346 3 is_stmt 1 view .LVU307
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 97


 346:Core/Src/main.c ****     newFileNumber -= 1;
 1267              		.loc 3 346 5 is_stmt 0 view .LVU308
 1268 0122 012D     		cmp	r5, #1
 1269 0124 0CD0     		beq	.L76
 352:Core/Src/main.c ****     //Let's init them both to 0
 1270              		.loc 3 352 3 is_stmt 1 view .LVU309
 352:Core/Src/main.c ****     //Let's init them both to 0
 1271              		.loc 3 352 6 is_stmt 0 view .LVU310
 1272 0126 594B     		ldr	r3, .L83+68
 1273 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 352:Core/Src/main.c ****     //Let's init them both to 0
 1274              		.loc 3 352 5 view .LVU311
 1275 012a 002B     		cmp	r3, #0
 1276 012c 00F08880 		beq	.L68
 354:Core/Src/main.c ****       newFileNumber = 0;
 1277              		.loc 3 354 5 is_stmt 1 view .LVU312
 354:Core/Src/main.c ****       newFileNumber = 0;
 1278              		.loc 3 354 7 is_stmt 0 view .LVU313
 1279 0130 FF2E     		cmp	r6, #255
 1280 0132 0DD0     		beq	.L77
 1281              	.L59:
 367:Core/Src/main.c ****       return 0;
 1282              		.loc 3 367 5 is_stmt 1 view .LVU314
 367:Core/Src/main.c ****       return 0;
 1283              		.loc 3 367 7 is_stmt 0 view .LVU315
 1284 0134 4FF6FE73 		movw	r3, #65534
 1285 0138 9C42     		cmp	r4, r3
 1286 013a 57D1     		bne	.L66
 368:Core/Src/main.c ****     }
 1287              		.loc 3 368 14 view .LVU316
 1288 013c 0020     		movs	r0, #0
 1289 013e 80E0     		b	.L51
 1290              	.L76:
 347:Core/Src/main.c ****     sprintf(newFileName, "LOG%05d.TXT", newFileNumber);
 1291              		.loc 3 347 5 is_stmt 1 view .LVU317
 1292              	.LVL95:
 348:Core/Src/main.c ****     return newFileName;
 1293              		.loc 3 348 5 view .LVU318
 1294 0140 534D     		ldr	r5, .L83+72
 1295 0142 621E     		subs	r2, r4, #1
 1296              	.LVL96:
 348:Core/Src/main.c ****     return newFileName;
 1297              		.loc 3 348 5 is_stmt 0 view .LVU319
 1298 0144 5349     		ldr	r1, .L83+76
 1299 0146 2846     		mov	r0, r5
 1300 0148 FFF7FEFF 		bl	sprintf
 1301              	.LVL97:
 349:Core/Src/main.c ****   }
 1302              		.loc 3 349 5 is_stmt 1 view .LVU320
 349:Core/Src/main.c ****   }
 1303              		.loc 3 349 12 is_stmt 0 view .LVU321
 1304 014c 2846     		mov	r0, r5
 1305 014e 78E0     		b	.L51
 1306              	.LVL98:
 1307              	.L77:
 354:Core/Src/main.c ****       newFileNumber = 0;
 1308              		.loc 3 354 20 discriminator 1 view .LVU322
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 98


 1309 0150 FF2F     		cmp	r7, #255
 1310 0152 EFD1     		bne	.L59
 355:Core/Src/main.c ****       FRAM_writeEnable(true);
 1311              		.loc 3 355 7 is_stmt 1 view .LVU323
 1312              	.LVL99:
 356:Core/Src/main.c ****       FRAM_write8(LOCATION_FILE_NUMBER_LSB, 0x00);
 1313              		.loc 3 356 7 view .LVU324
 1314 0154 0120     		movs	r0, #1
 1315 0156 FFF7FEFF 		bl	FRAM_writeEnable
 1316              	.LVL100:
 357:Core/Src/main.c ****       FRAM_write8(LOCATION_FILE_NUMBER_MSB, 0x00);
 1317              		.loc 3 357 7 view .LVU325
 1318 015a 0021     		movs	r1, #0
 1319 015c 0320     		movs	r0, #3
 1320 015e FFF7FEFF 		bl	FRAM_write8
 1321              	.LVL101:
 358:Core/Src/main.c ****       FRAM_writeEnable(false);
 1322              		.loc 3 358 7 view .LVU326
 1323 0162 0021     		movs	r1, #0
 1324 0164 0420     		movs	r0, #4
 1325 0166 FFF7FEFF 		bl	FRAM_write8
 1326              	.LVL102:
 359:Core/Src/main.c ****       #ifdef DEBUG
 1327              		.loc 3 359 7 view .LVU327
 1328 016a 0020     		movs	r0, #0
 1329 016c FFF7FEFF 		bl	FRAM_writeEnable
 1330              	.LVL103:
 361:Core/Src/main.c ****       myprintf("Location msb updated: %d\n", msb);
 1331              		.loc 3 361 7 view .LVU328
 1332 0170 3146     		mov	r1, r6
 1333 0172 4948     		ldr	r0, .L83+80
 1334 0174 FFF7FEFF 		bl	myprintf
 1335              	.LVL104:
 362:Core/Src/main.c ****       //HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, SET);
 1336              		.loc 3 362 7 view .LVU329
 1337 0178 3946     		mov	r1, r7
 1338 017a 4848     		ldr	r0, .L83+84
 1339 017c FFF7FEFF 		bl	myprintf
 1340              	.LVL105:
 367:Core/Src/main.c ****       return 0;
 1341              		.loc 3 367 5 view .LVU330
 355:Core/Src/main.c ****       FRAM_writeEnable(true);
 1342              		.loc 3 355 21 is_stmt 0 view .LVU331
 1343 0180 0024     		movs	r4, #0
 1344 0182 33E0     		b	.L66
 1345              	.LVL106:
 1346              	.L81:
 376:Core/Src/main.c ****         break;
 1347              		.loc 3 376 9 is_stmt 1 view .LVU332
 1348 0184 4648     		ldr	r0, .L83+88
 1349 0186 FFF7FEFF 		bl	f_close
 1350              	.LVL107:
 377:Core/Src/main.c ****       }
 1351              		.loc 3 377 9 view .LVU333
 393:Core/Src/main.c ****       newFileNumber++; //Increment so the next power up uses the next file #
 1352              		.loc 3 393 5 view .LVU334
 393:Core/Src/main.c ****       newFileNumber++; //Increment so the next power up uses the next file #
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 99


 1353              		.loc 3 393 23 is_stmt 0 view .LVU335
 1354 018a 464B     		ldr	r3, .L83+92
 1355 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 393:Core/Src/main.c ****       newFileNumber++; //Increment so the next power up uses the next file #
 1356              		.loc 3 393 7 view .LVU336
 1357 018e 012B     		cmp	r3, #1
 1358 0190 4CD0     		beq	.L78
 1359              	.L63:
 397:Core/Src/main.c ****     msb = (uint8_t)((newFileNumber & 0xff00)>>8);
 1360              		.loc 3 397 5 is_stmt 1 view .LVU337
 397:Core/Src/main.c ****     msb = (uint8_t)((newFileNumber & 0xff00)>>8);
 1361              		.loc 3 397 9 is_stmt 0 view .LVU338
 1362 0192 E5B2     		uxtb	r5, r4
 1363              	.LVL108:
 398:Core/Src/main.c **** 
 1364              		.loc 3 398 5 is_stmt 1 view .LVU339
 398:Core/Src/main.c **** 
 1365              		.loc 3 398 45 is_stmt 0 view .LVU340
 1366 0194 270A     		lsrs	r7, r4, #8
 1367              	.LVL109:
 398:Core/Src/main.c **** 
 1368              		.loc 3 398 9 view .LVU341
 1369 0196 C4F30726 		ubfx	r6, r4, #8, #8
 1370              	.LVL110:
 400:Core/Src/main.c ****     FRAM_write8(LOCATION_FILE_NUMBER_LSB, lsb); //LSB
 1371              		.loc 3 400 5 is_stmt 1 view .LVU342
 1372 019a 0120     		movs	r0, #1
 1373 019c FFF7FEFF 		bl	FRAM_writeEnable
 1374              	.LVL111:
 401:Core/Src/main.c **** 
 1375              		.loc 3 401 5 view .LVU343
 1376 01a0 2946     		mov	r1, r5
 1377 01a2 0320     		movs	r0, #3
 1378 01a4 FFF7FEFF 		bl	FRAM_write8
 1379              	.LVL112:
 403:Core/Src/main.c ****     FRAM_write8(LOCATION_FILE_NUMBER_MSB, msb); //MSB
 1380              		.loc 3 403 5 view .LVU344
 403:Core/Src/main.c ****     FRAM_write8(LOCATION_FILE_NUMBER_MSB, msb); //MSB
 1381              		.loc 3 403 8 is_stmt 0 view .LVU345
 1382 01a8 0420     		movs	r0, #4
 1383 01aa FFF7FEFF 		bl	FRAM_read8
 1384              	.LVL113:
 403:Core/Src/main.c ****     FRAM_write8(LOCATION_FILE_NUMBER_MSB, msb); //MSB
 1385              		.loc 3 403 7 view .LVU346
 1386 01ae B042     		cmp	r0, r6
 1387 01b0 41D1     		bne	.L79
 1388              	.L67:
 406:Core/Src/main.c ****     FRAM_sleepEnable(true);
 1389              		.loc 3 406 5 is_stmt 1 view .LVU347
 1390 01b2 0020     		movs	r0, #0
 1391 01b4 FFF7FEFF 		bl	FRAM_writeEnable
 1392              	.LVL114:
 407:Core/Src/main.c **** 
 1393              		.loc 3 407 5 view .LVU348
 1394 01b8 0120     		movs	r0, #1
 1395 01ba FFF7FEFF 		bl	FRAM_sleepEnable
 1396              	.LVL115:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 100


 410:Core/Src/main.c ****       myprintf("Location msb updated: %d\n", msb);
 1397              		.loc 3 410 7 view .LVU349
 1398 01be E1B2     		uxtb	r1, r4
 1399 01c0 3548     		ldr	r0, .L83+80
 1400 01c2 FFF7FEFF 		bl	myprintf
 1401              	.LVL116:
 411:Core/Src/main.c ****       //HAL_GPIO_WritePin(LD4_GPIO_Port, LD4_Pin, SET);
 1402              		.loc 3 411 7 view .LVU350
 1403 01c6 F9B2     		uxtb	r1, r7
 1404 01c8 3448     		ldr	r0, .L83+84
 1405 01ca FFF7FEFF 		bl	myprintf
 1406              	.LVL117:
 414:Core/Src/main.c ****   }
 1407              		.loc 3 414 5 view .LVU351
 414:Core/Src/main.c ****   }
 1408              		.loc 3 414 16 is_stmt 0 view .LVU352
 1409 01ce 2F4B     		ldr	r3, .L83+68
 1410 01d0 0022     		movs	r2, #0
 1411 01d2 1A70     		strb	r2, [r3]
 416:Core/Src/main.c **** }
 1412              		.loc 3 416 10 view .LVU353
 1413 01d4 2E48     		ldr	r0, .L83+72
 1414 01d6 34E0     		b	.L51
 1415              	.LVL118:
 1416              	.L82:
 384:Core/Src/main.c ****           return newFileName; // Use existing empty file.
 1417              		.loc 3 384 11 is_stmt 1 view .LVU354
 1418 01d8 2846     		mov	r0, r5
 1419 01da FFF7FEFF 		bl	f_close
 1420              	.LVL119:
 385:Core/Src/main.c ****         }
 1421              		.loc 3 385 11 view .LVU355
 385:Core/Src/main.c ****         }
 1422              		.loc 3 385 18 is_stmt 0 view .LVU356
 1423 01de 2C48     		ldr	r0, .L83+72
 1424 01e0 2FE0     		b	.L51
 1425              	.L64:
 390:Core/Src/main.c ****       if(newFileNumber > 65533) return 0;
 1426              		.loc 3 390 7 is_stmt 1 view .LVU357
 390:Core/Src/main.c ****       if(newFileNumber > 65533) return 0;
 1427              		.loc 3 390 20 is_stmt 0 view .LVU358
 1428 01e2 0134     		adds	r4, r4, #1
 1429              	.LVL120:
 391:Core/Src/main.c ****     }
 1430              		.loc 3 391 7 is_stmt 1 view .LVU359
 391:Core/Src/main.c ****     }
 1431              		.loc 3 391 9 is_stmt 0 view .LVU360
 1432 01e4 4FF6FD73 		movw	r3, #65533
 1433 01e8 9C42     		cmp	r4, r3
 1434 01ea 2BD8     		bhi	.L80
 1435              	.LVL121:
 1436              	.L66:
 370:Core/Src/main.c ****       sprintf(newFileName, "LOG%05d.TXT", newFileNumber);
 1437              		.loc 3 370 5 is_stmt 1 view .LVU361
 371:Core/Src/main.c **** 
 1438              		.loc 3 371 7 view .LVU362
 1439 01ec 284D     		ldr	r5, .L83+72
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 101


 1440 01ee 2246     		mov	r2, r4
 1441 01f0 2849     		ldr	r1, .L83+76
 1442 01f2 2846     		mov	r0, r5
 1443 01f4 FFF7FEFF 		bl	sprintf
 1444              	.LVL122:
 374:Core/Src/main.c ****       if(fres == FR_OK){
 1445              		.loc 3 374 7 view .LVU363
 374:Core/Src/main.c ****       if(fres == FR_OK){
 1446              		.loc 3 374 14 is_stmt 0 view .LVU364
 1447 01f8 0622     		movs	r2, #6
 1448 01fa 2946     		mov	r1, r5
 1449 01fc 2848     		ldr	r0, .L83+88
 1450 01fe FFF7FEFF 		bl	f_open
 1451              	.LVL123:
 374:Core/Src/main.c ****       if(fres == FR_OK){
 1452              		.loc 3 374 12 view .LVU365
 1453 0202 154B     		ldr	r3, .L83+16
 1454 0204 1870     		strb	r0, [r3]
 375:Core/Src/main.c ****         f_close(&newFile);
 1455              		.loc 3 375 7 is_stmt 1 view .LVU366
 375:Core/Src/main.c ****         f_close(&newFile);
 1456              		.loc 3 375 9 is_stmt 0 view .LVU367
 1457 0206 0028     		cmp	r0, #0
 1458 0208 BCD0     		beq	.L81
 381:Core/Src/main.c ****         fres = f_open(&newFile, newFileName, FA_READ | FA_OPEN_EXISTING);
 1459              		.loc 3 381 7 is_stmt 1 view .LVU368
 381:Core/Src/main.c ****         fres = f_open(&newFile, newFileName, FA_READ | FA_OPEN_EXISTING);
 1460              		.loc 3 381 9 is_stmt 0 view .LVU369
 1461 020a 0828     		cmp	r0, #8
 1462 020c E9D1     		bne	.L64
 382:Core/Src/main.c ****         if(f_size(&newFile) == 0){
 1463              		.loc 3 382 9 is_stmt 1 view .LVU370
 382:Core/Src/main.c ****         if(f_size(&newFile) == 0){
 1464              		.loc 3 382 16 is_stmt 0 view .LVU371
 1465 020e 244D     		ldr	r5, .L83+88
 1466 0210 0122     		movs	r2, #1
 1467 0212 1F49     		ldr	r1, .L83+72
 1468 0214 2846     		mov	r0, r5
 1469 0216 FFF7FEFF 		bl	f_open
 1470              	.LVL124:
 382:Core/Src/main.c ****         if(f_size(&newFile) == 0){
 1471              		.loc 3 382 14 view .LVU372
 1472 021a 0F4B     		ldr	r3, .L83+16
 1473 021c 1870     		strb	r0, [r3]
 383:Core/Src/main.c ****           f_close(&newFile);  // Close this existing file we just opened.
 1474              		.loc 3 383 9 is_stmt 1 view .LVU373
 383:Core/Src/main.c ****           f_close(&newFile);  // Close this existing file we just opened.
 1475              		.loc 3 383 12 is_stmt 0 view .LVU374
 1476 021e EB68     		ldr	r3, [r5, #12]
 383:Core/Src/main.c ****           f_close(&newFile);  // Close this existing file we just opened.
 1477              		.loc 3 383 11 view .LVU375
 1478 0220 002B     		cmp	r3, #0
 1479 0222 D9D0     		beq	.L82
 387:Core/Src/main.c ****       }
 1480              		.loc 3 387 9 is_stmt 1 view .LVU376
 1481 0224 1E48     		ldr	r0, .L83+88
 1482 0226 FFF7FEFF 		bl	f_close
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 102


 1483              	.LVL125:
 1484 022a DAE7     		b	.L64
 1485              	.L78:
 394:Core/Src/main.c ****       BOARD_POWER_UP = 0;
 1486              		.loc 3 394 7 view .LVU377
 394:Core/Src/main.c ****       BOARD_POWER_UP = 0;
 1487              		.loc 3 394 20 is_stmt 0 view .LVU378
 1488 022c 0134     		adds	r4, r4, #1
 1489              	.LVL126:
 395:Core/Src/main.c ****     }
 1490              		.loc 3 395 7 is_stmt 1 view .LVU379
 395:Core/Src/main.c ****     }
 1491              		.loc 3 395 22 is_stmt 0 view .LVU380
 1492 022e 1D4B     		ldr	r3, .L83+92
 1493 0230 0022     		movs	r2, #0
 1494 0232 1A70     		strb	r2, [r3]
 1495 0234 ADE7     		b	.L63
 1496              	.LVL127:
 1497              	.L79:
 404:Core/Src/main.c **** 
 1498              		.loc 3 404 5 is_stmt 1 view .LVU381
 1499 0236 3146     		mov	r1, r6
 1500 0238 0420     		movs	r0, #4
 1501 023a FFF7FEFF 		bl	FRAM_write8
 1502              	.LVL128:
 1503 023e B8E7     		b	.L67
 1504              	.LVL129:
 1505              	.L68:
 416:Core/Src/main.c **** }
 1506              		.loc 3 416 10 is_stmt 0 view .LVU382
 1507 0240 1348     		ldr	r0, .L83+72
 1508              	.LVL130:
 1509              	.L51:
 417:Core/Src/main.c **** 
 1510              		.loc 3 417 1 view .LVU383
 1511 0242 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1512              	.LVL131:
 1513              	.L80:
 391:Core/Src/main.c ****     }
 1514              		.loc 3 391 40 view .LVU384
 1515 0244 0020     		movs	r0, #0
 1516 0246 FCE7     		b	.L51
 1517              	.L84:
 1518              		.align	2
 1519              	.L83:
 1520 0248 00040048 		.word	1207960576
 1521 024c 00000000 		.word	.LC0
 1522 0250 00000000 		.word	FATPATH
 1523 0254 00000000 		.word	FatFs
 1524 0258 00000000 		.word	fres
 1525 025c 24000000 		.word	.LC1
 1526 0260 64000000 		.word	.LC2
 1527 0264 00000000 		.word	USERPath
 1528 0268 8C000000 		.word	.LC4
 1529 026c A4000000 		.word	.LC5
 1530 0270 00000000 		.word	.LANCHOR6
 1531 0274 00000000 		.word	.LANCHOR2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 103


 1532 0278 74000000 		.word	.LC3
 1533 027c CC000000 		.word	.LC6
 1534 0280 F4000000 		.word	.LC7
 1535 0284 20010000 		.word	.LC8
 1536 0288 34010000 		.word	.LC9
 1537 028c 00000000 		.word	.LANCHOR7
 1538 0290 00000000 		.word	.LANCHOR5
 1539 0294 48010000 		.word	.LC10
 1540 0298 54010000 		.word	.LC11
 1541 029c 70010000 		.word	.LC12
 1542 02a0 00000000 		.word	newFile
 1543 02a4 00000000 		.word	.LANCHOR8
 1544              		.cfi_endproc
 1545              	.LFE142:
 1547              		.section	.rodata.appendFile.str1.4,"aMS",%progbits,1
 1548              		.align	2
 1549              	.LC13:
 1550 0000 665F6F70 		.ascii	"f_open error (%i)\015\012\000"
 1550      656E2065 
 1550      72726F72 
 1550      20282569 
 1550      290D0A00 
 1551              		.align	2
 1552              	.LC14:
 1553 0014 665F7772 		.ascii	"f_write error (%i)\015\012\000"
 1553      69746520 
 1553      6572726F 
 1553      72202825 
 1553      69290D0A 
 1554 0029 000000   		.align	2
 1555              	.LC15:
 1556 002c 57726F74 		.ascii	"Wrote total %i bytes to %s!\015\012\000"
 1556      6520746F 
 1556      74616C20 
 1556      25692062 
 1556      79746573 
 1557 004a 0000     		.align	2
 1558              	.LC16:
 1559 004c 49207761 		.ascii	"I was able to open %s !!\015\012\000"
 1559      73206162 
 1559      6C652074 
 1559      6F206F70 
 1559      656E2025 
 1560              		.section	.text.appendFile,"ax",%progbits
 1561              		.align	1
 1562              		.global	appendFile
 1563              		.syntax unified
 1564              		.thumb
 1565              		.thumb_func
 1566              		.fpu fpv4-sp-d16
 1568              	appendFile:
 1569              	.LVL132:
 1570              	.LFB144:
 497:Core/Src/main.c ****   UINT bytesWrote = 0;
 1571              		.loc 3 497 35 is_stmt 1 view -0
 1572              		.cfi_startproc
 1573              		@ args = 0, pretend = 0, frame = 2056
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 104


 1574              		@ frame_needed = 0, uses_anonymous_args = 0
 497:Core/Src/main.c ****   UINT bytesWrote = 0;
 1575              		.loc 3 497 35 is_stmt 0 view .LVU386
 1576 0000 30B5     		push	{r4, r5, lr}
 1577              	.LCFI24:
 1578              		.cfi_def_cfa_offset 12
 1579              		.cfi_offset 4, -12
 1580              		.cfi_offset 5, -8
 1581              		.cfi_offset 14, -4
 1582 0002 ADF60C0D 		subw	sp, sp, #2060
 1583              	.LCFI25:
 1584              		.cfi_def_cfa_offset 2072
 1585 0006 0446     		mov	r4, r0
 498:Core/Src/main.c ****   UINT Total_Byte_Wrote = 0;
 1586              		.loc 3 498 3 is_stmt 1 view .LVU387
 498:Core/Src/main.c ****   UINT Total_Byte_Wrote = 0;
 1587              		.loc 3 498 8 is_stmt 0 view .LVU388
 1588 0008 0023     		movs	r3, #0
 1589 000a CDF80438 		str	r3, [sp, #2052]
 499:Core/Src/main.c ****   const char writeBuf[2048];
 1590              		.loc 3 499 3 is_stmt 1 view .LVU389
 1591              	.LVL133:
 500:Core/Src/main.c ****   fres = f_open(&workingFile, fileName, FA_READ| FA_WRITE | FA_OPEN_APPEND);
 1592              		.loc 3 500 3 view .LVU390
 501:Core/Src/main.c ****   if(fres != FR_OK){
 1593              		.loc 3 501 3 view .LVU391
 501:Core/Src/main.c ****   if(fres != FR_OK){
 1594              		.loc 3 501 10 is_stmt 0 view .LVU392
 1595 000e 3322     		movs	r2, #51
 1596 0010 0146     		mov	r1, r0
 1597 0012 4148     		ldr	r0, .L101
 1598              	.LVL134:
 501:Core/Src/main.c ****   if(fres != FR_OK){
 1599              		.loc 3 501 10 view .LVU393
 1600 0014 FFF7FEFF 		bl	f_open
 1601              	.LVL135:
 501:Core/Src/main.c ****   if(fres != FR_OK){
 1602              		.loc 3 501 8 view .LVU394
 1603 0018 404B     		ldr	r3, .L101+4
 1604 001a 1870     		strb	r0, [r3]
 502:Core/Src/main.c ****     #ifdef DEBUG
 1605              		.loc 3 502 3 is_stmt 1 view .LVU395
 502:Core/Src/main.c ****     #ifdef DEBUG
 1606              		.loc 3 502 5 is_stmt 0 view .LVU396
 1607 001c 48B9     		cbnz	r0, .L96
 508:Core/Src/main.c ****     f_rewind(&workingFile);
 1608              		.loc 3 508 3 is_stmt 1 view .LVU397
 508:Core/Src/main.c ****     f_rewind(&workingFile);
 1609              		.loc 3 508 6 is_stmt 0 view .LVU398
 1610 001e 3E4B     		ldr	r3, .L101
 1611 0020 DB68     		ldr	r3, [r3, #12]
 508:Core/Src/main.c ****     f_rewind(&workingFile);
 1612              		.loc 3 508 5 view .LVU399
 1613 0022 63B1     		cbz	r3, .L97
 1614              	.L87:
 513:Core/Src/main.c ****   uint32_t index = LOCATION_BUFFER_START;
 1615              		.loc 3 513 3 is_stmt 1 view .LVU400
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 105


 1616 0024 0020     		movs	r0, #0
 1617 0026 FFF7FEFF 		bl	FRAM_sleepEnable
 1618              	.LVL136:
 514:Core/Src/main.c ****   while(index < LOCATION_BUFFER_ITERATOR){
 1619              		.loc 3 514 3 view .LVU401
 514:Core/Src/main.c ****   while(index < LOCATION_BUFFER_ITERATOR){
 1620              		.loc 3 514 12 is_stmt 0 view .LVU402
 1621 002a 1423     		movs	r3, #20
 1622 002c 0093     		str	r3, [sp]
 515:Core/Src/main.c ****     //char data = FRAM_read8(index);
 1623              		.loc 3 515 3 is_stmt 1 view .LVU403
 499:Core/Src/main.c ****   const char writeBuf[2048];
 1624              		.loc 3 499 8 is_stmt 0 view .LVU404
 1625 002e 0025     		movs	r5, #0
 515:Core/Src/main.c ****     //char data = FRAM_read8(index);
 1626              		.loc 3 515 8 view .LVU405
 1627 0030 11E0     		b	.L88
 1628              	.L96:
 1629 0032 0146     		mov	r1, r0
 504:Core/Src/main.c ****     #endif
 1630              		.loc 3 504 7 is_stmt 1 view .LVU406
 1631 0034 3A48     		ldr	r0, .L101+8
 1632 0036 FFF7FEFF 		bl	myprintf
 1633              	.LVL137:
 506:Core/Src/main.c ****   }
 1634              		.loc 3 506 5 view .LVU407
 1635 003a FFF7FEFF 		bl	Error_Handler
 1636              	.LVL138:
 1637              	.L97:
 509:Core/Src/main.c ****     f_sync(&workingFile);
 1638              		.loc 3 509 5 view .LVU408
 1639 003e 364D     		ldr	r5, .L101
 1640 0040 0021     		movs	r1, #0
 1641 0042 2846     		mov	r0, r5
 1642 0044 FFF7FEFF 		bl	f_lseek
 1643              	.LVL139:
 510:Core/Src/main.c ****   }
 1644              		.loc 3 510 5 view .LVU409
 1645 0048 2846     		mov	r0, r5
 1646 004a FFF7FEFF 		bl	f_sync
 1647              	.LVL140:
 1648 004e E9E7     		b	.L87
 1649              	.LVL141:
 1650              	.L99:
 526:Core/Src/main.c ****     }
 1651              		.loc 3 526 7 view .LVU410
 1652 0050 3448     		ldr	r0, .L101+12
 1653 0052 FFF7FEFF 		bl	myprintf
 1654              	.LVL142:
 1655              	.L88:
 515:Core/Src/main.c ****     //char data = FRAM_read8(index);
 1656              		.loc 3 515 8 view .LVU411
 515:Core/Src/main.c ****     //char data = FRAM_read8(index);
 1657              		.loc 3 515 15 is_stmt 0 view .LVU412
 1658 0056 009A     		ldr	r2, [sp]
 1659 0058 334B     		ldr	r3, .L101+16
 1660 005a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 106


 515:Core/Src/main.c ****     //char data = FRAM_read8(index);
 1661              		.loc 3 515 8 view .LVU413
 1662 005c 9A42     		cmp	r2, r3
 1663 005e 1AD2     		bcs	.L98
 517:Core/Src/main.c ****     #ifdef DEBUG
 1664              		.loc 3 517 5 is_stmt 1 view .LVU414
 1665 0060 6846     		mov	r0, sp
 1666 0062 FFF7FEFF 		bl	FRAM_read
 1667              	.LVL143:
 1668 0066 0146     		mov	r1, r0
 1669 0068 4FF40062 		mov	r2, #2048
 1670 006c 01A8     		add	r0, sp, #4
 1671 006e FFF7FEFF 		bl	strncpy
 1672              	.LVL144:
 524:Core/Src/main.c ****     if(fres != FR_OK){
 1673              		.loc 3 524 5 view .LVU415
 524:Core/Src/main.c ****     if(fres != FR_OK){
 1674              		.loc 3 524 12 is_stmt 0 view .LVU416
 1675 0072 01A8     		add	r0, sp, #4
 1676 0074 FFF7FEFF 		bl	strlen
 1677              	.LVL145:
 1678 0078 0246     		mov	r2, r0
 1679 007a 0DF60403 		addw	r3, sp, #2052
 1680 007e 01A9     		add	r1, sp, #4
 1681 0080 2548     		ldr	r0, .L101
 1682 0082 FFF7FEFF 		bl	f_write
 1683              	.LVL146:
 524:Core/Src/main.c ****     if(fres != FR_OK){
 1684              		.loc 3 524 10 view .LVU417
 1685 0086 254A     		ldr	r2, .L101+4
 1686 0088 1070     		strb	r0, [r2]
 525:Core/Src/main.c ****       myprintf("f_write error (%i)\r\n");
 1687              		.loc 3 525 5 is_stmt 1 view .LVU418
 525:Core/Src/main.c ****       myprintf("f_write error (%i)\r\n");
 1688              		.loc 3 525 7 is_stmt 0 view .LVU419
 1689 008a 0028     		cmp	r0, #0
 1690 008c E0D1     		bne	.L99
 528:Core/Src/main.c ****   }
 1691              		.loc 3 528 10 is_stmt 1 view .LVU420
 528:Core/Src/main.c ****   }
 1692              		.loc 3 528 27 is_stmt 0 view .LVU421
 1693 008e DDF80438 		ldr	r3, [sp, #2052]
 1694 0092 1D44     		add	r5, r5, r3
 1695              	.LVL147:
 528:Core/Src/main.c ****   }
 1696              		.loc 3 528 27 view .LVU422
 1697 0094 DFE7     		b	.L88
 1698              	.L98:
 532:Core/Src/main.c ****   f_close(&workingFile);
 1699              		.loc 3 532 3 is_stmt 1 view .LVU423
 1700 0096 2246     		mov	r2, r4
 1701 0098 2946     		mov	r1, r5
 1702 009a 2448     		ldr	r0, .L101+20
 1703 009c FFF7FEFF 		bl	myprintf
 1704              	.LVL148:
 533:Core/Src/main.c ****   /*Now let's try to open file "test.txt"*/
 1705              		.loc 3 533 3 view .LVU424
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 107


 1706 00a0 1D4D     		ldr	r5, .L101
 1707              	.LVL149:
 533:Core/Src/main.c ****   /*Now let's try to open file "test.txt"*/
 1708              		.loc 3 533 3 is_stmt 0 view .LVU425
 1709 00a2 2846     		mov	r0, r5
 1710 00a4 FFF7FEFF 		bl	f_close
 1711              	.LVL150:
 535:Core/Src/main.c ****   if (fres != FR_OK) {
 1712              		.loc 3 535 3 is_stmt 1 view .LVU426
 535:Core/Src/main.c ****   if (fres != FR_OK) {
 1713              		.loc 3 535 10 is_stmt 0 view .LVU427
 1714 00a8 0122     		movs	r2, #1
 1715 00aa 2146     		mov	r1, r4
 1716 00ac 2846     		mov	r0, r5
 1717 00ae FFF7FEFF 		bl	f_open
 1718              	.LVL151:
 1719 00b2 0146     		mov	r1, r0
 535:Core/Src/main.c ****   if (fres != FR_OK) {
 1720              		.loc 3 535 8 view .LVU428
 1721 00b4 194B     		ldr	r3, .L101+4
 1722 00b6 1870     		strb	r0, [r3]
 536:Core/Src/main.c **** 	  myprintf("f_open error (%i)\r\n", fres);
 1723              		.loc 3 536 3 is_stmt 1 view .LVU429
 536:Core/Src/main.c **** 	  myprintf("f_open error (%i)\r\n", fres);
 1724              		.loc 3 536 6 is_stmt 0 view .LVU430
 1725 00b8 18B1     		cbz	r0, .L92
 537:Core/Src/main.c **** 	  while(1);
 1726              		.loc 3 537 4 is_stmt 1 view .LVU431
 1727 00ba 1948     		ldr	r0, .L101+8
 1728 00bc FFF7FEFF 		bl	myprintf
 1729              	.LVL152:
 1730              	.L93:
 538:Core/Src/main.c ****   }
 1731              		.loc 3 538 4 discriminator 1 view .LVU432
 538:Core/Src/main.c ****   }
 1732              		.loc 3 538 12 discriminator 1 view .LVU433
 538:Core/Src/main.c ****   }
 1733              		.loc 3 538 9 discriminator 1 view .LVU434
 1734 00c0 FEE7     		b	.L93
 1735              	.L92:
 540:Core/Src/main.c ****   
 1736              		.loc 3 540 3 view .LVU435
 1737 00c2 2146     		mov	r1, r4
 1738 00c4 1A48     		ldr	r0, .L101+24
 1739 00c6 FFF7FEFF 		bl	myprintf
 1740              	.LVL153:
 559:Core/Src/main.c ****   /*We're done with SD, let's un-mount the drive*/
 1741              		.loc 3 559 3 view .LVU436
 1742 00ca 1348     		ldr	r0, .L101
 1743 00cc FFF7FEFF 		bl	f_sync
 1744              	.LVL154:
 561:Core/Src/main.c ****     myprintf("FATFS Unlinked fail!!");
 1745              		.loc 3 561 3 view .LVU437
 561:Core/Src/main.c ****     myprintf("FATFS Unlinked fail!!");
 1746              		.loc 3 561 7 is_stmt 0 view .LVU438
 1747 00d0 1848     		ldr	r0, .L101+28
 1748 00d2 FFF7FEFF 		bl	FATFS_UnLinkDriver
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 108


 1749              	.LVL155:
 561:Core/Src/main.c ****     myprintf("FATFS Unlinked fail!!");
 1750              		.loc 3 561 6 view .LVU439
 1751 00d6 D0B9     		cbnz	r0, .L100
 565:Core/Src/main.c ****   f_mount(NULL, FATPATH, 0);
 1752              		.loc 3 565 8 is_stmt 1 view .LVU440
 1753 00d8 1748     		ldr	r0, .L101+32
 1754 00da FFF7FEFF 		bl	myprintf
 1755              	.LVL156:
 566:Core/Src/main.c ****   /*We're also done with FRAM, let's reset the iterator*/
 1756              		.loc 3 566 3 view .LVU441
 1757 00de 0022     		movs	r2, #0
 1758 00e0 1649     		ldr	r1, .L101+36
 1759 00e2 1046     		mov	r0, r2
 1760 00e4 FFF7FEFF 		bl	f_mount
 1761              	.LVL157:
 568:Core/Src/main.c ****   buffer_sync(LOCATION_BUFFER_ITERATOR, SD_DONE);
 1762              		.loc 3 568 3 view .LVU442
 568:Core/Src/main.c ****   buffer_sync(LOCATION_BUFFER_ITERATOR, SD_DONE);
 1763              		.loc 3 568 28 is_stmt 0 view .LVU443
 1764 00e8 1420     		movs	r0, #20
 1765 00ea 0F4B     		ldr	r3, .L101+16
 1766 00ec 1860     		str	r0, [r3]
 569:Core/Src/main.c ****   /*Don't forget to turn off the power after using :) */
 1767              		.loc 3 569 3 is_stmt 1 view .LVU444
 1768 00ee 0521     		movs	r1, #5
 1769 00f0 FFF7FEFF 		bl	buffer_sync
 1770              	.LVL158:
 571:Core/Src/main.c ****   HAL_GPIO_WritePin(SD_EN_GPIO_Port, SD_EN_Pin, RESET);
 1771              		.loc 3 571 3 view .LVU445
 1772 00f4 FFF7FEFF 		bl	turn_off_spi_SD
 1773              	.LVL159:
 572:Core/Src/main.c ****   return 0;
 1774              		.loc 3 572 3 view .LVU446
 1775 00f8 0022     		movs	r2, #0
 1776 00fa 4FF48071 		mov	r1, #256
 1777 00fe 4FF09040 		mov	r0, #1207959552
 1778 0102 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1779              	.LVL160:
 573:Core/Src/main.c **** }
 1780              		.loc 3 573 3 view .LVU447
 574:Core/Src/main.c **** 
 1781              		.loc 3 574 1 is_stmt 0 view .LVU448
 1782 0106 0020     		movs	r0, #0
 1783 0108 0DF60C0D 		addw	sp, sp, #2060
 1784              	.LCFI26:
 1785              		.cfi_remember_state
 1786              		.cfi_def_cfa_offset 12
 1787              		@ sp needed
 1788 010c 30BD     		pop	{r4, r5, pc}
 1789              	.LVL161:
 1790              	.L100:
 1791              	.LCFI27:
 1792              		.cfi_restore_state
 562:Core/Src/main.c ****     Error_Handler();
 1793              		.loc 3 562 5 is_stmt 1 view .LVU449
 1794 010e 0C48     		ldr	r0, .L101+40
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 109


 1795 0110 FFF7FEFF 		bl	myprintf
 1796              	.LVL162:
 563:Core/Src/main.c ****   }
 1797              		.loc 3 563 5 view .LVU450
 1798 0114 FFF7FEFF 		bl	Error_Handler
 1799              	.LVL163:
 1800              	.L102:
 1801              		.align	2
 1802              	.L101:
 1803 0118 00000000 		.word	workingFile
 1804 011c 00000000 		.word	fres
 1805 0120 00000000 		.word	.LC13
 1806 0124 14000000 		.word	.LC14
 1807 0128 00000000 		.word	.LANCHOR9
 1808 012c 2C000000 		.word	.LC15
 1809 0130 4C000000 		.word	.LC16
 1810 0134 00000000 		.word	USERPath
 1811 0138 8C000000 		.word	.LC4
 1812 013c 00000000 		.word	FATPATH
 1813 0140 74000000 		.word	.LC3
 1814              		.cfi_endproc
 1815              	.LFE144:
 1817              		.section	.rodata.buffer_sync.str1.4,"aMS",%progbits,1
 1818              		.align	2
 1819              	.LC17:
 1820 0000 446F6E65 		.ascii	"Done synchronizing.!!\012\000"
 1820      2073796E 
 1820      6368726F 
 1820      6E697A69 
 1820      6E672E21 
 1821 0017 00       		.align	2
 1822              	.LC18:
 1823 0018 0A0A4C61 		.ascii	"\012\012Last logging period stops at %d\012\000"
 1823      7374206C 
 1823      6F676769 
 1823      6E672070 
 1823      6572696F 
 1824 003b 00       		.align	2
 1825              	.LC19:
 1826 003c 42756666 		.ascii	"Buffer is reset!!... Now start synchronizing to SD\012"
 1826      65722069 
 1826      73207265 
 1826      73657421 
 1826      212E2E2E 
 1827 006f 0A00     		.ascii	"\012\000"
 1828              		.section	.text.buffer_sync,"ax",%progbits
 1829              		.align	1
 1830              		.global	buffer_sync
 1831              		.syntax unified
 1832              		.thumb
 1833              		.thumb_func
 1834              		.fpu fpv4-sp-d16
 1836              	buffer_sync:
 1837              	.LVL164:
 1838              	.LFB146:
 599:Core/Src/main.c ****   switch (stat)
 1839              		.loc 3 599 60 view -0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 110


 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 0
 1842              		@ frame_needed = 0, uses_anonymous_args = 0
 599:Core/Src/main.c ****   switch (stat)
 1843              		.loc 3 599 60 is_stmt 0 view .LVU452
 1844 0000 10B5     		push	{r4, lr}
 1845              	.LCFI28:
 1846              		.cfi_def_cfa_offset 8
 1847              		.cfi_offset 4, -8
 1848              		.cfi_offset 14, -4
 600:Core/Src/main.c ****   {
 1849              		.loc 3 600 3 is_stmt 1 view .LVU453
 1850 0002 0129     		cmp	r1, #1
 1851 0004 40D0     		beq	.L104
 1852 0006 0529     		cmp	r1, #5
 1853 0008 59D0     		beq	.L105
 1854 000a 09B1     		cbz	r1, .L112
 1855 000c 0320     		movs	r0, #3
 1856              	.LVL165:
 1857              	.L106:
 658:Core/Src/main.c **** 
 1858              		.loc 3 658 1 is_stmt 0 view .LVU454
 1859 000e 10BD     		pop	{r4, pc}
 1860              	.LVL166:
 1861              	.L112:
 1862              	.LBB17:
 603:Core/Src/main.c ****     uint32_t _update_iterator = 0;
 1863              		.loc 3 603 5 is_stmt 1 view .LVU455
 1864 0010 0020     		movs	r0, #0
 1865              	.LVL167:
 603:Core/Src/main.c ****     uint32_t _update_iterator = 0;
 1866              		.loc 3 603 5 is_stmt 0 view .LVU456
 1867 0012 FFF7FEFF 		bl	FRAM_sleepEnable
 1868              	.LVL168:
 604:Core/Src/main.c ****     uint8_t stat_check = FRAM_read8(BUFFER_STAT);
 1869              		.loc 3 604 5 is_stmt 1 view .LVU457
 605:Core/Src/main.c ****     if (stat_check == SD_DONE || stat_check == BUFFER_OK || stat_check == BUFFER_SYNC_DONE){
 1870              		.loc 3 605 5 view .LVU458
 605:Core/Src/main.c ****     if (stat_check == SD_DONE || stat_check == BUFFER_OK || stat_check == BUFFER_SYNC_DONE){
 1871              		.loc 3 605 26 is_stmt 0 view .LVU459
 1872 0016 0720     		movs	r0, #7
 1873 0018 FFF7FEFF 		bl	FRAM_read8
 1874              	.LVL169:
 606:Core/Src/main.c ****       #ifdef DEBUG
 1875              		.loc 3 606 5 is_stmt 1 view .LVU460
 606:Core/Src/main.c ****       #ifdef DEBUG
 1876              		.loc 3 606 8 is_stmt 0 view .LVU461
 1877 001c 0528     		cmp	r0, #5
 1878 001e 07D0     		beq	.L107
 606:Core/Src/main.c ****       #ifdef DEBUG
 1879              		.loc 3 606 31 discriminator 1 view .LVU462
 1880 0020 0328     		cmp	r0, #3
 1881 0022 05D0     		beq	.L107
 606:Core/Src/main.c ****       #ifdef DEBUG
 1882              		.loc 3 606 58 discriminator 2 view .LVU463
 1883 0024 0228     		cmp	r0, #2
 1884 0026 03D0     		beq	.L107
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 111


 612:Core/Src/main.c ****       _update_iterator = FRAM_read8(SYNC_BUFFER_MSB);
 1885              		.loc 3 612 10 is_stmt 1 view .LVU464
 612:Core/Src/main.c ****       _update_iterator = FRAM_read8(SYNC_BUFFER_MSB);
 1886              		.loc 3 612 13 is_stmt 0 view .LVU465
 1887 0028 0128     		cmp	r0, #1
 1888 002a 06D0     		beq	.L113
 1889              	.LBE17:
 657:Core/Src/main.c **** }
 1890              		.loc 3 657 10 view .LVU466
 1891 002c 0320     		movs	r0, #3
 1892              	.LVL170:
 657:Core/Src/main.c **** }
 1893              		.loc 3 657 10 view .LVU467
 1894 002e EEE7     		b	.L106
 1895              	.LVL171:
 1896              	.L107:
 1897              	.LBB18:
 608:Core/Src/main.c ****       #endif
 1898              		.loc 3 608 9 is_stmt 1 view .LVU468
 1899 0030 2948     		ldr	r0, .L114
 1900              	.LVL172:
 608:Core/Src/main.c ****       #endif
 1901              		.loc 3 608 9 is_stmt 0 view .LVU469
 1902 0032 FFF7FEFF 		bl	myprintf
 1903              	.LVL173:
 610:Core/Src/main.c ****     }
 1904              		.loc 3 610 7 is_stmt 1 view .LVU470
 610:Core/Src/main.c ****     }
 1905              		.loc 3 610 14 is_stmt 0 view .LVU471
 1906 0036 0320     		movs	r0, #3
 1907 0038 E9E7     		b	.L106
 1908              	.LVL174:
 1909              	.L113:
 613:Core/Src/main.c ****       _update_iterator = _update_iterator << 8;
 1910              		.loc 3 613 7 is_stmt 1 view .LVU472
 613:Core/Src/main.c ****       _update_iterator = _update_iterator << 8;
 1911              		.loc 3 613 26 is_stmt 0 view .LVU473
 1912 003a 0820     		movs	r0, #8
 1913              	.LVL175:
 613:Core/Src/main.c ****       _update_iterator = _update_iterator << 8;
 1914              		.loc 3 613 26 view .LVU474
 1915 003c FFF7FEFF 		bl	FRAM_read8
 1916              	.LVL176:
 614:Core/Src/main.c ****       _update_iterator |= FRAM_read8(SYNC_BUFFER_MSB2);
 1917              		.loc 3 614 7 is_stmt 1 view .LVU475
 614:Core/Src/main.c ****       _update_iterator |= FRAM_read8(SYNC_BUFFER_MSB2);
 1918              		.loc 3 614 24 is_stmt 0 view .LVU476
 1919 0040 0402     		lsls	r4, r0, #8
 1920              	.LVL177:
 615:Core/Src/main.c ****       _update_iterator = _update_iterator << 8;
 1921              		.loc 3 615 7 is_stmt 1 view .LVU477
 615:Core/Src/main.c ****       _update_iterator = _update_iterator << 8;
 1922              		.loc 3 615 27 is_stmt 0 view .LVU478
 1923 0042 0920     		movs	r0, #9
 1924 0044 FFF7FEFF 		bl	FRAM_read8
 1925              	.LVL178:
 615:Core/Src/main.c ****       _update_iterator = _update_iterator << 8;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 112


 1926              		.loc 3 615 24 view .LVU479
 1927 0048 0443     		orrs	r4, r4, r0
 1928              	.LVL179:
 616:Core/Src/main.c ****       _update_iterator |= FRAM_read8(SYNC_BUFFER_LSB);
 1929              		.loc 3 616 7 is_stmt 1 view .LVU480
 616:Core/Src/main.c ****       _update_iterator |= FRAM_read8(SYNC_BUFFER_LSB);
 1930              		.loc 3 616 24 is_stmt 0 view .LVU481
 1931 004a 2402     		lsls	r4, r4, #8
 1932              	.LVL180:
 617:Core/Src/main.c **** 
 1933              		.loc 3 617 7 is_stmt 1 view .LVU482
 617:Core/Src/main.c **** 
 1934              		.loc 3 617 27 is_stmt 0 view .LVU483
 1935 004c 0A20     		movs	r0, #10
 1936 004e FFF7FEFF 		bl	FRAM_read8
 1937              	.LVL181:
 617:Core/Src/main.c **** 
 1938              		.loc 3 617 24 view .LVU484
 1939 0052 40EA0401 		orr	r1, r0, r4
 1940              	.LVL182:
 619:Core/Src/main.c ****       #ifdef DEBUG
 1941              		.loc 3 619 7 is_stmt 1 view .LVU485
 619:Core/Src/main.c ****       #ifdef DEBUG
 1942              		.loc 3 619 32 is_stmt 0 view .LVU486
 1943 0056 214B     		ldr	r3, .L114+4
 1944 0058 1960     		str	r1, [r3]
 621:Core/Src/main.c ****         myprintf("Buffer is reset!!... Now start synchronizing to SD\n\n");
 1945              		.loc 3 621 9 is_stmt 1 view .LVU487
 1946 005a 2148     		ldr	r0, .L114+8
 1947 005c FFF7FEFF 		bl	myprintf
 1948              	.LVL183:
 622:Core/Src/main.c ****       #endif
 1949              		.loc 3 622 9 view .LVU488
 1950 0060 2048     		ldr	r0, .L114+12
 1951 0062 FFF7FEFF 		bl	myprintf
 1952              	.LVL184:
 624:Core/Src/main.c ****       FRAM_writeEnable(true);
 1953              		.loc 3 624 7 view .LVU489
 1954 0066 0120     		movs	r0, #1
 1955 0068 FFF7FEFF 		bl	newLog
 1956              	.LVL185:
 1957 006c FFF7FEFF 		bl	appendFile
 1958              	.LVL186:
 625:Core/Src/main.c ****       FRAM_write8((uint8_t)BUFFER_STAT, BUFFER_SYNC_DONE);
 1959              		.loc 3 625 7 view .LVU490
 1960 0070 0120     		movs	r0, #1
 1961 0072 FFF7FEFF 		bl	FRAM_writeEnable
 1962              	.LVL187:
 626:Core/Src/main.c ****       FRAM_writeEnable(false);
 1963              		.loc 3 626 7 view .LVU491
 1964 0076 0221     		movs	r1, #2
 1965 0078 0720     		movs	r0, #7
 1966 007a FFF7FEFF 		bl	FRAM_write8
 1967              	.LVL188:
 627:Core/Src/main.c ****       return BUFFER_SYNC_DONE;
 1968              		.loc 3 627 7 view .LVU492
 1969 007e 0020     		movs	r0, #0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 113


 1970 0080 FFF7FEFF 		bl	FRAM_writeEnable
 1971              	.LVL189:
 628:Core/Src/main.c ****     }
 1972              		.loc 3 628 7 view .LVU493
 628:Core/Src/main.c ****     }
 1973              		.loc 3 628 14 is_stmt 0 view .LVU494
 1974 0084 0220     		movs	r0, #2
 1975 0086 C2E7     		b	.L106
 1976              	.LVL190:
 1977              	.L104:
 628:Core/Src/main.c ****     }
 1978              		.loc 3 628 14 view .LVU495
 1979 0088 0446     		mov	r4, r0
 634:Core/Src/main.c ****     uint8_t _location = 0;  //Save current iterator location to buffer
 1980              		.loc 3 634 5 is_stmt 1 view .LVU496
 1981 008a 0120     		movs	r0, #1
 1982              	.LVL191:
 634:Core/Src/main.c ****     uint8_t _location = 0;  //Save current iterator location to buffer
 1983              		.loc 3 634 5 is_stmt 0 view .LVU497
 1984 008c FFF7FEFF 		bl	FRAM_writeEnable
 1985              	.LVL192:
 635:Core/Src/main.c ****     _location = (*Buffer_Iterator >> 16) & 0xff;
 1986              		.loc 3 635 5 is_stmt 1 view .LVU498
 636:Core/Src/main.c ****     FRAM_write8(SYNC_BUFFER_MSB, _location);
 1987              		.loc 3 636 5 view .LVU499
 636:Core/Src/main.c ****     FRAM_write8(SYNC_BUFFER_MSB, _location);
 1988              		.loc 3 636 35 is_stmt 0 view .LVU500
 1989 0090 B4F90210 		ldrsh	r1, [r4, #2]
 1990              	.LVL193:
 637:Core/Src/main.c ****     _location = (*Buffer_Iterator >> 8) & 0xff;
 1991              		.loc 3 637 5 is_stmt 1 view .LVU501
 1992 0094 C9B2     		uxtb	r1, r1
 637:Core/Src/main.c ****     _location = (*Buffer_Iterator >> 8) & 0xff;
 1993              		.loc 3 637 5 is_stmt 0 view .LVU502
 1994 0096 0820     		movs	r0, #8
 1995 0098 FFF7FEFF 		bl	FRAM_write8
 1996              	.LVL194:
 638:Core/Src/main.c ****     FRAM_write8(SYNC_BUFFER_MSB2, _location);
 1997              		.loc 3 638 5 is_stmt 1 view .LVU503
 639:Core/Src/main.c ****     _location = *Buffer_Iterator & 0xff;
 1998              		.loc 3 639 5 view .LVU504
 1999 009c 6178     		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 2000 009e 0920     		movs	r0, #9
 2001 00a0 FFF7FEFF 		bl	FRAM_write8
 2002              	.LVL195:
 640:Core/Src/main.c ****     FRAM_write8(SYNC_BUFFER_LSB, _location);
 2003              		.loc 3 640 5 view .LVU505
 641:Core/Src/main.c **** 
 2004              		.loc 3 641 5 view .LVU506
 2005 00a4 2178     		ldrb	r1, [r4]	@ zero_extendqisi2
 2006 00a6 0A20     		movs	r0, #10
 2007 00a8 FFF7FEFF 		bl	FRAM_write8
 2008              	.LVL196:
 644:Core/Src/main.c ****     FRAM_writeEnable(false);
 2009              		.loc 3 644 5 view .LVU507
 2010 00ac 0121     		movs	r1, #1
 2011 00ae 0720     		movs	r0, #7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 114


 2012 00b0 FFF7FEFF 		bl	FRAM_write8
 2013              	.LVL197:
 645:Core/Src/main.c ****     break;
 2014              		.loc 3 645 5 view .LVU508
 2015 00b4 0020     		movs	r0, #0
 2016 00b6 FFF7FEFF 		bl	FRAM_writeEnable
 2017              	.LVL198:
 646:Core/Src/main.c **** 
 2018              		.loc 3 646 5 view .LVU509
 2019              	.LBE18:
 657:Core/Src/main.c **** }
 2020              		.loc 3 657 10 is_stmt 0 view .LVU510
 2021 00ba 0320     		movs	r0, #3
 2022              	.LBB19:
 646:Core/Src/main.c **** 
 2023              		.loc 3 646 5 view .LVU511
 2024 00bc A7E7     		b	.L106
 2025              	.LVL199:
 2026              	.L105:
 649:Core/Src/main.c ****     FRAM_write8((uint8_t)BUFFER_STAT, SD_DONE);
 2027              		.loc 3 649 5 is_stmt 1 view .LVU512
 2028 00be 0120     		movs	r0, #1
 2029              	.LVL200:
 649:Core/Src/main.c ****     FRAM_write8((uint8_t)BUFFER_STAT, SD_DONE);
 2030              		.loc 3 649 5 is_stmt 0 view .LVU513
 2031 00c0 FFF7FEFF 		bl	FRAM_writeEnable
 2032              	.LVL201:
 650:Core/Src/main.c ****     FRAM_writeEnable(true);
 2033              		.loc 3 650 5 is_stmt 1 view .LVU514
 2034 00c4 0521     		movs	r1, #5
 2035 00c6 0720     		movs	r0, #7
 2036 00c8 FFF7FEFF 		bl	FRAM_write8
 2037              	.LVL202:
 651:Core/Src/main.c ****     return BUFFER_OK;
 2038              		.loc 3 651 5 view .LVU515
 2039 00cc 0120     		movs	r0, #1
 2040 00ce FFF7FEFF 		bl	FRAM_writeEnable
 2041              	.LVL203:
 652:Core/Src/main.c ****   break;
 2042              		.loc 3 652 5 view .LVU516
 652:Core/Src/main.c ****   break;
 2043              		.loc 3 652 12 is_stmt 0 view .LVU517
 2044 00d2 0320     		movs	r0, #3
 2045 00d4 9BE7     		b	.L106
 2046              	.L115:
 2047 00d6 00BF     		.align	2
 2048              	.L114:
 2049 00d8 00000000 		.word	.LC17
 2050 00dc 00000000 		.word	.LANCHOR9
 2051 00e0 18000000 		.word	.LC18
 2052 00e4 3C000000 		.word	.LC19
 2053              	.LBE19:
 2054              		.cfi_endproc
 2055              	.LFE146:
 2057              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 2058              		.align	1
 2059              		.syntax unified
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 115


 2060              		.thumb
 2061              		.thumb_func
 2062              		.fpu fpv4-sp-d16
 2064              	MX_USART2_UART_Init:
 2065              	.LFB152:
 951:Core/Src/main.c **** 
 2066              		.loc 3 951 1 is_stmt 1 view -0
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 0
 2069              		@ frame_needed = 0, uses_anonymous_args = 0
 2070 0000 08B5     		push	{r3, lr}
 2071              	.LCFI29:
 2072              		.cfi_def_cfa_offset 8
 2073              		.cfi_offset 3, -8
 2074              		.cfi_offset 14, -4
 960:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 2075              		.loc 3 960 3 view .LVU519
 960:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 2076              		.loc 3 960 19 is_stmt 0 view .LVU520
 2077 0002 0B48     		ldr	r0, .L120
 2078 0004 0B4B     		ldr	r3, .L120+4
 2079 0006 0360     		str	r3, [r0]
 961:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 2080              		.loc 3 961 3 is_stmt 1 view .LVU521
 961:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 2081              		.loc 3 961 24 is_stmt 0 view .LVU522
 2082 0008 4FF4E133 		mov	r3, #115200
 2083 000c 4360     		str	r3, [r0, #4]
 962:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 2084              		.loc 3 962 3 is_stmt 1 view .LVU523
 962:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 2085              		.loc 3 962 26 is_stmt 0 view .LVU524
 2086 000e 0023     		movs	r3, #0
 2087 0010 8360     		str	r3, [r0, #8]
 963:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 2088              		.loc 3 963 3 is_stmt 1 view .LVU525
 963:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 2089              		.loc 3 963 24 is_stmt 0 view .LVU526
 2090 0012 C360     		str	r3, [r0, #12]
 964:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 2091              		.loc 3 964 3 is_stmt 1 view .LVU527
 964:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 2092              		.loc 3 964 22 is_stmt 0 view .LVU528
 2093 0014 0361     		str	r3, [r0, #16]
 965:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2094              		.loc 3 965 3 is_stmt 1 view .LVU529
 965:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 2095              		.loc 3 965 20 is_stmt 0 view .LVU530
 2096 0016 0C22     		movs	r2, #12
 2097 0018 4261     		str	r2, [r0, #20]
 966:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 2098              		.loc 3 966 3 is_stmt 1 view .LVU531
 966:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 2099              		.loc 3 966 25 is_stmt 0 view .LVU532
 2100 001a 8361     		str	r3, [r0, #24]
 967:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2101              		.loc 3 967 3 is_stmt 1 view .LVU533
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 116


 967:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 2102              		.loc 3 967 28 is_stmt 0 view .LVU534
 2103 001c C361     		str	r3, [r0, #28]
 968:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2104              		.loc 3 968 3 is_stmt 1 view .LVU535
 968:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 2105              		.loc 3 968 30 is_stmt 0 view .LVU536
 2106 001e 0362     		str	r3, [r0, #32]
 969:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 2107              		.loc 3 969 3 is_stmt 1 view .LVU537
 969:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 2108              		.loc 3 969 38 is_stmt 0 view .LVU538
 2109 0020 4362     		str	r3, [r0, #36]
 970:Core/Src/main.c ****   {
 2110              		.loc 3 970 3 is_stmt 1 view .LVU539
 970:Core/Src/main.c ****   {
 2111              		.loc 3 970 7 is_stmt 0 view .LVU540
 2112 0022 FFF7FEFF 		bl	HAL_UART_Init
 2113              	.LVL204:
 970:Core/Src/main.c ****   {
 2114              		.loc 3 970 6 view .LVU541
 2115 0026 00B9     		cbnz	r0, .L119
 978:Core/Src/main.c **** 
 2116              		.loc 3 978 1 view .LVU542
 2117 0028 08BD     		pop	{r3, pc}
 2118              	.L119:
 972:Core/Src/main.c ****   }
 2119              		.loc 3 972 5 is_stmt 1 view .LVU543
 2120 002a FFF7FEFF 		bl	Error_Handler
 2121              	.LVL205:
 2122              	.L121:
 2123 002e 00BF     		.align	2
 2124              	.L120:
 2125 0030 00000000 		.word	huart2
 2126 0034 00440040 		.word	1073759232
 2127              		.cfi_endproc
 2128              	.LFE152:
 2130              		.section	.text.MX_CRC_Init,"ax",%progbits
 2131              		.align	1
 2132              		.syntax unified
 2133              		.thumb
 2134              		.thumb_func
 2135              		.fpu fpv4-sp-d16
 2137              	MX_CRC_Init:
 2138              	.LFB149:
 840:Core/Src/main.c **** 
 2139              		.loc 3 840 1 view -0
 2140              		.cfi_startproc
 2141              		@ args = 0, pretend = 0, frame = 0
 2142              		@ frame_needed = 0, uses_anonymous_args = 0
 2143 0000 08B5     		push	{r3, lr}
 2144              	.LCFI30:
 2145              		.cfi_def_cfa_offset 8
 2146              		.cfi_offset 3, -8
 2147              		.cfi_offset 14, -4
 849:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 2148              		.loc 3 849 3 view .LVU545
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 117


 849:Core/Src/main.c ****   hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 2149              		.loc 3 849 17 is_stmt 0 view .LVU546
 2150 0002 0848     		ldr	r0, .L126
 2151 0004 084B     		ldr	r3, .L126+4
 2152 0006 0360     		str	r3, [r0]
 850:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 2153              		.loc 3 850 3 is_stmt 1 view .LVU547
 850:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 2154              		.loc 3 850 34 is_stmt 0 view .LVU548
 2155 0008 0023     		movs	r3, #0
 2156 000a 0371     		strb	r3, [r0, #4]
 851:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 2157              		.loc 3 851 3 is_stmt 1 view .LVU549
 851:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 2158              		.loc 3 851 33 is_stmt 0 view .LVU550
 2159 000c 4371     		strb	r3, [r0, #5]
 852:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 2160              		.loc 3 852 3 is_stmt 1 view .LVU551
 852:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 2161              		.loc 3 852 36 is_stmt 0 view .LVU552
 2162 000e 4361     		str	r3, [r0, #20]
 853:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 2163              		.loc 3 853 3 is_stmt 1 view .LVU553
 853:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 2164              		.loc 3 853 37 is_stmt 0 view .LVU554
 2165 0010 8361     		str	r3, [r0, #24]
 854:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 2166              		.loc 3 854 3 is_stmt 1 view .LVU555
 854:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 2167              		.loc 3 854 24 is_stmt 0 view .LVU556
 2168 0012 0123     		movs	r3, #1
 2169 0014 0362     		str	r3, [r0, #32]
 855:Core/Src/main.c ****   {
 2170              		.loc 3 855 3 is_stmt 1 view .LVU557
 855:Core/Src/main.c ****   {
 2171              		.loc 3 855 7 is_stmt 0 view .LVU558
 2172 0016 FFF7FEFF 		bl	HAL_CRC_Init
 2173              	.LVL206:
 855:Core/Src/main.c ****   {
 2174              		.loc 3 855 6 view .LVU559
 2175 001a 00B9     		cbnz	r0, .L125
 863:Core/Src/main.c **** 
 2176              		.loc 3 863 1 view .LVU560
 2177 001c 08BD     		pop	{r3, pc}
 2178              	.L125:
 857:Core/Src/main.c ****   }
 2179              		.loc 3 857 5 is_stmt 1 view .LVU561
 2180 001e FFF7FEFF 		bl	Error_Handler
 2181              	.LVL207:
 2182              	.L127:
 2183 0022 00BF     		.align	2
 2184              	.L126:
 2185 0024 00000000 		.word	hcrc
 2186 0028 00300240 		.word	1073885184
 2187              		.cfi_endproc
 2188              	.LFE149:
 2190              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 118


 2191              		.align	1
 2192              		.global	SystemClock_Config
 2193              		.syntax unified
 2194              		.thumb
 2195              		.thumb_func
 2196              		.fpu fpv4-sp-d16
 2198              	SystemClock_Config:
 2199              	.LFB148:
 793:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2200              		.loc 3 793 1 view -0
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 88
 2203              		@ frame_needed = 0, uses_anonymous_args = 0
 2204 0000 00B5     		push	{lr}
 2205              	.LCFI31:
 2206              		.cfi_def_cfa_offset 4
 2207              		.cfi_offset 14, -4
 2208 0002 97B0     		sub	sp, sp, #92
 2209              	.LCFI32:
 2210              		.cfi_def_cfa_offset 96
 794:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2211              		.loc 3 794 3 view .LVU563
 794:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2212              		.loc 3 794 22 is_stmt 0 view .LVU564
 2213 0004 4422     		movs	r2, #68
 2214 0006 0021     		movs	r1, #0
 2215 0008 05A8     		add	r0, sp, #20
 2216 000a FFF7FEFF 		bl	memset
 2217              	.LVL208:
 795:Core/Src/main.c **** 
 2218              		.loc 3 795 3 is_stmt 1 view .LVU565
 795:Core/Src/main.c **** 
 2219              		.loc 3 795 22 is_stmt 0 view .LVU566
 2220 000e 0023     		movs	r3, #0
 2221 0010 0093     		str	r3, [sp]
 2222 0012 0193     		str	r3, [sp, #4]
 2223 0014 0293     		str	r3, [sp, #8]
 2224 0016 0393     		str	r3, [sp, #12]
 2225 0018 0493     		str	r3, [sp, #16]
 799:Core/Src/main.c ****   {
 2226              		.loc 3 799 3 is_stmt 1 view .LVU567
 799:Core/Src/main.c ****   {
 2227              		.loc 3 799 7 is_stmt 0 view .LVU568
 2228 001a 4FF40070 		mov	r0, #512
 2229 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 2230              	.LVL209:
 799:Core/Src/main.c ****   {
 2231              		.loc 3 799 6 view .LVU569
 2232 0022 00BB     		cbnz	r0, .L133
 807:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2233              		.loc 3 807 3 is_stmt 1 view .LVU570
 807:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2234              		.loc 3 807 36 is_stmt 0 view .LVU571
 2235 0024 1223     		movs	r3, #18
 2236 0026 0593     		str	r3, [sp, #20]
 808:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2237              		.loc 3 808 3 is_stmt 1 view .LVU572
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 119


 808:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2238              		.loc 3 808 30 is_stmt 0 view .LVU573
 2239 0028 4FF48073 		mov	r3, #256
 2240 002c 0893     		str	r3, [sp, #32]
 809:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 2241              		.loc 3 809 3 is_stmt 1 view .LVU574
 809:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 2242              		.loc 3 809 41 is_stmt 0 view .LVU575
 2243 002e 4023     		movs	r3, #64
 2244 0030 0993     		str	r3, [sp, #36]
 810:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 2245              		.loc 3 810 3 is_stmt 1 view .LVU576
 810:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 2246              		.loc 3 810 30 is_stmt 0 view .LVU577
 2247 0032 0123     		movs	r3, #1
 2248 0034 0C93     		str	r3, [sp, #48]
 811:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_11;
 2249              		.loc 3 811 3 is_stmt 1 view .LVU578
 811:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_11;
 2250              		.loc 3 811 41 is_stmt 0 view .LVU579
 2251 0036 0023     		movs	r3, #0
 2252 0038 0D93     		str	r3, [sp, #52]
 812:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 2253              		.loc 3 812 3 is_stmt 1 view .LVU580
 812:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 2254              		.loc 3 812 35 is_stmt 0 view .LVU581
 2255 003a B022     		movs	r2, #176
 2256 003c 0E92     		str	r2, [sp, #56]
 813:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2257              		.loc 3 813 3 is_stmt 1 view .LVU582
 813:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2258              		.loc 3 813 34 is_stmt 0 view .LVU583
 2259 003e 1093     		str	r3, [sp, #64]
 814:Core/Src/main.c ****   {
 2260              		.loc 3 814 3 is_stmt 1 view .LVU584
 814:Core/Src/main.c ****   {
 2261              		.loc 3 814 7 is_stmt 0 view .LVU585
 2262 0040 05A8     		add	r0, sp, #20
 2263 0042 FFF7FEFF 		bl	HAL_RCC_OscConfig
 2264              	.LVL210:
 814:Core/Src/main.c ****   {
 2265              		.loc 3 814 6 view .LVU586
 2266 0046 80B9     		cbnz	r0, .L134
 821:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2267              		.loc 3 821 3 is_stmt 1 view .LVU587
 821:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2268              		.loc 3 821 31 is_stmt 0 view .LVU588
 2269 0048 0F23     		movs	r3, #15
 2270 004a 0093     		str	r3, [sp]
 823:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2271              		.loc 3 823 3 is_stmt 1 view .LVU589
 823:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2272              		.loc 3 823 34 is_stmt 0 view .LVU590
 2273 004c 0023     		movs	r3, #0
 2274 004e 0193     		str	r3, [sp, #4]
 824:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2275              		.loc 3 824 3 is_stmt 1 view .LVU591
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 120


 824:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2276              		.loc 3 824 35 is_stmt 0 view .LVU592
 2277 0050 0293     		str	r3, [sp, #8]
 825:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2278              		.loc 3 825 3 is_stmt 1 view .LVU593
 825:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2279              		.loc 3 825 36 is_stmt 0 view .LVU594
 2280 0052 0393     		str	r3, [sp, #12]
 826:Core/Src/main.c **** 
 2281              		.loc 3 826 3 is_stmt 1 view .LVU595
 826:Core/Src/main.c **** 
 2282              		.loc 3 826 36 is_stmt 0 view .LVU596
 2283 0054 0493     		str	r3, [sp, #16]
 828:Core/Src/main.c ****   {
 2284              		.loc 3 828 3 is_stmt 1 view .LVU597
 828:Core/Src/main.c ****   {
 2285              		.loc 3 828 7 is_stmt 0 view .LVU598
 2286 0056 0221     		movs	r1, #2
 2287 0058 6846     		mov	r0, sp
 2288 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2289              	.LVL211:
 828:Core/Src/main.c ****   {
 2290              		.loc 3 828 6 view .LVU599
 2291 005e 30B9     		cbnz	r0, .L135
 832:Core/Src/main.c **** 
 2292              		.loc 3 832 1 view .LVU600
 2293 0060 17B0     		add	sp, sp, #92
 2294              	.LCFI33:
 2295              		.cfi_remember_state
 2296              		.cfi_def_cfa_offset 4
 2297              		@ sp needed
 2298 0062 5DF804FB 		ldr	pc, [sp], #4
 2299              	.L133:
 2300              	.LCFI34:
 2301              		.cfi_restore_state
 801:Core/Src/main.c ****   }
 2302              		.loc 3 801 5 is_stmt 1 view .LVU601
 2303 0066 FFF7FEFF 		bl	Error_Handler
 2304              	.LVL212:
 2305              	.L134:
 816:Core/Src/main.c ****   }
 2306              		.loc 3 816 5 view .LVU602
 2307 006a FFF7FEFF 		bl	Error_Handler
 2308              	.LVL213:
 2309              	.L135:
 830:Core/Src/main.c ****   }
 2310              		.loc 3 830 5 view .LVU603
 2311 006e FFF7FEFF 		bl	Error_Handler
 2312              	.LVL214:
 2313              		.cfi_endproc
 2314              	.LFE148:
 2316              		.section	.text.Stop_Mode_Entry,"ax",%progbits
 2317              		.align	1
 2318              		.global	Stop_Mode_Entry
 2319              		.syntax unified
 2320              		.thumb
 2321              		.thumb_func
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 121


 2322              		.fpu fpv4-sp-d16
 2324              	Stop_Mode_Entry:
 2325              	.LFB141:
 238:Core/Src/main.c **** 
 2326              		.loc 3 238 23 view -0
 2327              		.cfi_startproc
 2328              		@ args = 0, pretend = 0, frame = 0
 2329              		@ frame_needed = 0, uses_anonymous_args = 0
 2330 0000 10B5     		push	{r4, lr}
 2331              	.LCFI35:
 2332              		.cfi_def_cfa_offset 8
 2333              		.cfi_offset 4, -8
 2334              		.cfi_offset 14, -4
 241:Core/Src/main.c **** 
 2335              		.loc 3 241 3 view .LVU605
 2336 0002 FFF7FEFF 		bl	turn_off_spi_FRAM
 2337              	.LVL215:
 244:Core/Src/main.c **** 
 2338              		.loc 3 244 3 view .LVU606
 2339 0006 174C     		ldr	r4, .L138
 2340 0008 2268     		ldr	r2, [r4]
 2341 000a 9368     		ldr	r3, [r2, #8]
 2342 000c 43F48003 		orr	r3, r3, #4194304
 2343 0010 9360     		str	r3, [r2, #8]
 247:Core/Src/main.c ****   // #ifdef DEBUG
 2344              		.loc 3 247 3 view .LVU607
 2345 0012 2046     		mov	r0, r4
 2346 0014 FFF7FEFF 		bl	HAL_UARTEx_EnableStopMode
 2347              	.LVL216:
 253:Core/Src/main.c ****   HAL_DBGMCU_DisableDBGStopMode( );
 2348              		.loc 3 253 3 view .LVU608
 2349 0018 FFF7FEFF 		bl	HAL_DBGMCU_DisableDBGSleepMode
 2350              	.LVL217:
 254:Core/Src/main.c ****   HAL_DBGMCU_DisableDBGStandbyMode( );
 2351              		.loc 3 254 3 view .LVU609
 2352 001c FFF7FEFF 		bl	HAL_DBGMCU_DisableDBGStopMode
 2353              	.LVL218:
 255:Core/Src/main.c ****   HAL_SuspendTick();
 2354              		.loc 3 255 3 view .LVU610
 2355 0020 FFF7FEFF 		bl	HAL_DBGMCU_DisableDBGStandbyMode
 2356              	.LVL219:
 256:Core/Src/main.c ****   /*Enter stop mode*/
 2357              		.loc 3 256 3 view .LVU611
 2358 0024 FFF7FEFF 		bl	HAL_SuspendTick
 2359              	.LVL220:
 258:Core/Src/main.c **** 
 2360              		.loc 3 258 3 view .LVU612
 2361 0028 0120     		movs	r0, #1
 2362 002a FFF7FEFF 		bl	HAL_PWREx_EnterSTOP1Mode
 2363              	.LVL221:
 261:Core/Src/main.c ****   HAL_ResumeTick();
 2364              		.loc 3 261 3 view .LVU613
 2365 002e FFF7FEFF 		bl	SystemClock_Config
 2366              	.LVL222:
 262:Core/Src/main.c ****   //HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1| GPIO_PIN_6| GPIO_PIN_7| FRAM_CS_Pin| LED_Pin| FRAM_HOLD_Pin)
 2367              		.loc 3 262 3 view .LVU614
 2368 0032 FFF7FEFF 		bl	HAL_ResumeTick
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 122


 2369              	.LVL223:
 264:Core/Src/main.c ****   MX_SPI1_Init();
 2370              		.loc 3 264 3 view .LVU615
 2371 0036 FFF7FEFF 		bl	MX_GPIO_Init
 2372              	.LVL224:
 265:Core/Src/main.c ****   //MX_FATFS_Init();
 2373              		.loc 3 265 3 view .LVU616
 2374 003a FFF7FEFF 		bl	MX_SPI1_Init
 2375              	.LVL225:
 267:Core/Src/main.c ****   HAL_GPIO_WritePin(SD_EN_GPIO_Port, SD_EN_Pin, RESET);
 2376              		.loc 3 267 3 view .LVU617
 2377 003e FFF7FEFF 		bl	turn_off_spi_SD
 2378              	.LVL226:
 268:Core/Src/main.c ****   /* Wake up based on RXNE flag successful*/
 2379              		.loc 3 268 3 view .LVU618
 2380 0042 0022     		movs	r2, #0
 2381 0044 4FF48071 		mov	r1, #256
 2382 0048 4FF09040 		mov	r0, #1207959552
 2383 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 2384              	.LVL227:
 270:Core/Src/main.c ****   HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)Rx_data, sizeof(Rx_data));
 2385              		.loc 3 270 3 view .LVU619
 2386 0050 2046     		mov	r0, r4
 2387 0052 FFF7FEFF 		bl	HAL_UARTEx_DisableStopMode
 2388              	.LVL228:
 271:Core/Src/main.c **** }
 2389              		.loc 3 271 3 view .LVU620
 2390 0056 4FF48052 		mov	r2, #4096
 2391 005a 0349     		ldr	r1, .L138+4
 2392 005c 2046     		mov	r0, r4
 2393 005e FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 2394              	.LVL229:
 272:Core/Src/main.c **** 
 2395              		.loc 3 272 1 is_stmt 0 view .LVU621
 2396 0062 10BD     		pop	{r4, pc}
 2397              	.L139:
 2398              		.align	2
 2399              	.L138:
 2400 0064 00000000 		.word	huart2
 2401 0068 00000000 		.word	Rx_data
 2402              		.cfi_endproc
 2403              	.LFE141:
 2405              		.section	.rodata.appendDATA.str1.4,"aMS",%progbits,1
 2406              		.align	2
 2407              	.LC20:
 2408 0000 3C0A00   		.ascii	"<\012\000"
 2409 0003 00       		.align	2
 2410              	.LC21:
 2411 0004 55706461 		.ascii	"Updated iterator: %d\012\000"
 2411      74656420 
 2411      69746572 
 2411      61746F72 
 2411      3A202564 
 2412 001a 0000     		.align	2
 2413              	.LC22:
 2414 001c 53746172 		.ascii	"Start synchronizing...\012\000"
 2414      74207379 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 123


 2414      6E636872 
 2414      6F6E697A 
 2414      696E672E 
 2415              		.align	2
 2416              	.LC23:
 2417 0034 53756363 		.ascii	"Success in synchronizing!!\012\000"
 2417      65737320 
 2417      696E2073 
 2417      796E6368 
 2417      726F6E69 
 2418              		.align	2
 2419              	.LC24:
 2420 0050 55706461 		.ascii	"Updated iterator from back up: %d\012\000"
 2420      74656420 
 2420      69746572 
 2420      61746F72 
 2420      2066726F 
 2421 0073 00       		.align	2
 2422              	.LC25:
 2423 0074 53756363 		.ascii	"Success in synchronizing from back up!!\012\000"
 2423      65737320 
 2423      696E2073 
 2423      796E6368 
 2423      726F6E69 
 2424 009d 000000   		.align	2
 2425              	.LC26:
 2426 00a0 2A2A2A2A 		.ascii	"******I am done waiting!!! Now I go sleep ******\012"
 2426      2A2A4920 
 2426      616D2064 
 2426      6F6E6520 
 2426      77616974 
 2427 00d1 00       		.ascii	"\000"
 2428              		.section	.text.appendDATA,"ax",%progbits
 2429              		.align	1
 2430              		.global	appendDATA
 2431              		.syntax unified
 2432              		.thumb
 2433              		.thumb_func
 2434              		.fpu fpv4-sp-d16
 2436              	appendDATA:
 2437              	.LFB143:
 425:Core/Src/main.c ****   //unsigned long currentTime = HAL_GetTick();
 2438              		.loc 3 425 18 is_stmt 1 view -0
 2439              		.cfi_startproc
 2440              		@ args = 0, pretend = 0, frame = 4096
 2441              		@ frame_needed = 0, uses_anonymous_args = 0
 2442 0000 10B5     		push	{r4, lr}
 2443              	.LCFI36:
 2444              		.cfi_def_cfa_offset 8
 2445              		.cfi_offset 4, -8
 2446              		.cfi_offset 14, -4
 2447 0002 ADF5805D 		sub	sp, sp, #4096
 2448              	.LCFI37:
 2449              		.cfi_def_cfa_offset 4104
 427:Core/Src/main.c ****   #ifdef DEBUG
 2450              		.loc 3 427 3 view .LVU623
 2451 0006 0020     		movs	r0, #0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 124


 2452 0008 FFF7FEFF 		bl	FRAM_sleepEnable
 2453              	.LVL230:
 429:Core/Src/main.c ****   #endif
 2454              		.loc 3 429 5 view .LVU624
 2455 000c 5C48     		ldr	r0, .L159
 2456 000e FFF7FEFF 		bl	myprintf
 2457              	.LVL231:
 431:Core/Src/main.c ****   while(1){
 2458              		.loc 3 431 3 view .LVU625
 431:Core/Src/main.c ****   while(1){
 2459              		.loc 3 431 32 is_stmt 0 view .LVU626
 2460 0012 FFF7FEFF 		bl	HAL_GetTick
 2461              	.LVL232:
 2462 0016 0446     		mov	r4, r0
 2463              	.LVL233:
 431:Core/Src/main.c ****   while(1){
 2464              		.loc 3 431 32 view .LVU627
 2465 0018 41E0     		b	.L141
 2466              	.LVL234:
 2467              	.L155:
 2468              	.LBB20:
 437:Core/Src/main.c ****       strncpy((char*)readBuf, Rx_data, strlen(Rx_data));
 2469              		.loc 3 437 7 is_stmt 1 view .LVU628
 437:Core/Src/main.c ****       strncpy((char*)readBuf, Rx_data, strlen(Rx_data));
 2470              		.loc 3 437 12 is_stmt 0 view .LVU629
 2471 001a 3023     		movs	r3, #48
 2472 001c 0093     		str	r3, [sp]
 2473 001e 40F6FC72 		movw	r2, #4092
 2474 0022 0021     		movs	r1, #0
 2475 0024 01A8     		add	r0, sp, #4
 2476 0026 FFF7FEFF 		bl	memset
 2477              	.LVL235:
 438:Core/Src/main.c ****       memset(Rx_data, 0, strlen(Rx_data));
 2478              		.loc 3 438 7 is_stmt 1 view .LVU630
 2479 002a 564C     		ldr	r4, .L159+4
 2480              	.LVL236:
 438:Core/Src/main.c ****       memset(Rx_data, 0, strlen(Rx_data));
 2481              		.loc 3 438 7 is_stmt 0 view .LVU631
 2482 002c 2046     		mov	r0, r4
 2483 002e FFF7FEFF 		bl	strlen
 2484              	.LVL237:
 2485 0032 0246     		mov	r2, r0
 2486 0034 2146     		mov	r1, r4
 2487 0036 6846     		mov	r0, sp
 2488 0038 FFF7FEFF 		bl	strncpy
 2489              	.LVL238:
 439:Core/Src/main.c ****       if(FRAM_write(&LOCATION_BUFFER_ITERATOR, readBuf) != FRAM_OK) Error_Handler();
 2490              		.loc 3 439 7 is_stmt 1 view .LVU632
 2491 003c 2046     		mov	r0, r4
 2492 003e FFF7FEFF 		bl	strlen
 2493              	.LVL239:
 2494 0042 0246     		mov	r2, r0
 2495 0044 0021     		movs	r1, #0
 2496 0046 2046     		mov	r0, r4
 2497 0048 FFF7FEFF 		bl	memset
 2498              	.LVL240:
 440:Core/Src/main.c ****       #ifdef DEBUG
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 125


 2499              		.loc 3 440 7 view .LVU633
 440:Core/Src/main.c ****       #ifdef DEBUG
 2500              		.loc 3 440 10 is_stmt 0 view .LVU634
 2501 004c 6946     		mov	r1, sp
 2502 004e 4E48     		ldr	r0, .L159+8
 2503 0050 FFF7FEFF 		bl	FRAM_write
 2504              	.LVL241:
 440:Core/Src/main.c ****       #ifdef DEBUG
 2505              		.loc 3 440 9 view .LVU635
 2506 0054 0028     		cmp	r0, #0
 2507 0056 3AD1     		bne	.L153
 442:Core/Src/main.c ****         myprintf("Start synchronizing...\n");
 2508              		.loc 3 442 9 is_stmt 1 view .LVU636
 2509 0058 4B4C     		ldr	r4, .L159+8
 2510 005a 2168     		ldr	r1, [r4]
 2511 005c 4B48     		ldr	r0, .L159+12
 2512 005e FFF7FEFF 		bl	myprintf
 2513              	.LVL242:
 443:Core/Src/main.c ****       #endif   
 2514              		.loc 3 443 9 view .LVU637
 2515 0062 4B48     		ldr	r0, .L159+16
 2516 0064 FFF7FEFF 		bl	myprintf
 2517              	.LVL243:
 445:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 2518              		.loc 3 445 7 view .LVU638
 445:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 2519              		.loc 3 445 10 is_stmt 0 view .LVU639
 2520 0068 0121     		movs	r1, #1
 2521 006a 2046     		mov	r0, r4
 2522 006c FFF7FEFF 		bl	buffer_sync
 2523              	.LVL244:
 445:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 2524              		.loc 3 445 9 view .LVU640
 2525 0070 0328     		cmp	r0, #3
 2526 0072 2ED0     		beq	.L154
 2527              	.L144:
 446:Core/Src/main.c ****       RX_Flag = 0;                      //Reset RX_IT flag
 2528              		.loc 3 446 7 is_stmt 1 view .LVU641
 2529 0074 0022     		movs	r2, #0
 2530 0076 4FF40041 		mov	r1, #32768
 2531 007a 4FF09040 		mov	r0, #1207959552
 2532 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 2533              	.LVL245:
 447:Core/Src/main.c ****       
 2534              		.loc 3 447 7 view .LVU642
 447:Core/Src/main.c ****       
 2535              		.loc 3 447 15 is_stmt 0 view .LVU643
 2536 0082 444B     		ldr	r3, .L159+20
 2537 0084 0022     		movs	r2, #0
 2538 0086 1A70     		strb	r2, [r3]
 450:Core/Src/main.c **** 
 2539              		.loc 3 450 7 is_stmt 1 view .LVU644
 450:Core/Src/main.c **** 
 2540              		.loc 3 450 35 is_stmt 0 view .LVU645
 2541 0088 3F4B     		ldr	r3, .L159+8
 2542 008a 1A68     		ldr	r2, [r3]
 450:Core/Src/main.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 126


 2543              		.loc 3 450 9 view .LVU646
 2544 008c 424B     		ldr	r3, .L159+24
 2545 008e 9A42     		cmp	r2, r3
 2546 0090 02D9     		bls	.L145
 450:Core/Src/main.c **** 
 2547              		.loc 3 450 74 is_stmt 1 discriminator 1 view .LVU647
 450:Core/Src/main.c **** 
 2548              		.loc 3 450 82 is_stmt 0 discriminator 1 view .LVU648
 2549 0092 424B     		ldr	r3, .L159+28
 2550 0094 0122     		movs	r2, #1
 2551 0096 1A70     		strb	r2, [r3]
 2552              	.L145:
 452:Core/Src/main.c ****     }
 2553              		.loc 3 452 7 is_stmt 1 view .LVU649
 452:Core/Src/main.c ****     }
 2554              		.loc 3 452 22 is_stmt 0 view .LVU650
 2555 0098 FFF7FEFF 		bl	HAL_GetTick
 2556              	.LVL246:
 2557 009c 0446     		mov	r4, r0
 2558              	.LVL247:
 2559              	.L141:
 452:Core/Src/main.c ****     }
 2560              		.loc 3 452 22 view .LVU651
 2561              	.LBE20:
 432:Core/Src/main.c ****     FRAM_sleepEnable(false); //make sure FRAM is woken up properly
 2562              		.loc 3 432 3 is_stmt 1 view .LVU652
 433:Core/Src/main.c **** 
 2563              		.loc 3 433 5 view .LVU653
 2564 009e 0020     		movs	r0, #0
 2565 00a0 FFF7FEFF 		bl	FRAM_sleepEnable
 2566              	.LVL248:
 436:Core/Src/main.c ****       char readBuf[4096] = {'0'};
 2567              		.loc 3 436 5 view .LVU654
 436:Core/Src/main.c ****       char readBuf[4096] = {'0'};
 2568              		.loc 3 436 16 is_stmt 0 view .LVU655
 2569 00a4 3B4B     		ldr	r3, .L159+20
 2570 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 436:Core/Src/main.c ****       char readBuf[4096] = {'0'};
 2571              		.loc 3 436 7 view .LVU656
 2572 00a8 002B     		cmp	r3, #0
 2573 00aa B6D1     		bne	.L155
 456:Core/Src/main.c ****       char readBuf[4096] = {'0'};
 2574              		.loc 3 456 10 is_stmt 1 view .LVU657
 456:Core/Src/main.c ****       char readBuf[4096] = {'0'};
 2575              		.loc 3 456 41 is_stmt 0 view .LVU658
 2576 00ac 3C4A     		ldr	r2, .L159+32
 2577 00ae 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 456:Core/Src/main.c ****       char readBuf[4096] = {'0'};
 2578              		.loc 3 456 13 view .LVU659
 2579 00b0 1343     		orrs	r3, r3, r2
 2580 00b2 12D1     		bne	.L156
 473:Core/Src/main.c ****       appendFile(newLog(BUFFER_OK));
 2581              		.loc 3 473 10 is_stmt 1 view .LVU660
 473:Core/Src/main.c ****       appendFile(newLog(BUFFER_OK));
 2582              		.loc 3 473 14 is_stmt 0 view .LVU661
 2583 00b4 394B     		ldr	r3, .L159+28
 2584 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 127


 473:Core/Src/main.c ****       appendFile(newLog(BUFFER_OK));
 2585              		.loc 3 473 13 view .LVU662
 2586 00b8 002B     		cmp	r3, #0
 2587 00ba 4ED0     		beq	.L151
 474:Core/Src/main.c ****       SD_Flag = 0;
 2588              		.loc 3 474 7 is_stmt 1 view .LVU663
 2589 00bc 0320     		movs	r0, #3
 2590 00be FFF7FEFF 		bl	newLog
 2591              	.LVL249:
 2592 00c2 FFF7FEFF 		bl	appendFile
 2593              	.LVL250:
 475:Core/Src/main.c ****     }
 2594              		.loc 3 475 7 view .LVU664
 475:Core/Src/main.c ****     }
 2595              		.loc 3 475 15 is_stmt 0 view .LVU665
 2596 00c6 354B     		ldr	r3, .L159+28
 2597 00c8 0022     		movs	r2, #0
 2598 00ca 1A70     		strb	r2, [r3]
 2599 00cc E7E7     		b	.L141
 2600              	.LVL251:
 2601              	.L153:
 2602              	.LBB21:
 440:Core/Src/main.c ****       #ifdef DEBUG
 2603              		.loc 3 440 69 is_stmt 1 discriminator 1 view .LVU666
 2604 00ce FFF7FEFF 		bl	Error_Handler
 2605              	.LVL252:
 2606              	.L154:
 445:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 2607              		.loc 3 445 77 discriminator 1 view .LVU667
 2608 00d2 3448     		ldr	r0, .L159+36
 2609 00d4 FFF7FEFF 		bl	myprintf
 2610              	.LVL253:
 2611 00d8 CCE7     		b	.L144
 2612              	.LVL254:
 2613              	.L156:
 445:Core/Src/main.c ****       HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, RESET);
 2614              		.loc 3 445 77 is_stmt 0 discriminator 1 view .LVU668
 2615              	.LBE21:
 2616              	.LBB22:
 457:Core/Src/main.c ****       strncpy((char*)readBuf, Rx_back_up, strlen(Rx_back_up));
 2617              		.loc 3 457 7 is_stmt 1 view .LVU669
 457:Core/Src/main.c ****       strncpy((char*)readBuf, Rx_back_up, strlen(Rx_back_up));
 2618              		.loc 3 457 12 is_stmt 0 view .LVU670
 2619 00da 3023     		movs	r3, #48
 2620 00dc 0093     		str	r3, [sp]
 2621 00de 40F6FC72 		movw	r2, #4092
 2622 00e2 0021     		movs	r1, #0
 2623 00e4 01A8     		add	r0, sp, #4
 2624 00e6 FFF7FEFF 		bl	memset
 2625              	.LVL255:
 458:Core/Src/main.c ****       memset(Rx_back_up, 0, strlen(Rx_back_up));
 2626              		.loc 3 458 7 is_stmt 1 view .LVU671
 2627 00ea 2F4C     		ldr	r4, .L159+40
 2628              	.LVL256:
 458:Core/Src/main.c ****       memset(Rx_back_up, 0, strlen(Rx_back_up));
 2629              		.loc 3 458 7 is_stmt 0 view .LVU672
 2630 00ec 2046     		mov	r0, r4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 128


 2631 00ee FFF7FEFF 		bl	strlen
 2632              	.LVL257:
 2633 00f2 0246     		mov	r2, r0
 2634 00f4 2146     		mov	r1, r4
 2635 00f6 6846     		mov	r0, sp
 2636 00f8 FFF7FEFF 		bl	strncpy
 2637              	.LVL258:
 459:Core/Src/main.c ****       if(FRAM_write(&LOCATION_BUFFER_ITERATOR, readBuf) != FRAM_OK) Error_Handler();
 2638              		.loc 3 459 7 is_stmt 1 view .LVU673
 2639 00fc 2046     		mov	r0, r4
 2640 00fe FFF7FEFF 		bl	strlen
 2641              	.LVL259:
 2642 0102 0246     		mov	r2, r0
 2643 0104 0021     		movs	r1, #0
 2644 0106 2046     		mov	r0, r4
 2645 0108 FFF7FEFF 		bl	memset
 2646              	.LVL260:
 460:Core/Src/main.c ****       #ifdef DEBUG
 2647              		.loc 3 460 7 view .LVU674
 460:Core/Src/main.c ****       #ifdef DEBUG
 2648              		.loc 3 460 10 is_stmt 0 view .LVU675
 2649 010c 6946     		mov	r1, sp
 2650 010e 1E48     		ldr	r0, .L159+8
 2651 0110 FFF7FEFF 		bl	FRAM_write
 2652              	.LVL261:
 460:Core/Src/main.c ****       #ifdef DEBUG
 2653              		.loc 3 460 9 view .LVU676
 2654 0114 D8B9     		cbnz	r0, .L157
 462:Core/Src/main.c ****       #endif
 2655              		.loc 3 462 9 is_stmt 1 view .LVU677
 2656 0116 1C4C     		ldr	r4, .L159+8
 2657 0118 2168     		ldr	r1, [r4]
 2658 011a 2448     		ldr	r0, .L159+44
 2659 011c FFF7FEFF 		bl	myprintf
 2660              	.LVL262:
 464:Core/Src/main.c ****       RX_Flag = 0; 
 2661              		.loc 3 464 7 view .LVU678
 464:Core/Src/main.c ****       RX_Flag = 0; 
 2662              		.loc 3 464 10 is_stmt 0 view .LVU679
 2663 0120 0121     		movs	r1, #1
 2664 0122 2046     		mov	r0, r4
 2665 0124 FFF7FEFF 		bl	buffer_sync
 2666              	.LVL263:
 464:Core/Src/main.c ****       RX_Flag = 0; 
 2667              		.loc 3 464 9 view .LVU680
 2668 0128 0328     		cmp	r0, #3
 2669 012a 12D0     		beq	.L158
 2670              	.L149:
 465:Core/Src/main.c ****       RX_BACKUP_Flag = 0;               //Reset RX_IT flag
 2671              		.loc 3 465 7 is_stmt 1 view .LVU681
 465:Core/Src/main.c ****       RX_BACKUP_Flag = 0;               //Reset RX_IT flag
 2672              		.loc 3 465 15 is_stmt 0 view .LVU682
 2673 012c 0023     		movs	r3, #0
 2674 012e 194A     		ldr	r2, .L159+20
 2675 0130 1370     		strb	r3, [r2]
 466:Core/Src/main.c ****       /*If buffer exceed max capacity -- write to SD*/
 2676              		.loc 3 466 7 is_stmt 1 view .LVU683
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 129


 466:Core/Src/main.c ****       /*If buffer exceed max capacity -- write to SD*/
 2677              		.loc 3 466 22 is_stmt 0 view .LVU684
 2678 0132 1B4A     		ldr	r2, .L159+32
 2679 0134 1370     		strb	r3, [r2]
 468:Core/Src/main.c ****       lastSyncTime = HAL_GetTick();     //Reset interval time
 2680              		.loc 3 468 7 is_stmt 1 view .LVU685
 468:Core/Src/main.c ****       lastSyncTime = HAL_GetTick();     //Reset interval time
 2681              		.loc 3 468 35 is_stmt 0 view .LVU686
 2682 0136 144B     		ldr	r3, .L159+8
 2683 0138 1A68     		ldr	r2, [r3]
 468:Core/Src/main.c ****       lastSyncTime = HAL_GetTick();     //Reset interval time
 2684              		.loc 3 468 9 view .LVU687
 2685 013a 174B     		ldr	r3, .L159+24
 2686 013c 9A42     		cmp	r2, r3
 2687 013e 02D9     		bls	.L150
 468:Core/Src/main.c ****       lastSyncTime = HAL_GetTick();     //Reset interval time
 2688              		.loc 3 468 74 is_stmt 1 discriminator 1 view .LVU688
 468:Core/Src/main.c ****       lastSyncTime = HAL_GetTick();     //Reset interval time
 2689              		.loc 3 468 82 is_stmt 0 discriminator 1 view .LVU689
 2690 0140 164B     		ldr	r3, .L159+28
 2691 0142 0122     		movs	r2, #1
 2692 0144 1A70     		strb	r2, [r3]
 2693              	.L150:
 469:Core/Src/main.c ****     }
 2694              		.loc 3 469 7 is_stmt 1 discriminator 2 view .LVU690
 469:Core/Src/main.c ****     }
 2695              		.loc 3 469 22 is_stmt 0 discriminator 2 view .LVU691
 2696 0146 FFF7FEFF 		bl	HAL_GetTick
 2697              	.LVL264:
 2698 014a 0446     		mov	r4, r0
 2699              	.LVL265:
 469:Core/Src/main.c ****     }
 2700              		.loc 3 469 22 discriminator 2 view .LVU692
 2701              	.LBE22:
 2702 014c A7E7     		b	.L141
 2703              	.LVL266:
 2704              	.L157:
 2705              	.LBB23:
 460:Core/Src/main.c ****       #ifdef DEBUG
 2706              		.loc 3 460 69 is_stmt 1 discriminator 1 view .LVU693
 2707 014e FFF7FEFF 		bl	Error_Handler
 2708              	.LVL267:
 2709              	.L158:
 464:Core/Src/main.c ****       RX_Flag = 0; 
 2710              		.loc 3 464 77 discriminator 1 view .LVU694
 2711 0152 1748     		ldr	r0, .L159+48
 2712 0154 FFF7FEFF 		bl	myprintf
 2713              	.LVL268:
 2714 0158 E8E7     		b	.L149
 2715              	.LVL269:
 2716              	.L151:
 464:Core/Src/main.c ****       RX_Flag = 0; 
 2717              		.loc 3 464 77 is_stmt 0 discriminator 1 view .LVU695
 2718              	.LBE23:
 479:Core/Src/main.c ****       #ifdef DEBUG
 2719              		.loc 3 479 10 is_stmt 1 view .LVU696
 479:Core/Src/main.c ****       #ifdef DEBUG
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 130


 2720              		.loc 3 479 30 is_stmt 0 view .LVU697
 2721 015a FFF7FEFF 		bl	HAL_GetTick
 2722              	.LVL270:
 479:Core/Src/main.c ****       #ifdef DEBUG
 2723              		.loc 3 479 14 view .LVU698
 2724 015e 001B     		subs	r0, r0, r4
 479:Core/Src/main.c ****       #ifdef DEBUG
 2725              		.loc 3 479 13 view .LVU699
 2726 0160 B0F57A7F 		cmp	r0, #1000
 2727 0164 9BD9     		bls	.L141
 481:Core/Src/main.c ****       #endif
 2728              		.loc 3 481 9 is_stmt 1 view .LVU700
 2729 0166 1348     		ldr	r0, .L159+52
 2730 0168 FFF7FEFF 		bl	myprintf
 2731              	.LVL271:
 483:Core/Src/main.c ****       Stop_Mode_Entry();
 2732              		.loc 3 483 7 view .LVU701
 2733 016c 0120     		movs	r0, #1
 2734 016e FFF7FEFF 		bl	FRAM_sleepEnable
 2735              	.LVL272:
 484:Core/Src/main.c ****       lastSyncTime = HAL_GetTick();     //Reset interval time 
 2736              		.loc 3 484 7 view .LVU702
 2737 0172 FFF7FEFF 		bl	Stop_Mode_Entry
 2738              	.LVL273:
 485:Core/Src/main.c ****     }
 2739              		.loc 3 485 7 view .LVU703
 485:Core/Src/main.c ****     }
 2740              		.loc 3 485 22 is_stmt 0 view .LVU704
 2741 0176 FFF7FEFF 		bl	HAL_GetTick
 2742              	.LVL274:
 2743 017a 0446     		mov	r4, r0
 2744              	.LVL275:
 485:Core/Src/main.c ****     }
 2745              		.loc 3 485 22 view .LVU705
 2746 017c 8FE7     		b	.L141
 2747              	.L160:
 2748 017e 00BF     		.align	2
 2749              	.L159:
 2750 0180 00000000 		.word	.LC20
 2751 0184 00000000 		.word	Rx_data
 2752 0188 00000000 		.word	.LANCHOR9
 2753 018c 04000000 		.word	.LC21
 2754 0190 1C000000 		.word	.LC22
 2755 0194 00000000 		.word	.LANCHOR3
 2756 0198 A3D00300 		.word	250019
 2757 019c 00000000 		.word	.LANCHOR2
 2758 01a0 00000000 		.word	.LANCHOR4
 2759 01a4 34000000 		.word	.LC23
 2760 01a8 00000000 		.word	Rx_back_up
 2761 01ac 50000000 		.word	.LC24
 2762 01b0 74000000 		.word	.LC25
 2763 01b4 A0000000 		.word	.LC26
 2764              		.cfi_endproc
 2765              	.LFE143:
 2767              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2768              		.align	2
 2769              	.LC27:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 131


 2770 0000 53504920 		.ascii	"SPI FRAM begin error.. check your connection !!\012"
 2770      4652414D 
 2770      20626567 
 2770      696E2065 
 2770      72726F72 
 2771 0030 00       		.ascii	"\000"
 2772 0031 000000   		.align	2
 2773              	.LC28:
 2774 0034 4C6F6767 		.ascii	"Logger begin!!\012\000"
 2774      65722062 
 2774      6567696E 
 2774      21210A00 
 2775              		.align	2
 2776              	.LC29:
 2777 0044 4D616E75 		.ascii	"Manufacture ID: 0x%X\012\000"
 2777      66616374 
 2777      75726520 
 2777      49443A20 
 2777      30782558 
 2778 005a 0000     		.align	2
 2779              	.LC30:
 2780 005c 70726F64 		.ascii	"product ID: 0x%X\012\000"
 2780      75637420 
 2780      49443A20 
 2780      30782558 
 2780      0A00
 2781 006e 0000     		.align	2
 2782              	.LC31:
 2783 0070 43757272 		.ascii	"Current iterator: %d\012\000"
 2783      656E7420 
 2783      69746572 
 2783      61746F72 
 2783      3A202564 
 2784 0086 0000     		.align	2
 2785              	.LC32:
 2786 0088 446F6E65 		.ascii	"Done synchronizing from last logging time...reset n"
 2786      2073796E 
 2786      6368726F 
 2786      6E697A69 
 2786      6E672066 
 2787 00bb 6F772121 		.ascii	"ow!!\012\000"
 2787      0A00
 2788              		.section	.text.main,"ax",%progbits
 2789              		.align	1
 2790              		.global	main
 2791              		.syntax unified
 2792              		.thumb
 2793              		.thumb_func
 2794              		.fpu fpv4-sp-d16
 2796              	main:
 2797              	.LFB147:
 665:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 2798              		.loc 3 665 1 is_stmt 1 view -0
 2799              		.cfi_startproc
 2800              		@ Volatile: function does not return.
 2801              		@ args = 0, pretend = 0, frame = 8
 2802              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 132


 2803 0000 00B5     		push	{lr}
 2804              	.LCFI38:
 2805              		.cfi_def_cfa_offset 4
 2806              		.cfi_offset 14, -4
 2807 0002 83B0     		sub	sp, sp, #12
 2808              	.LCFI39:
 2809              		.cfi_def_cfa_offset 16
 673:Core/Src/main.c **** 
 2810              		.loc 3 673 3 view .LVU707
 2811 0004 FFF7FEFF 		bl	HAL_Init
 2812              	.LVL276:
 680:Core/Src/main.c **** 
 2813              		.loc 3 680 3 view .LVU708
 2814 0008 FFF7FEFF 		bl	SystemClock_Config
 2815              	.LVL277:
 687:Core/Src/main.c ****   MX_SPI1_Init();
 2816              		.loc 3 687 3 view .LVU709
 2817 000c FFF7FEFF 		bl	MX_GPIO_Init
 2818              	.LVL278:
 688:Core/Src/main.c ****   MX_SPI2_Init();
 2819              		.loc 3 688 3 view .LVU710
 2820 0010 FFF7FEFF 		bl	MX_SPI1_Init
 2821              	.LVL279:
 689:Core/Src/main.c ****   MX_USART2_UART_Init();
 2822              		.loc 3 689 3 view .LVU711
 2823 0014 FFF7FEFF 		bl	MX_SPI2_Init
 2824              	.LVL280:
 690:Core/Src/main.c ****   MX_FATFS_Init();
 2825              		.loc 3 690 3 view .LVU712
 2826 0018 FFF7FEFF 		bl	MX_USART2_UART_Init
 2827              	.LVL281:
 691:Core/Src/main.c ****   //MX_USB_DEVICE_Init();
 2828              		.loc 3 691 3 view .LVU713
 2829 001c FFF7FEFF 		bl	MX_FATFS_Init
 2830              	.LVL282:
 693:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 2831              		.loc 3 693 3 view .LVU714
 2832 0020 FFF7FEFF 		bl	MX_CRC_Init
 2833              	.LVL283:
 697:Core/Src/main.c ****     myprintf("SPI FRAM begin error.. check your connection !!\n");
 2834              		.loc 3 697 3 view .LVU715
 697:Core/Src/main.c ****     myprintf("SPI FRAM begin error.. check your connection !!\n");
 2835              		.loc 3 697 7 is_stmt 0 view .LVU716
 2836 0024 0320     		movs	r0, #3
 2837 0026 FFF7FEFF 		bl	FRAM_begin
 2838              	.LVL284:
 697:Core/Src/main.c ****     myprintf("SPI FRAM begin error.. check your connection !!\n");
 2839              		.loc 3 697 5 view .LVU717
 2840 002a 18B9     		cbnz	r0, .L162
 698:Core/Src/main.c ****     while(1);
 2841              		.loc 3 698 5 is_stmt 1 view .LVU718
 2842 002c 2848     		ldr	r0, .L172
 2843 002e FFF7FEFF 		bl	myprintf
 2844              	.LVL285:
 2845              	.L163:
 699:Core/Src/main.c ****   }
 2846              		.loc 3 699 5 discriminator 1 view .LVU719
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 133


 699:Core/Src/main.c ****   }
 2847              		.loc 3 699 13 discriminator 1 view .LVU720
 699:Core/Src/main.c ****   }
 2848              		.loc 3 699 10 discriminator 1 view .LVU721
 2849 0032 FEE7     		b	.L163
 2850              	.L162:
 701:Core/Src/main.c ****   //uint8_t Logger_init_stat = FRAM_read8(BUFFER_STAT);
 2851              		.loc 3 701 8 view .LVU722
 2852 0034 2748     		ldr	r0, .L172+4
 2853 0036 FFF7FEFF 		bl	myprintf
 2854              	.LVL286:
 704:Core/Src/main.c ****     uint16_t prodID;
 2855              		.loc 3 704 5 view .LVU723
 705:Core/Src/main.c ****     FRAM_getID(&manufID, &prodID);  //Check FRAM parameter
 2856              		.loc 3 705 5 view .LVU724
 706:Core/Src/main.c ****     myprintf("Manufacture ID: 0x%X\n", manufID);
 2857              		.loc 3 706 5 view .LVU725
 2858 003a 01A9     		add	r1, sp, #4
 2859 003c 0DF10700 		add	r0, sp, #7
 2860 0040 FFF7FEFF 		bl	FRAM_getID
 2861              	.LVL287:
 707:Core/Src/main.c ****     myprintf("product ID: 0x%X\n", prodID);
 2862              		.loc 3 707 5 view .LVU726
 2863 0044 9DF80710 		ldrb	r1, [sp, #7]	@ zero_extendqisi2
 2864 0048 2348     		ldr	r0, .L172+8
 2865 004a FFF7FEFF 		bl	myprintf
 2866              	.LVL288:
 708:Core/Src/main.c ****     myprintf("Current iterator: %d\n", LOCATION_BUFFER_ITERATOR);
 2867              		.loc 3 708 5 view .LVU727
 2868 004e BDF80410 		ldrh	r1, [sp, #4]
 2869 0052 2248     		ldr	r0, .L172+12
 2870 0054 FFF7FEFF 		bl	myprintf
 2871              	.LVL289:
 709:Core/Src/main.c ****   #endif
 2872              		.loc 3 709 5 view .LVU728
 2873 0058 214B     		ldr	r3, .L172+16
 2874 005a 1968     		ldr	r1, [r3]
 2875 005c 2148     		ldr	r0, .L172+20
 2876 005e FFF7FEFF 		bl	myprintf
 2877              	.LVL290:
 719:Core/Src/main.c ****     #ifdef DEBUG
 2878              		.loc 3 719 3 view .LVU729
 719:Core/Src/main.c ****     #ifdef DEBUG
 2879              		.loc 3 719 6 is_stmt 0 view .LVU730
 2880 0062 0021     		movs	r1, #0
 2881 0064 0846     		mov	r0, r1
 2882 0066 FFF7FEFF 		bl	buffer_sync
 2883              	.LVL291:
 719:Core/Src/main.c ****     #ifdef DEBUG
 2884              		.loc 3 719 5 view .LVU731
 2885 006a 0228     		cmp	r0, #2
 2886 006c 16D0     		beq	.L170
 726:Core/Src/main.c ****     HAL_Delay(500);
 2887              		.loc 3 726 3 is_stmt 1 view .LVU732
 726:Core/Src/main.c ****     HAL_Delay(500);
 2888              		.loc 3 726 6 is_stmt 0 view .LVU733
 2889 006e 4FF40071 		mov	r1, #512
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 134


 2890 0072 4FF09040 		mov	r0, #1207959552
 2891 0076 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 2892              	.LVL292:
 726:Core/Src/main.c ****     HAL_Delay(500);
 2893              		.loc 3 726 5 view .LVU734
 2894 007a A0B1     		cbz	r0, .L165
 727:Core/Src/main.c ****     USB_init(USB_PLUGIN);  
 2895              		.loc 3 727 5 is_stmt 1 view .LVU735
 2896 007c 4FF4FA70 		mov	r0, #500
 2897 0080 FFF7FEFF 		bl	HAL_Delay
 2898              	.LVL293:
 728:Core/Src/main.c ****   }
 2899              		.loc 3 728 5 view .LVU736
 2900 0084 0620     		movs	r0, #6
 2901 0086 FFF7FEFF 		bl	USB_init
 2902              	.LVL294:
 2903              	.L166:
 736:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)Rx_data, sizeof(Rx_data));
 2904              		.loc 3 736 3 view .LVU737
 736:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)Rx_data, sizeof(Rx_data));
 2905              		.loc 3 736 15 is_stmt 0 view .LVU738
 2906 008a 174B     		ldr	r3, .L172+24
 2907 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 736:Core/Src/main.c ****     HAL_UARTEx_ReceiveToIdle_IT(&huart2, (uint8_t *)Rx_data, sizeof(Rx_data));
 2908              		.loc 3 736 5 view .LVU739
 2909 008e 73B1     		cbz	r3, .L171
 2910              	.L168:
 776:Core/Src/main.c ****   {
 2911              		.loc 3 776 3 is_stmt 1 view .LVU740
 778:Core/Src/main.c ****       appendDATA();
 2912              		.loc 3 778 5 view .LVU741
 778:Core/Src/main.c ****       appendDATA();
 2913              		.loc 3 778 17 is_stmt 0 view .LVU742
 2914 0090 154B     		ldr	r3, .L172+24
 2915 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 778:Core/Src/main.c ****       appendDATA();
 2916              		.loc 3 778 7 view .LVU743
 2917 0094 002B     		cmp	r3, #0
 2918 0096 FBD1     		bne	.L168
 779:Core/Src/main.c ****     }
 2919              		.loc 3 779 7 is_stmt 1 view .LVU744
 2920 0098 FFF7FEFF 		bl	appendDATA
 2921              	.LVL295:
 2922              	.L170:
 721:Core/Src/main.c ****     #endif
 2923              		.loc 3 721 5 view .LVU745
 2924 009c 1348     		ldr	r0, .L172+28
 2925 009e FFF7FEFF 		bl	myprintf
 2926              	.LVL296:
 723:Core/Src/main.c ****   }  
 2927              		.loc 3 723 5 view .LVU746
 2928 00a2 FFF7FEFF 		bl	__NVIC_SystemReset
 2929              	.LVL297:
 2930              	.L165:
 730:Core/Src/main.c **** 
 2931              		.loc 3 730 8 view .LVU747
 2932 00a6 0720     		movs	r0, #7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 135


 2933 00a8 FFF7FEFF 		bl	USB_init
 2934              	.LVL298:
 2935 00ac EDE7     		b	.L166
 2936              	.L171:
 737:Core/Src/main.c ****     /*Initialize FRAM buffer with address value 3*/
 2937              		.loc 3 737 5 view .LVU748
 2938 00ae 4FF48052 		mov	r2, #4096
 2939 00b2 0F49     		ldr	r1, .L172+32
 2940 00b4 0F48     		ldr	r0, .L172+36
 2941 00b6 FFF7FEFF 		bl	HAL_UARTEx_ReceiveToIdle_IT
 2942              	.LVL299:
 740:Core/Src/main.c ****     HAL_GPIO_WritePin(SD_EN_GPIO_Port, SD_EN_Pin, RESET);
 2943              		.loc 3 740 5 view .LVU749
 2944 00ba FFF7FEFF 		bl	turn_off_spi_SD
 2945              	.LVL300:
 741:Core/Src/main.c ****   }
 2946              		.loc 3 741 5 view .LVU750
 2947 00be 0022     		movs	r2, #0
 2948 00c0 4FF48071 		mov	r1, #256
 2949 00c4 4FF09040 		mov	r0, #1207959552
 2950 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 2951              	.LVL301:
 2952 00cc E0E7     		b	.L168
 2953              	.L173:
 2954 00ce 00BF     		.align	2
 2955              	.L172:
 2956 00d0 00000000 		.word	.LC27
 2957 00d4 34000000 		.word	.LC28
 2958 00d8 44000000 		.word	.LC29
 2959 00dc 5C000000 		.word	.LC30
 2960 00e0 00000000 		.word	.LANCHOR9
 2961 00e4 70000000 		.word	.LC31
 2962 00e8 00000000 		.word	.LANCHOR1
 2963 00ec 88000000 		.word	.LC32
 2964 00f0 00000000 		.word	Rx_data
 2965 00f4 00000000 		.word	huart2
 2966              		.cfi_endproc
 2967              	.LFE147:
 2969              		.comm	FATPATH,4,4
 2970              		.comm	fres,1,1
 2971              		.comm	fil,560,4
 2972              		.comm	workingFile,560,4
 2973              		.comm	newFile,560,4
 2974              		.comm	FatFs,560,4
 2975              		.global	LOCATION_BUFFER_ITERATOR
 2976              		.global	SD_MOUNT_FAIL
 2977              		.global	BOARD_POWER_UP
 2978              		.global	BUFFER_NEAR_FULL_
 2979              		.global	RESET_FLAG
 2980              		.global	SD_Flag
 2981              		.global	RX_BACKUP_Flag
 2982              		.global	RX_Flag
 2983              		.global	USB_Flag
 2984              		.comm	Rx_back_up,4096,4
 2985              		.comm	Rx_data,4096,4
 2986              		.comm	wakeup,8,4
 2987              		.comm	huart2,132,4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 136


 2988              		.comm	hspi2,100,4
 2989              		.comm	hspi1,100,4
 2990              		.comm	hcrc,36,4
 2991              		.section	.bss.BUFFER_NEAR_FULL_,"aw",%nobits
 2994              	BUFFER_NEAR_FULL_:
 2995 0000 00       		.space	1
 2996              		.section	.bss.RX_BACKUP_Flag,"aw",%nobits
 2997              		.set	.LANCHOR4,. + 0
 3000              	RX_BACKUP_Flag:
 3001 0000 00       		.space	1
 3002              		.section	.bss.RX_Flag,"aw",%nobits
 3003              		.set	.LANCHOR3,. + 0
 3006              	RX_Flag:
 3007 0000 00       		.space	1
 3008              		.section	.bss.SD_Flag,"aw",%nobits
 3009              		.set	.LANCHOR2,. + 0
 3012              	SD_Flag:
 3013 0000 00       		.space	1
 3014              		.section	.bss.SD_MOUNT_FAIL,"aw",%nobits
 3015              		.set	.LANCHOR6,. + 0
 3018              	SD_MOUNT_FAIL:
 3019 0000 00       		.space	1
 3020              		.section	.bss.USB_Flag,"aw",%nobits
 3021              		.set	.LANCHOR1,. + 0
 3024              	USB_Flag:
 3025 0000 00       		.space	1
 3026              		.section	.bss.buffer.10706,"aw",%nobits
 3027              		.align	2
 3028              		.set	.LANCHOR0,. + 0
 3031              	buffer.10706:
 3032 0000 00000000 		.space	500
 3032      00000000 
 3032      00000000 
 3032      00000000 
 3032      00000000 
 3033              		.section	.bss.newFileName,"aw",%nobits
 3034              		.align	2
 3035              		.set	.LANCHOR5,. + 0
 3038              	newFileName:
 3039 0000 00000000 		.space	13
 3039      00000000 
 3039      00000000 
 3039      00
 3040              		.section	.data.BOARD_POWER_UP,"aw"
 3041              		.set	.LANCHOR8,. + 0
 3044              	BOARD_POWER_UP:
 3045 0000 01       		.byte	1
 3046              		.section	.data.LOCATION_BUFFER_ITERATOR,"aw"
 3047              		.align	2
 3048              		.set	.LANCHOR9,. + 0
 3051              	LOCATION_BUFFER_ITERATOR:
 3052 0000 14000000 		.word	20
 3053              		.section	.data.RESET_FLAG,"aw"
 3054              		.set	.LANCHOR7,. + 0
 3057              	RESET_FLAG:
 3058 0000 01       		.byte	1
 3059              		.text
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 137


 3060              	.Letext0:
 3061              		.file 4 "c:\\ncs\\v1.7.1\\toolchain\\opt\\arm-none-eabi\\include\\machine\\_default_types.h"
 3062              		.file 5 "c:\\ncs\\v1.7.1\\toolchain\\opt\\arm-none-eabi\\include\\sys\\_stdint.h"
 3063              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 3064              		.file 7 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l412xx.h"
 3065              		.file 8 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 3066              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 3067              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 3068              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 3069              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 3070              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_crc.h"
 3071              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 3072              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 3073              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 3074              		.file 17 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart_ex.h"
 3075              		.file 18 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 3076              		.file 19 "Middlewares/Third_Party/FatFs/src/integer.h"
 3077              		.file 20 "c:\\ncs\\v1.7.1\\toolchain\\opt\\arm-none-eabi\\include\\sys\\lock.h"
 3078              		.file 21 "c:\\ncs\\v1.7.1\\toolchain\\opt\\arm-none-eabi\\include\\sys\\_types.h"
 3079              		.file 22 "c:\\ncs\\v1.7.1\\toolchain\\opt\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stddef.h"
 3080              		.file 23 "c:\\ncs\\v1.7.1\\toolchain\\opt\\arm-none-eabi\\include\\sys\\reent.h"
 3081              		.file 24 "c:\\ncs\\v1.7.1\\toolchain\\opt\\arm-none-eabi\\include\\stdlib.h"
 3082              		.file 25 "Middlewares/Third_Party/FatFs/src/ff.h"
 3083              		.file 26 "Middlewares/Third_Party/FatFs/src/diskio.h"
 3084              		.file 27 "Middlewares/Third_Party/FatFs/src/ff_gen_drv.h"
 3085              		.file 28 "FATFS/Target/user_diskio.h"
 3086              		.file 29 "FATFS/App/fatfs.h"
 3087              		.file 30 "c:\\ncs\\v1.7.1\\toolchain\\opt\\lib\\gcc\\arm-none-eabi\\9.2.1\\include\\stdarg.h"
 3088              		.file 31 "c:\\ncs\\v1.7.1\\toolchain\\opt\\arm-none-eabi\\include\\stdio.h"
 3089              		.file 32 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 3090              		.file 33 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 3091              		.file 34 "Core/Inc/SPI_FRAM.h"
 3092              		.file 35 "c:\\ncs\\v1.7.1\\toolchain\\opt\\arm-none-eabi\\include\\string.h"
 3093              		.file 36 "USB_DEVICE/App/usb_device.h"
 3094              		.file 37 "<built-in>"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 138


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:18     .text.__NVIC_SystemReset:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:25     .text.__NVIC_SystemReset:00000000 __NVIC_SystemReset
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:88     .text.__NVIC_SystemReset:0000001c $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:94     .text.MX_GPIO_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:100    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:256    .text.MX_GPIO_Init:000000bc $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:262    .text.turn_off_spi_FRAM:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:268    .text.turn_off_spi_FRAM:00000000 turn_off_spi_FRAM
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:325    .text.turn_off_spi_FRAM:00000040 $d
                            *COM*:00000064 hspi1
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:330    .text.turn_off_spi_SD:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:336    .text.turn_off_spi_SD:00000000 turn_off_spi_SD
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:395    .text.turn_off_spi_SD:0000003c $d
                            *COM*:00000064 hspi2
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:401    .text.myprintf:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:408    .text.myprintf:00000000 myprintf
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:479    .text.myprintf:00000038 $d
                            *COM*:00000084 huart2
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:485    .text.USB_init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:492    .text.USB_init:00000000 USB_init
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:562    .text.USB_init:00000038 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:567    .text.HAL_UARTEx_RxEventCallback:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:574    .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:655    .text.HAL_UARTEx_RxEventCallback:00000058 $d
                            *COM*:00001000 Rx_data
                            *COM*:00001000 Rx_back_up
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:665    .text.SD_error:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:672    .text.SD_error:00000000 SD_error
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:772    .text.Error_Handler:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:779    .text.Error_Handler:00000000 Error_Handler
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:810    .text.MX_SPI1_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:816    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:893    .text.MX_SPI1_Init:00000044 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:899    .text.MX_SPI2_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:905    .text.MX_SPI2_Init:00000000 MX_SPI2_Init
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:981    .text.MX_SPI2_Init:00000040 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:987    .rodata.newLog.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:1031   .text.newLog:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:1038   .text.newLog:00000000 newLog
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:1520   .text.newLog:00000248 $d
                            *COM*:00000004 FATPATH
                            *COM*:00000230 FatFs
                            *COM*:00000001 fres
                            *COM*:00000230 newFile
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:1548   .rodata.appendFile.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:1561   .text.appendFile:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:1568   .text.appendFile:00000000 appendFile
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:1836   .text.buffer_sync:00000000 buffer_sync
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:1803   .text.appendFile:00000118 $d
                            *COM*:00000230 workingFile
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:1818   .rodata.buffer_sync.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:1829   .text.buffer_sync:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2049   .text.buffer_sync:000000d8 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2058   .text.MX_USART2_UART_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2064   .text.MX_USART2_UART_Init:00000000 MX_USART2_UART_Init
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 139


C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2125   .text.MX_USART2_UART_Init:00000030 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2131   .text.MX_CRC_Init:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2137   .text.MX_CRC_Init:00000000 MX_CRC_Init
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2185   .text.MX_CRC_Init:00000024 $d
                            *COM*:00000024 hcrc
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2191   .text.SystemClock_Config:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2198   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2317   .text.Stop_Mode_Entry:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2324   .text.Stop_Mode_Entry:00000000 Stop_Mode_Entry
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2400   .text.Stop_Mode_Entry:00000064 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2406   .rodata.appendDATA.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2429   .text.appendDATA:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2436   .text.appendDATA:00000000 appendDATA
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2750   .text.appendDATA:00000180 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2768   .rodata.main.str1.4:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2789   .text.main:00000000 $t
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2796   .text.main:00000000 main
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2956   .text.main:000000d0 $d
                            *COM*:00000230 fil
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3051   .data.LOCATION_BUFFER_ITERATOR:00000000 LOCATION_BUFFER_ITERATOR
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3018   .bss.SD_MOUNT_FAIL:00000000 SD_MOUNT_FAIL
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3044   .data.BOARD_POWER_UP:00000000 BOARD_POWER_UP
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2994   .bss.BUFFER_NEAR_FULL_:00000000 BUFFER_NEAR_FULL_
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3057   .data.RESET_FLAG:00000000 RESET_FLAG
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3012   .bss.SD_Flag:00000000 SD_Flag
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3000   .bss.RX_BACKUP_Flag:00000000 RX_BACKUP_Flag
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3006   .bss.RX_Flag:00000000 RX_Flag
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3024   .bss.USB_Flag:00000000 USB_Flag
                            *COM*:00000008 wakeup
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:2995   .bss.BUFFER_NEAR_FULL_:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3001   .bss.RX_BACKUP_Flag:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3007   .bss.RX_Flag:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3013   .bss.SD_Flag:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3019   .bss.SD_MOUNT_FAIL:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3025   .bss.USB_Flag:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3027   .bss.buffer.10706:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3031   .bss.buffer.10706:00000000 buffer.10706
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3034   .bss.newFileName:00000000 $d
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3038   .bss.newFileName:00000000 newFileName
C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s:3047   .data.LOCATION_BUFFER_ITERATOR:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_DeInit
vsnprintf
strlen
HAL_UART_Transmit
MX_USB_DEVICE_Init
HAL_UARTEx_ReceiveToIdle_IT
strcat
memset
HAL_Delay
HAL_SPI_Init
HAL_GPIO_DeInit
MX_FATFS_Init
f_mount
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccL5nf9g.s 			page 140


FATFS_UnLinkDriver
FRAM_read8
sprintf
FRAM_writeEnable
FRAM_write8
f_close
FRAM_sleepEnable
f_open
USERPath
f_lseek
f_sync
FRAM_read
strncpy
f_write
HAL_UART_Init
HAL_CRC_Init
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_UARTEx_EnableStopMode
HAL_DBGMCU_DisableDBGSleepMode
HAL_DBGMCU_DisableDBGStopMode
HAL_DBGMCU_DisableDBGStandbyMode
HAL_SuspendTick
HAL_PWREx_EnterSTOP1Mode
HAL_ResumeTick
HAL_UARTEx_DisableStopMode
HAL_GetTick
FRAM_write
HAL_Init
FRAM_begin
FRAM_getID
HAL_GPIO_ReadPin
